<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>tBlog</title>
  
  
  <link href="https://sirius-tblog.github.io/atom.xml" rel="self"/>
  
  <link href="https://sirius-tblog.github.io/"/>
  <updated>2023-05-23T14:32:16.199Z</updated>
  <id>https://sirius-tblog.github.io/</id>
  
  <author>
    <name>Mr.T</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://sirius-tblog.github.io/posts/4a17b156.html"/>
    <id>https://sirius-tblog.github.io/posts/4a17b156.html</id>
    <published>2023-05-23T14:32:16.198Z</published>
    <updated>2023-05-23T14:32:16.199Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（16）待机唤醒</title>
    <link href="https://sirius-tblog.github.io/posts/1201734687.html"/>
    <id>https://sirius-tblog.github.io/posts/1201734687.html</id>
    <published>2022-11-08T04:09:18.000Z</published>
    <updated>2023-04-05T14:20:22.643Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作，实现跑马灯样式实验。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a001b03c01.jpg" alt="" title="硬件电路连接" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>beep</td><td>output</td><td>PB8</td><td>LED0驱动</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件驱动GPIO口。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="wkupc"><a class="markdownIt-Anchor" href="#wkupc"></a> wkup.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wkup.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;wkup.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">Sys_Standby</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;  </span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR, ENABLE);<span class="comment">//使能PWR外设时钟</span></span><br><span class="line">PWR_WakeUpPinCmd(ENABLE);  <span class="comment">//使能唤醒管脚功能</span></span><br><span class="line">PWR_EnterSTANDBYMode();  <span class="comment">//进入待命（STANDBY）模式  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//系统进入待机模式</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Sys_Enter_Standby</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line">RCC_APB2PeriphResetCmd(<span class="number">0X01FC</span>,DISABLE);<span class="comment">//复位所有IO口</span></span><br><span class="line">Sys_Standby();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//检测WKUP脚的信号</span></span><br><span class="line"><span class="comment">//返回值1:连续按下3s以上</span></span><br><span class="line"><span class="comment">//      0:错误的触发</span></span><br><span class="line">u8 <span class="title function_">Check_WKUP</span><span class="params">(<span class="type">void</span>)</span> </span><br><span class="line">&#123;</span><br><span class="line">u8 t=<span class="number">0</span>;<span class="comment">//记录按下的时间</span></span><br><span class="line">LED0=<span class="number">0</span>; <span class="comment">//亮灯DS0 </span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(WKUP_KD)</span><br><span class="line">&#123;</span><br><span class="line">t++;<span class="comment">//已经按下了 </span></span><br><span class="line">delay_ms(<span class="number">30</span>);</span><br><span class="line"><span class="keyword">if</span>(t&gt;=<span class="number">100</span>)<span class="comment">//按下超过3秒钟</span></span><br><span class="line">&#123;</span><br><span class="line">LED0=<span class="number">0</span>; <span class="comment">//点亮DS0 </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>; <span class="comment">//按下3s以上了</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> </span><br><span class="line">&#123; </span><br><span class="line">LED0=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//按下不足3秒</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//中断,检测到PA0脚的一个上升沿.  </span></span><br><span class="line"><span class="comment">//中断线0线上的中断检测</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI0_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;                  </span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line0); <span class="comment">// 清除LINE10上的中断标志位  </span></span><br><span class="line"><span class="keyword">if</span>(Check_WKUP())<span class="comment">//关机?</span></span><br><span class="line">&#123;  </span><br><span class="line">Sys_Enter_Standby();  </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//PA0 WKUP唤醒初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">WKUP_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  GPIO_InitTypeDef  GPIO_InitStructure;    </span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">EXTI_InitTypeDef EXTI_InitStructure;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_AFIO, ENABLE);<span class="comment">//使能GPIOA和复用功能时钟</span></span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin =GPIO_Pin_0; <span class="comment">//PA.0</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode =GPIO_Mode_IPD;<span class="comment">//上拉输入</span></span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="comment">//初始化IO</span></span><br><span class="line">    <span class="comment">//使用外部中断方式</span></span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOA, GPIO_PinSource0);<span class="comment">//中断线0连接GPIOA.0</span></span><br><span class="line"></span><br><span class="line">  EXTI_InitStructure.EXTI_Line = EXTI_Line0;<span class="comment">//设置按键所有的外部线路</span></span><br><span class="line">EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;<span class="comment">//设外外部中断模式:EXTI线路为中断请求</span></span><br><span class="line">EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;  <span class="comment">//上升沿触发</span></span><br><span class="line"> EXTI_InitStructure.EXTI_LineCmd = ENABLE;</span><br><span class="line">EXTI_Init(&amp;EXTI_InitStructure);<span class="comment">// 初始化外部中断</span></span><br><span class="line"></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn; <span class="comment">//使能按键所在的外部中断通道</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>; <span class="comment">//先占优先级2级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">2</span>; <span class="comment">//从优先级2级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; <span class="comment">//使能外部中断通道</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure); <span class="comment">//根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(Check_WKUP()==<span class="number">0</span>) Sys_Standby();    <span class="comment">//不是开机,进入待机模式  </span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="rtch"><a class="markdownIt-Anchor" href="#rtch"></a> rtc.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wkup.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __WKUP_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __WKUP_H </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WKUP_KD PAin(0)<span class="comment">//PA0 检测是否外部WK_UP按键按下</span></span></span><br><span class="line"> </span><br><span class="line">u8 <span class="title function_">Check_WKUP</span><span class="params">(<span class="type">void</span>)</span>;  <span class="comment">//检测WKUP脚的信号</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">WKUP_Init</span><span class="params">(<span class="type">void</span>)</span>; <span class="comment">//PA0 WKUP唤醒初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Sys_Enter_Standby</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//系统进入待机模式</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;lcd.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;wkup.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123; </span><br><span class="line">  </span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//设置中断优先级分组为组2：2位抢占优先级，2位响应优先级</span></span><br><span class="line">uart_init(<span class="number">115200</span>); <span class="comment">//串口初始化为115200</span></span><br><span class="line"> LED_Init();     <span class="comment">//LED端口初始化 </span></span><br><span class="line">WKUP_Init(); <span class="comment">//待机唤醒初始化</span></span><br><span class="line">LCD_Init(); <span class="comment">//LCD初始化</span></span><br><span class="line">POINT_COLOR=RED;</span><br><span class="line"> </span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">50</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;Elite STM32&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">70</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;WKUP TEST&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">90</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;ATOM@ALIENTEK&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">110</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;2015/1/14&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED0=!LED0;</span><br><span class="line">delay_ms(<span class="number">250</span>);</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="代码片段分析"><a class="markdownIt-Anchor" href="#代码片段分析"></a> 代码片段分析</h2><p>略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（15）RTC芯片</title>
    <link href="https://sirius-tblog.github.io/posts/53287182.html"/>
    <id>https://sirius-tblog.github.io/posts/53287182.html</id>
    <published>2022-11-08T03:59:18.000Z</published>
    <updated>2023-04-05T14:20:13.456Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作，实现跑马灯样式实验。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a001b03c01.jpg" alt="" title="硬件电路连接" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>beep</td><td>output</td><td>PB8</td><td>LED0驱动</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件驱动GPIO口。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="rtcc"><a class="markdownIt-Anchor" href="#rtcc"></a> rtc.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// rtc.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;rtc.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">_calendar_obj calendar;<span class="comment">//时钟结构体 </span></span><br><span class="line"> </span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">RTC_NVIC_Config</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = RTC_IRQn;<span class="comment">//RTC全局中断</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0</span>;<span class="comment">//先占优先级1位,从优先级3位</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">0</span>;<span class="comment">//先占优先级0位,从优先级4位</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;<span class="comment">//使能该通道中断</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);<span class="comment">//根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实时时钟配置</span></span><br><span class="line"><span class="comment">//初始化RTC时钟,同时检测时钟是否工作正常</span></span><br><span class="line"><span class="comment">//BKP-&gt;DR1用于保存是否第一次配置的设置</span></span><br><span class="line"><span class="comment">//返回0:正常</span></span><br><span class="line"><span class="comment">//其他:错误代码</span></span><br><span class="line"></span><br><span class="line">u8 <span class="title function_">RTC_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//检查是不是第一次配置时钟</span></span><br><span class="line">u8 temp=<span class="number">0</span>;</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR | RCC_APB1Periph_BKP, ENABLE);<span class="comment">//使能PWR和BKP外设时钟   </span></span><br><span class="line">PWR_BackupAccessCmd(ENABLE);<span class="comment">//使能后备寄存器访问  </span></span><br><span class="line"><span class="keyword">if</span> (BKP_ReadBackupRegister(BKP_DR1) != <span class="number">0x5050</span>)<span class="comment">//从指定的后备寄存器中读出数据:读出了与写入的指定数据不相乎</span></span><br><span class="line">&#123;  </span><br><span class="line">BKP_DeInit();<span class="comment">//复位备份区域 </span></span><br><span class="line">RCC_LSEConfig(RCC_LSE_ON);<span class="comment">//设置外部低速晶振(LSE),使用外设低速晶振</span></span><br><span class="line"><span class="keyword">while</span> (RCC_GetFlagStatus(RCC_FLAG_LSERDY) == RESET&amp;&amp;temp&lt;<span class="number">250</span>)<span class="comment">//检查指定的RCC标志位设置与否,等待低速晶振就绪</span></span><br><span class="line">&#123;</span><br><span class="line">temp++;</span><br><span class="line">delay_ms(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(temp&gt;=<span class="number">250</span>)<span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//初始化时钟失败,晶振有问题    </span></span><br><span class="line">RCC_RTCCLKConfig(RCC_RTCCLKSource_LSE);<span class="comment">//设置RTC时钟(RTCCLK),选择LSE作为RTC时钟    </span></span><br><span class="line">RCC_RTCCLKCmd(ENABLE);<span class="comment">//使能RTC时钟  </span></span><br><span class="line">RTC_WaitForLastTask();<span class="comment">//等待最近一次对RTC寄存器的写操作完成</span></span><br><span class="line">RTC_WaitForSynchro();<span class="comment">//等待RTC寄存器同步  </span></span><br><span class="line">RTC_ITConfig(RTC_IT_SEC, ENABLE);<span class="comment">//使能RTC秒中断</span></span><br><span class="line">RTC_WaitForLastTask();<span class="comment">//等待最近一次对RTC寄存器的写操作完成</span></span><br><span class="line">RTC_EnterConfigMode();<span class="comment">/// 允许配置</span></span><br><span class="line">RTC_SetPrescaler(<span class="number">32767</span>); <span class="comment">//设置RTC预分频的值</span></span><br><span class="line">RTC_WaitForLastTask();<span class="comment">//等待最近一次对RTC寄存器的写操作完成</span></span><br><span class="line">RTC_Set(<span class="number">2015</span>,<span class="number">1</span>,<span class="number">14</span>,<span class="number">17</span>,<span class="number">42</span>,<span class="number">55</span>);  <span class="comment">//设置时间</span></span><br><span class="line">RTC_ExitConfigMode(); <span class="comment">//退出配置模式  </span></span><br><span class="line">BKP_WriteBackupRegister(BKP_DR1, <span class="number">0X5050</span>);<span class="comment">//向指定的后备寄存器中写入用户程序数据</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//系统继续计时</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">RTC_WaitForSynchro();<span class="comment">//等待最近一次对RTC寄存器的写操作完成</span></span><br><span class="line">RTC_ITConfig(RTC_IT_SEC, ENABLE);<span class="comment">//使能RTC秒中断</span></span><br><span class="line">RTC_WaitForLastTask();<span class="comment">//等待最近一次对RTC寄存器的写操作完成</span></span><br><span class="line">&#125;</span><br><span class="line">RTC_NVIC_Config();<span class="comment">//RCT中断分组设置         </span></span><br><span class="line">RTC_Get();<span class="comment">//更新时间</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//ok</span></span><br><span class="line"></span><br><span class="line">&#125;     </span><br><span class="line"><span class="comment">//RTC时钟中断</span></span><br><span class="line"><span class="comment">//每秒触发一次  </span></span><br><span class="line"><span class="comment">//extern u16 tcnt; </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">RTC_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span> (RTC_GetITStatus(RTC_IT_SEC) != RESET)<span class="comment">//秒钟中断</span></span><br><span class="line">&#123;</span><br><span class="line">RTC_Get();<span class="comment">//更新时间   </span></span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">if</span>(RTC_GetITStatus(RTC_IT_ALR)!= RESET)<span class="comment">//闹钟中断</span></span><br><span class="line">&#123;</span><br><span class="line">RTC_ClearITPendingBit(RTC_IT_ALR);<span class="comment">//清闹钟中断  </span></span><br><span class="line">  RTC_Get();<span class="comment">//更新时间   </span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Alarm Time:%d-%d-%d %d:%d:%d\n&quot;</span>,calendar.w_year,calendar.w_month,calendar.w_date,calendar.hour,calendar.min,calendar.sec);<span class="comment">//输出闹铃时间</span></span><br><span class="line"></span><br><span class="line">  &#125;    </span><br><span class="line">RTC_ClearITPendingBit(RTC_IT_SEC|RTC_IT_OW);<span class="comment">//清闹钟中断</span></span><br><span class="line">RTC_WaitForLastTask();           </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断是否是闰年函数</span></span><br><span class="line"><span class="comment">//月份   1  2  3  4  5  6  7  8  9  10 11 12</span></span><br><span class="line"><span class="comment">//闰年   31 29 31 30 31 30 31 31 30 31 30 31</span></span><br><span class="line"><span class="comment">//非闰年 31 28 31 30 31 30 31 31 30 31 30 31</span></span><br><span class="line"><span class="comment">//输入:年份</span></span><br><span class="line"><span class="comment">//输出:该年份是不是闰年.1,是.0,不是</span></span><br><span class="line">u8 <span class="title function_">Is_Leap_Year</span><span class="params">(u16 year)</span></span><br><span class="line">&#123;  </span><br><span class="line"><span class="keyword">if</span>(year%<span class="number">4</span>==<span class="number">0</span>) <span class="comment">//必须能被4整除</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span>(year%<span class="number">100</span>==<span class="number">0</span>) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span>(year%<span class="number">400</span>==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//如果以00结尾,还要能被400整除    </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;   </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;    </span><br><span class="line"><span class="comment">//设置时钟</span></span><br><span class="line"><span class="comment">//把输入的时钟转换为秒钟</span></span><br><span class="line"><span class="comment">//以1970年1月1日为基准</span></span><br><span class="line"><span class="comment">//1970~2099年为合法年份</span></span><br><span class="line"><span class="comment">//返回值:0,成功;其他:错误代码.</span></span><br><span class="line"><span class="comment">//月份数据表 </span></span><br><span class="line">u8 <span class="type">const</span> table_week[<span class="number">12</span>]=&#123;<span class="number">0</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>&#125;; <span class="comment">//月修正数据表  </span></span><br><span class="line"><span class="comment">//平年的月份日期表</span></span><br><span class="line"><span class="type">const</span> u8 mon_table[<span class="number">12</span>]=&#123;<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">u8 <span class="title function_">RTC_Set</span><span class="params">(u16 syear,u8 smon,u8 sday,u8 hour,u8 min,u8 sec)</span></span><br><span class="line">&#123;</span><br><span class="line">u16 t;</span><br><span class="line">u32 seccount=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(syear&lt;<span class="number">1970</span>||syear&gt;<span class="number">2099</span>)<span class="keyword">return</span> <span class="number">1</span>;   </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">1970</span>;t&lt;syear;t++)<span class="comment">//把所有年份的秒钟相加</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Is_Leap_Year(t))seccount+=<span class="number">31622400</span>;<span class="comment">//闰年的秒钟数</span></span><br><span class="line"><span class="keyword">else</span> seccount+=<span class="number">31536000</span>;  <span class="comment">//平年的秒钟数</span></span><br><span class="line">&#125;</span><br><span class="line">smon-=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;smon;t++)   <span class="comment">//把前面月份的秒钟数相加</span></span><br><span class="line">&#123;</span><br><span class="line">seccount+=(u32)mon_table[t]*<span class="number">86400</span>;<span class="comment">//月份秒钟数相加</span></span><br><span class="line"><span class="keyword">if</span>(Is_Leap_Year(syear)&amp;&amp;t==<span class="number">1</span>)seccount+=<span class="number">86400</span>;<span class="comment">//闰年2月份增加一天的秒钟数   </span></span><br><span class="line">&#125;</span><br><span class="line">seccount+=(u32)(sday<span class="number">-1</span>)*<span class="number">86400</span>;<span class="comment">//把前面日期的秒钟数相加 </span></span><br><span class="line">seccount+=(u32)hour*<span class="number">3600</span>;<span class="comment">//小时秒钟数</span></span><br><span class="line">    seccount+=(u32)min*<span class="number">60</span>; <span class="comment">//分钟秒钟数</span></span><br><span class="line">seccount+=sec;<span class="comment">//最后的秒钟加上去</span></span><br><span class="line"></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR | RCC_APB1Periph_BKP, ENABLE);<span class="comment">//使能PWR和BKP外设时钟  </span></span><br><span class="line">PWR_BackupAccessCmd(ENABLE);<span class="comment">//使能RTC和后备寄存器访问 </span></span><br><span class="line">RTC_SetCounter(seccount);<span class="comment">//设置RTC计数器的值</span></span><br><span class="line"></span><br><span class="line">RTC_WaitForLastTask();<span class="comment">//等待最近一次对RTC寄存器的写操作完成  </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化闹钟  </span></span><br><span class="line"><span class="comment">//以1970年1月1日为基准</span></span><br><span class="line"><span class="comment">//1970~2099年为合法年份</span></span><br><span class="line"><span class="comment">//syear,smon,sday,hour,min,sec：闹钟的年月日时分秒   </span></span><br><span class="line"><span class="comment">//返回值:0,成功;其他:错误代码.</span></span><br><span class="line">u8 <span class="title function_">RTC_Alarm_Set</span><span class="params">(u16 syear,u8 smon,u8 sday,u8 hour,u8 min,u8 sec)</span></span><br><span class="line">&#123;</span><br><span class="line">u16 t;</span><br><span class="line">u32 seccount=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(syear&lt;<span class="number">1970</span>||syear&gt;<span class="number">2099</span>)<span class="keyword">return</span> <span class="number">1</span>;   </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">1970</span>;t&lt;syear;t++)<span class="comment">//把所有年份的秒钟相加</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Is_Leap_Year(t))seccount+=<span class="number">31622400</span>;<span class="comment">//闰年的秒钟数</span></span><br><span class="line"><span class="keyword">else</span> seccount+=<span class="number">31536000</span>;  <span class="comment">//平年的秒钟数</span></span><br><span class="line">&#125;</span><br><span class="line">smon-=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;smon;t++)   <span class="comment">//把前面月份的秒钟数相加</span></span><br><span class="line">&#123;</span><br><span class="line">seccount+=(u32)mon_table[t]*<span class="number">86400</span>;<span class="comment">//月份秒钟数相加</span></span><br><span class="line"><span class="keyword">if</span>(Is_Leap_Year(syear)&amp;&amp;t==<span class="number">1</span>)seccount+=<span class="number">86400</span>;<span class="comment">//闰年2月份增加一天的秒钟数   </span></span><br><span class="line">&#125;</span><br><span class="line">seccount+=(u32)(sday<span class="number">-1</span>)*<span class="number">86400</span>;<span class="comment">//把前面日期的秒钟数相加 </span></span><br><span class="line">seccount+=(u32)hour*<span class="number">3600</span>;<span class="comment">//小时秒钟数</span></span><br><span class="line">    seccount+=(u32)min*<span class="number">60</span>; <span class="comment">//分钟秒钟数</span></span><br><span class="line">seccount+=sec;<span class="comment">//最后的秒钟加上去     </span></span><br><span class="line"><span class="comment">//设置时钟</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR | RCC_APB1Periph_BKP, ENABLE);<span class="comment">//使能PWR和BKP外设时钟   </span></span><br><span class="line">PWR_BackupAccessCmd(ENABLE);<span class="comment">//使能后备寄存器访问  </span></span><br><span class="line"><span class="comment">//上面三步是必须的!</span></span><br><span class="line"></span><br><span class="line">RTC_SetAlarm(seccount);</span><br><span class="line"> </span><br><span class="line">RTC_WaitForLastTask();<span class="comment">//等待最近一次对RTC寄存器的写操作完成  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//得到当前的时间</span></span><br><span class="line"><span class="comment">//返回值:0,成功;其他:错误代码.</span></span><br><span class="line">u8 <span class="title function_">RTC_Get</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> u16 daycnt=<span class="number">0</span>;</span><br><span class="line">u32 timecount=<span class="number">0</span>; </span><br><span class="line">u32 temp=<span class="number">0</span>;</span><br><span class="line">u16 temp1=<span class="number">0</span>;  </span><br><span class="line">    timecount=RTC_GetCounter(); </span><br><span class="line"> temp=timecount/<span class="number">86400</span>;   <span class="comment">//得到天数(秒钟数对应的)</span></span><br><span class="line"><span class="keyword">if</span>(daycnt!=temp)<span class="comment">//超过一天了</span></span><br><span class="line">&#123;  </span><br><span class="line">daycnt=temp;</span><br><span class="line">temp1=<span class="number">1970</span>;<span class="comment">//从1970年开始</span></span><br><span class="line"><span class="keyword">while</span>(temp&gt;=<span class="number">365</span>)</span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span>(Is_Leap_Year(temp1))<span class="comment">//是闰年</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp&gt;=<span class="number">366</span>)temp-=<span class="number">366</span>;<span class="comment">//闰年的秒钟数</span></span><br><span class="line"><span class="keyword">else</span> &#123;temp1++;<span class="keyword">break</span>;&#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> temp-=<span class="number">365</span>;  <span class="comment">//平年 </span></span><br><span class="line">temp1++;  </span><br><span class="line">&#125;   </span><br><span class="line">calendar.w_year=temp1;<span class="comment">//得到年份</span></span><br><span class="line">temp1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(temp&gt;=<span class="number">28</span>)<span class="comment">//超过了一个月</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Is_Leap_Year(calendar.w_year)&amp;&amp;temp1==<span class="number">1</span>)<span class="comment">//当年是不是闰年/2月份</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp&gt;=<span class="number">29</span>)temp-=<span class="number">29</span>;<span class="comment">//闰年的秒钟数</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp&gt;=mon_table[temp1])temp-=mon_table[temp1];<span class="comment">//平年</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">temp1++;  </span><br><span class="line">&#125;</span><br><span class="line">calendar.w_month=temp1+<span class="number">1</span>;<span class="comment">//得到月份</span></span><br><span class="line">calendar.w_date=temp+<span class="number">1</span>;  <span class="comment">//得到日期 </span></span><br><span class="line">&#125;</span><br><span class="line">temp=timecount%<span class="number">86400</span>;     <span class="comment">//得到秒钟数      </span></span><br><span class="line">calendar.hour=temp/<span class="number">3600</span>;     <span class="comment">//小时</span></span><br><span class="line">calendar.min=(temp%<span class="number">3600</span>)/<span class="number">60</span>; <span class="comment">//分钟</span></span><br><span class="line">calendar.sec=(temp%<span class="number">3600</span>)%<span class="number">60</span>; <span class="comment">//秒钟</span></span><br><span class="line">calendar.week=RTC_Get_Week(calendar.w_year,calendar.w_month,calendar.w_date);<span class="comment">//获取星期   </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//获得现在是星期几</span></span><br><span class="line"><span class="comment">//功能描述:输入公历日期得到星期(只允许1901-2099年)</span></span><br><span class="line"><span class="comment">//输入参数：公历年月日 </span></span><br><span class="line"><span class="comment">//返回值：星期号 </span></span><br><span class="line">u8 <span class="title function_">RTC_Get_Week</span><span class="params">(u16 year,u8 month,u8 day)</span></span><br><span class="line">&#123;</span><br><span class="line">u16 temp2;</span><br><span class="line">u8 yearH,yearL;</span><br><span class="line"></span><br><span class="line">yearH=year/<span class="number">100</span>;yearL=year%<span class="number">100</span>; </span><br><span class="line"><span class="comment">// 如果为21世纪,年份数加100  </span></span><br><span class="line"><span class="keyword">if</span> (yearH&gt;<span class="number">19</span>)yearL+=<span class="number">100</span>;</span><br><span class="line"><span class="comment">// 所过闰年数只算1900年之后的  </span></span><br><span class="line">temp2=yearL+yearL/<span class="number">4</span>;</span><br><span class="line">temp2=temp2%<span class="number">7</span>; </span><br><span class="line">temp2=temp2+day+table_week[month<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span> (yearL%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;month&lt;<span class="number">3</span>)temp2--;</span><br><span class="line"><span class="keyword">return</span>(temp2%<span class="number">7</span>);</span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="rtch"><a class="markdownIt-Anchor" href="#rtch"></a> rtc.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// rtc.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __RTC_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __RTC_H    </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//时间结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">vu8 hour;</span><br><span class="line">vu8 min;</span><br><span class="line">vu8 sec;</span><br><span class="line"><span class="comment">//公历日月年周</span></span><br><span class="line">vu16 w_year;</span><br><span class="line">vu8  w_month;</span><br><span class="line">vu8  w_date;</span><br><span class="line">vu8  week; </span><br><span class="line">&#125;_calendar_obj; </span><br><span class="line"><span class="keyword">extern</span> _calendar_obj calendar;<span class="comment">//日历结构体</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> u8 <span class="type">const</span> mon_table[<span class="number">12</span>];<span class="comment">//月份日期数据表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Disp_Time</span><span class="params">(u8 x,u8 y,u8 size)</span>;<span class="comment">//在制定位置开始显示时间</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Disp_Week</span><span class="params">(u8 x,u8 y,u8 size,u8 lang)</span>;<span class="comment">//在指定位置显示星期</span></span><br><span class="line">u8 <span class="title function_">RTC_Init</span><span class="params">(<span class="type">void</span>)</span>;        <span class="comment">//初始化RTC,返回0,失败;1,成功;</span></span><br><span class="line">u8 <span class="title function_">Is_Leap_Year</span><span class="params">(u16 year)</span>;<span class="comment">//平年,闰年判断</span></span><br><span class="line">u8 <span class="title function_">RTC_Alarm_Set</span><span class="params">(u16 syear,u8 smon,u8 sday,u8 hour,u8 min,u8 sec)</span>;</span><br><span class="line">u8 <span class="title function_">RTC_Get</span><span class="params">(<span class="type">void</span>)</span>;         <span class="comment">//更新时间   </span></span><br><span class="line">u8 <span class="title function_">RTC_Get_Week</span><span class="params">(u16 year,u8 month,u8 day)</span>;</span><br><span class="line">u8 <span class="title function_">RTC_Set</span><span class="params">(u16 syear,u8 smon,u8 sday,u8 hour,u8 min,u8 sec)</span>;<span class="comment">//设置时间 </span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;lcd.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usmart.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;rtc.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123; </span><br><span class="line"> u8 t=<span class="number">0</span>;</span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//设置中断优先级分组为组2：2位抢占优先级，2位响应优先级</span></span><br><span class="line">uart_init(<span class="number">115200</span>); <span class="comment">//串口初始化为115200</span></span><br><span class="line"> LED_Init();     <span class="comment">//LED端口初始化</span></span><br><span class="line">LCD_Init(); </span><br><span class="line">usmart_dev.init(SystemCoreClock/<span class="number">1000000</span>);<span class="comment">//初始化USMART</span></span><br><span class="line">RTC_Init();  <span class="comment">//RTC初始化</span></span><br><span class="line">POINT_COLOR=RED;<span class="comment">//设置字体为红色 </span></span><br><span class="line">LCD_ShowString(<span class="number">60</span>,<span class="number">50</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;Elite STM32&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">60</span>,<span class="number">70</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;RTC TEST&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">60</span>,<span class="number">90</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;ATOM@ALIENTEK&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">60</span>,<span class="number">110</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;2015/1/14&quot;</span>);</span><br><span class="line"><span class="comment">//显示时间</span></span><br><span class="line">POINT_COLOR=BLUE;<span class="comment">//设置字体为蓝色</span></span><br><span class="line">LCD_ShowString(<span class="number">60</span>,<span class="number">130</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;    -  -  &quot;</span>);   </span><br><span class="line">LCD_ShowString(<span class="number">60</span>,<span class="number">162</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;  :  :  &quot;</span>);    </span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;    </span><br><span class="line"><span class="keyword">if</span>(t!=calendar.sec)</span><br><span class="line">&#123;</span><br><span class="line">t=calendar.sec;</span><br><span class="line">LCD_ShowNum(<span class="number">60</span>,<span class="number">130</span>,calendar.w_year,<span class="number">4</span>,<span class="number">16</span>);  </span><br><span class="line">LCD_ShowNum(<span class="number">100</span>,<span class="number">130</span>,calendar.w_month,<span class="number">2</span>,<span class="number">16</span>);  </span><br><span class="line">LCD_ShowNum(<span class="number">124</span>,<span class="number">130</span>,calendar.w_date,<span class="number">2</span>,<span class="number">16</span>); </span><br><span class="line"><span class="keyword">switch</span>(calendar.week)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">LCD_ShowString(<span class="number">60</span>,<span class="number">148</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;Sunday   &quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">LCD_ShowString(<span class="number">60</span>,<span class="number">148</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;Monday   &quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">LCD_ShowString(<span class="number">60</span>,<span class="number">148</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;Tuesday  &quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">LCD_ShowString(<span class="number">60</span>,<span class="number">148</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;Wednesday&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">LCD_ShowString(<span class="number">60</span>,<span class="number">148</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;Thursday &quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">LCD_ShowString(<span class="number">60</span>,<span class="number">148</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;Friday   &quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">LCD_ShowString(<span class="number">60</span>,<span class="number">148</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;Saturday &quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;  </span><br><span class="line">&#125;</span><br><span class="line">LCD_ShowNum(<span class="number">60</span>,<span class="number">162</span>,calendar.hour,<span class="number">2</span>,<span class="number">16</span>);  </span><br><span class="line">LCD_ShowNum(<span class="number">84</span>,<span class="number">162</span>,calendar.min,<span class="number">2</span>,<span class="number">16</span>);  </span><br><span class="line">LCD_ShowNum(<span class="number">108</span>,<span class="number">162</span>,calendar.sec,<span class="number">2</span>,<span class="number">16</span>);</span><br><span class="line">LED0=!LED0;</span><br><span class="line">&#125;</span><br><span class="line">delay_ms(<span class="number">10</span>);  </span><br><span class="line">&#125;;  </span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="代码片段分析"><a class="markdownIt-Anchor" href="#代码片段分析"></a> 代码片段分析</h2><p>略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（14）USMART调试</title>
    <link href="https://sirius-tblog.github.io/posts/3783971557.html"/>
    <id>https://sirius-tblog.github.io/posts/3783971557.html</id>
    <published>2022-11-08T03:39:18.000Z</published>
    <updated>2023-04-05T14:20:04.871Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作，实现跑马灯样式实验。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a001b03c01.jpg" alt="" title="硬件电路连接" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>beep</td><td>output</td><td>PB8</td><td>LED0驱动</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件驱动GPIO口。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="usmartc"><a class="markdownIt-Anchor" href="#usmartc"></a> usmart.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// usmart.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usmart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//系统命令</span></span><br><span class="line">u8 *sys_cmd_tab[]=</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;?&quot;</span>,</span><br><span class="line"><span class="string">&quot;help&quot;</span>,</span><br><span class="line"><span class="string">&quot;list&quot;</span>,</span><br><span class="line"><span class="string">&quot;id&quot;</span>,</span><br><span class="line"><span class="string">&quot;hex&quot;</span>,</span><br><span class="line"><span class="string">&quot;dec&quot;</span>,</span><br><span class="line"><span class="string">&quot;runtime&quot;</span>,   </span><br><span class="line">&#125;;    </span><br><span class="line"><span class="comment">//处理系统指令</span></span><br><span class="line"><span class="comment">//0,成功处理;其他,错误代码;</span></span><br><span class="line">u8 <span class="title function_">usmart_sys_cmd_exe</span><span class="params">(u8 *str)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 i;</span><br><span class="line">u8 sfname[MAX_FNAME_LEN];<span class="comment">//存放本地函数名</span></span><br><span class="line">u8 pnum;</span><br><span class="line">u8 rval;</span><br><span class="line">u32 res;  </span><br><span class="line">res=usmart_get_cmdname(str,sfname,&amp;i,MAX_FNAME_LEN);<span class="comment">//得到指令及指令长度</span></span><br><span class="line"><span class="keyword">if</span>(res)<span class="keyword">return</span> USMART_FUNCERR;<span class="comment">//错误的指令 </span></span><br><span class="line">str+=i;      </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="keyword">sizeof</span>(sys_cmd_tab)/<span class="number">4</span>;i++)<span class="comment">//支持的系统指令</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(usmart_strcmp(sfname,sys_cmd_tab[i])==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(i)</span><br><span class="line">&#123;   </span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//帮助指令</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> USMART_USE_HELP</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;------------------------USMART V3.1------------------------ \r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;    USMART是由ALIENTEK开发的一个灵巧的串口调试互交组件,通过 \r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;它,你可以通过串口助手调用程序里面的任何函数,并执行.因此,你可\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;以随意更改函数的输入参数(支持数字(10/16进制)、字符串、函数入\r\n&quot;</span>);  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;口地址等作为参数),单个函数最多支持10个输入参数,并支持函数返 \r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;回值显示.新增参数显示进制设置功能,新增进制转换功能.\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;技术支持:www.openedv.com\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;USMART有7个系统命令:\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;?:      获取帮助信息\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;help:   获取帮助信息\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;list:   可用的函数列表\r\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;id:     可用函数的ID列表\r\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hex:    参数16进制显示,后跟空格+数字即执行进制转换\r\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;dec:    参数10进制显示,后跟空格+数字即执行进制转换\r\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;runtime:1,开启函数运行计时;0,关闭函数运行计时;\r\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请按照程序编写格式输入函数名及参数并以回车键结束.\r\n&quot;</span>);    </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;--------------------------ALIENTEK------------------------- \r\n&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;指令失效\r\n&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//查询指令</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-------------------------函数清单--------------------------- \r\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;usmart_dev.fnum;i++)<span class="built_in">printf</span>(<span class="string">&quot;%s\r\n&quot;</span>,usmart_dev.funs[i].name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//查询ID</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-------------------------函数 ID --------------------------- \r\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;usmart_dev.fnum;i++)</span><br><span class="line">&#123;</span><br><span class="line">usmart_get_fname((u8*)usmart_dev.funs[i].name,sfname,&amp;pnum,&amp;rval);<span class="comment">//得到本地函数名 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s id is:\r\n0X%08X\r\n&quot;</span>,sfname,usmart_dev.funs[i].func); <span class="comment">//显示ID</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="comment">//hex指令</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">usmart_get_aparm(str,sfname,&amp;i);</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)<span class="comment">//参数正常</span></span><br><span class="line">&#123;</span><br><span class="line">i=usmart_str2num(sfname,&amp;res);   <span class="comment">//记录该参数</span></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)  <span class="comment">//进制转换功能</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;HEX:0X%X\r\n&quot;</span>,res);   <span class="comment">//转为16进制</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(i!=<span class="number">4</span>)<span class="keyword">return</span> USMART_PARMERR;<span class="comment">//参数错误.</span></span><br><span class="line"><span class="keyword">else</span>    <span class="comment">//参数显示设定功能</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;16进制参数显示!\r\n&quot;</span>);</span><br><span class="line">usmart_dev.sptype=SP_TYPE_HEX;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">return</span> USMART_PARMERR;<span class="comment">//参数错误.</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="comment">//dec指令</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">usmart_get_aparm(str,sfname,&amp;i);</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)<span class="comment">//参数正常</span></span><br><span class="line">&#123;</span><br><span class="line">i=usmart_str2num(sfname,&amp;res);   <span class="comment">//记录该参数</span></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)   <span class="comment">//进制转换功能</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;DEC:%lu\r\n&quot;</span>,res);   <span class="comment">//转为10进制</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(i!=<span class="number">4</span>)<span class="keyword">return</span> USMART_PARMERR;<span class="comment">//参数错误.</span></span><br><span class="line"><span class="keyword">else</span>    <span class="comment">//参数显示设定功能</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;10进制参数显示!\r\n&quot;</span>);</span><br><span class="line">usmart_dev.sptype=SP_TYPE_DEC;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">return</span> USMART_PARMERR;<span class="comment">//参数错误. </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>); </span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:<span class="comment">//runtime指令,设置是否显示函数执行时间</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">usmart_get_aparm(str,sfname,&amp;i);</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)<span class="comment">//参数正常</span></span><br><span class="line">&#123;</span><br><span class="line">i=usmart_str2num(sfname,&amp;res);   <span class="comment">//记录该参数</span></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)   <span class="comment">//读取指定地址数据功能</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(USMART_ENTIMX_SCAN==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;\r\nError! \r\nTo EN RunTime function,Please set USMART_ENTIMX_SCAN = 1 first!\r\n&quot;</span>);<span class="comment">//报错</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">usmart_dev.runtimeflag=res;</span><br><span class="line"><span class="keyword">if</span>(usmart_dev.runtimeflag)<span class="built_in">printf</span>(<span class="string">&quot;Run Time Calculation ON\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;Run Time Calculation OFF\r\n&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">return</span> USMART_PARMERR;   <span class="comment">//未带参数,或者参数错误 </span></span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">return</span> USMART_PARMERR;<span class="comment">//参数错误. </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>); </span><br><span class="line"><span class="keyword">break</span>;    </span><br><span class="line"><span class="keyword">default</span>:<span class="comment">//非法指令</span></span><br><span class="line"><span class="keyword">return</span> USMART_FUNCERR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//移植注意:本例是以stm32为例,如果要移植到其他mcu,请做相应修改.</span></span><br><span class="line"><span class="comment">//usmart_reset_runtime,清除函数运行时间,连同定时器的计数寄存器以及标志位一起清零.并设置重装载值为最大,以最大限度的延长计时时间.</span></span><br><span class="line"><span class="comment">//usmart_get_runtime,获取函数运行时间,通过读取CNT值获取,由于usmart是通过中断调用的函数,所以定时器中断不再有效,此时最大限度</span></span><br><span class="line"><span class="comment">//只能统计2次CNT的值,也就是清零后+溢出一次,当溢出超过2次,没法处理,所以最大延时,控制在:2*计数器CNT*0.1ms.对STM32来说,是:13.1s左右</span></span><br><span class="line"><span class="comment">//其他的:TIM4_IRQHandler和Timer2_Init,需要根据MCU特点自行修改.确保计数器计数频率为:10Khz即可.另外,定时器不要开启自动重装载功能!!</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> USMART_ENTIMX_SCAN==1</span></span><br><span class="line"><span class="comment">//复位runtime</span></span><br><span class="line"><span class="comment">//需要根据所移植到的MCU的定时器参数进行修改</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">usmart_reset_runtime</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_ClearFlag(TIM4,TIM_FLAG_Update);<span class="comment">//清除中断标志位 </span></span><br><span class="line">TIM_SetAutoreload(TIM4,<span class="number">0XFFFF</span>);<span class="comment">//将重装载值设置到最大</span></span><br><span class="line">TIM_SetCounter(TIM4,<span class="number">0</span>);<span class="comment">//清空定时器的CNT</span></span><br><span class="line">usmart_dev.runtime=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获得runtime时间</span></span><br><span class="line"><span class="comment">//返回值:执行时间,单位:0.1ms,最大延时时间为定时器CNT值的2倍*0.1ms</span></span><br><span class="line"><span class="comment">//需要根据所移植到的MCU的定时器参数进行修改</span></span><br><span class="line">u32 <span class="title function_">usmart_get_runtime</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(TIM_GetFlagStatus(TIM4,TIM_FLAG_Update)==SET)<span class="comment">//在运行期间,产生了定时器溢出</span></span><br><span class="line">&#123;</span><br><span class="line">usmart_dev.runtime+=<span class="number">0XFFFF</span>;</span><br><span class="line">&#125;</span><br><span class="line">usmart_dev.runtime+=TIM_GetCounter(TIM4);</span><br><span class="line"><span class="keyword">return</span> usmart_dev.runtime;<span class="comment">//返回计数值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//下面这两个函数,非USMART函数,放到这里,仅仅方便移植. </span></span><br><span class="line"><span class="comment">//定时器4中断服务程序 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM4_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;           </span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM4,TIM_IT_Update)==SET)<span class="comment">//溢出中断</span></span><br><span class="line">&#123;</span><br><span class="line">usmart_dev.scan();<span class="comment">//执行usmart扫描</span></span><br><span class="line">TIM_SetCounter(TIM4,<span class="number">0</span>);<span class="comment">//清空定时器的CNT</span></span><br><span class="line">TIM_SetAutoreload(TIM4,<span class="number">100</span>);<span class="comment">//恢复原来的设置                </span></span><br><span class="line">&#125;   </span><br><span class="line">TIM_ClearITPendingBit(TIM4,TIM_IT_Update);  <span class="comment">//清除中断标志位    </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使能定时器4,使能中断.</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer4_Init</span><span class="params">(u16 arr,u16 psc)</span></span><br><span class="line">&#123;</span><br><span class="line">    TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE); <span class="comment">//TIM4时钟使能 </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//TIM4初始化设置</span></span><br><span class="line"> TIM_TimeBaseStructure.TIM_Period = arr; <span class="comment">//设置在下一个更新事件装入活动的自动重装载寄存器周期的值 计数到5000为500ms</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler =psc; <span class="comment">//设置用来作为TIMx时钟频率除数的预分频值  10Khz的计数频率  </span></span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>; <span class="comment">//设置时钟分割:TDTS = Tck_tim</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  <span class="comment">//TIM向上计数模式</span></span><br><span class="line">TIM_TimeBaseInit(TIM4, &amp;TIM_TimeBaseStructure); <span class="comment">//根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位</span></span><br><span class="line"> </span><br><span class="line">TIM_ITConfig( TIM4, TIM_IT_Update|TIM_IT_Trigger, ENABLE );<span class="comment">//TIM4 允许更新，触发中断</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//TIM4中断分组配置</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn;  <span class="comment">//TIM3中断</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">3</span>;  <span class="comment">//先占优先级03级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">3</span>;  <span class="comment">//从优先级3级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; <span class="comment">//IRQ通道被使能</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);  <span class="comment">//根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器</span></span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM4, ENABLE);  <span class="comment">//使能TIM4 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//初始化串口控制器</span></span><br><span class="line"><span class="comment">//sysclk:系统时钟（Mhz）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">usmart_init</span><span class="params">(u8 sysclk)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> USMART_ENTIMX_SCAN==1</span></span><br><span class="line">Timer4_Init(<span class="number">1000</span>,(u32)sysclk*<span class="number">100</span><span class="number">-1</span>);<span class="comment">//分频,时钟为10K ,100ms中断一次,注意,计数频率必须为10Khz,以和runtime单位(0.1ms)同步.</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">usmart_dev.sptype=<span class="number">1</span>;<span class="comment">//十六进制显示参数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从str中获取函数名,id,及参数信息</span></span><br><span class="line"><span class="comment">//*str:字符串指针.</span></span><br><span class="line"><span class="comment">//返回值:0,识别成功;其他,错误代码.</span></span><br><span class="line">u8 <span class="title function_">usmart_cmd_rec</span><span class="params">(u8*str)</span> </span><br><span class="line">&#123;</span><br><span class="line">u8 sta,i,rval;<span class="comment">//状态 </span></span><br><span class="line">u8 rpnum,spnum;</span><br><span class="line">u8 rfname[MAX_FNAME_LEN];<span class="comment">//暂存空间,用于存放接收到的函数名  </span></span><br><span class="line">u8 sfname[MAX_FNAME_LEN];<span class="comment">//存放本地函数名</span></span><br><span class="line">sta=usmart_get_fname(str,rfname,&amp;rpnum,&amp;rval);<span class="comment">//得到接收到的数据的函数名及参数个数  </span></span><br><span class="line"><span class="keyword">if</span>(sta)<span class="keyword">return</span> sta;<span class="comment">//错误</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;usmart_dev.fnum;i++)</span><br><span class="line">&#123;</span><br><span class="line">sta=usmart_get_fname((u8*)usmart_dev.funs[i].name,sfname,&amp;spnum,&amp;rval);<span class="comment">//得到本地函数名及参数个数</span></span><br><span class="line"><span class="keyword">if</span>(sta)<span class="keyword">return</span> sta;<span class="comment">//本地解析有误  </span></span><br><span class="line"><span class="keyword">if</span>(usmart_strcmp(sfname,rfname)==<span class="number">0</span>)<span class="comment">//相等</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(spnum&gt;rpnum)<span class="keyword">return</span> USMART_PARMERR;<span class="comment">//参数错误(输入参数比源函数参数少)</span></span><br><span class="line">usmart_dev.id=i;<span class="comment">//记录函数ID.</span></span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//跳出.</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==usmart_dev.fnum)<span class="keyword">return</span> USMART_NOFUNCFIND;<span class="comment">//未找到匹配的函数</span></span><br><span class="line"> sta=usmart_get_fparam(str,&amp;i);<span class="comment">//得到函数参数个数</span></span><br><span class="line"><span class="keyword">if</span>(sta)<span class="keyword">return</span> sta;<span class="comment">//返回错误</span></span><br><span class="line">usmart_dev.pnum=i;<span class="comment">//参数个数记录</span></span><br><span class="line">    <span class="keyword">return</span> USMART_OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//usamrt执行函数</span></span><br><span class="line"><span class="comment">//该函数用于最终执行从串口收到的有效函数.</span></span><br><span class="line"><span class="comment">//最多支持10个参数的函数,更多的参数支持也很容易实现.不过用的很少.一般5个左右的参数的函数已经很少见了.</span></span><br><span class="line"><span class="comment">//该函数会在串口打印执行情况.以:&quot;函数名(参数1，参数2...参数N)=返回值&quot;.的形式打印.</span></span><br><span class="line"><span class="comment">//当所执行的函数没有返回值的时候,所打印的返回值是一个无意义的数据.</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">usmart_exe</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 id,i;</span><br><span class="line">u32 res;   </span><br><span class="line">u32 temp[MAX_PARM];<span class="comment">//参数转换,使之支持了字符串 </span></span><br><span class="line">u8 sfname[MAX_FNAME_LEN];<span class="comment">//存放本地函数名</span></span><br><span class="line">u8 pnum,rval;</span><br><span class="line">id=usmart_dev.id;</span><br><span class="line"><span class="keyword">if</span>(id&gt;=usmart_dev.fnum)<span class="keyword">return</span>;<span class="comment">//不执行.</span></span><br><span class="line">usmart_get_fname((u8*)usmart_dev.funs[id].name,sfname,&amp;pnum,&amp;rval);<span class="comment">//得到本地函数名,及参数个数 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n%s(&quot;</span>,sfname);<span class="comment">//输出正要执行的函数名</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;pnum;i++)<span class="comment">//输出参数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(usmart_dev.parmtype&amp;(<span class="number">1</span>&lt;&lt;i))<span class="comment">//参数是字符串</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,<span class="string">&#x27;&quot;&#x27;</span>); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,usmart_dev.parm+usmart_get_parmpos(i));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,<span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">temp[i]=(u32)&amp;(usmart_dev.parm[usmart_get_parmpos(i)]);</span><br><span class="line">&#125;<span class="keyword">else</span>  <span class="comment">//参数是数字</span></span><br><span class="line">&#123;</span><br><span class="line">temp[i]=*(u32*)(usmart_dev.parm+usmart_get_parmpos(i));</span><br><span class="line"><span class="keyword">if</span>(usmart_dev.sptype==SP_TYPE_DEC)<span class="built_in">printf</span>(<span class="string">&quot;%lu&quot;</span>,temp[i]);<span class="comment">//10进制参数显示</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;0X%X&quot;</span>,temp[i]);<span class="comment">//16进制参数显示    </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i!=pnum<span class="number">-1</span>)<span class="built_in">printf</span>(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;)&quot;</span>);</span><br><span class="line">usmart_reset_runtime();<span class="comment">//计时器清零,开始计时</span></span><br><span class="line"><span class="keyword">switch</span>(usmart_dev.pnum)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//无参数(void类型)  </span></span><br><span class="line">res=(*(u32(*)())usmart_dev.funs[id].func)();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//有1个参数</span></span><br><span class="line">res=(*(u32(*)())usmart_dev.funs[id].func)(temp[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//有2个参数</span></span><br><span class="line">res=(*(u32(*)())usmart_dev.funs[id].func)(temp[<span class="number">0</span>],temp[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//有3个参数</span></span><br><span class="line">res=(*(u32(*)())usmart_dev.funs[id].func)(temp[<span class="number">0</span>],temp[<span class="number">1</span>],temp[<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:<span class="comment">//有4个参数</span></span><br><span class="line">res=(*(u32(*)())usmart_dev.funs[id].func)(temp[<span class="number">0</span>],temp[<span class="number">1</span>],temp[<span class="number">2</span>],temp[<span class="number">3</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:<span class="comment">//有5个参数</span></span><br><span class="line">res=(*(u32(*)())usmart_dev.funs[id].func)(temp[<span class="number">0</span>],temp[<span class="number">1</span>],temp[<span class="number">2</span>],temp[<span class="number">3</span>],temp[<span class="number">4</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:<span class="comment">//有6个参数</span></span><br><span class="line">res=(*(u32(*)())usmart_dev.funs[id].func)(temp[<span class="number">0</span>],temp[<span class="number">1</span>],temp[<span class="number">2</span>],temp[<span class="number">3</span>],temp[<span class="number">4</span>],\</span><br><span class="line">temp[<span class="number">5</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:<span class="comment">//有7个参数</span></span><br><span class="line">res=(*(u32(*)())usmart_dev.funs[id].func)(temp[<span class="number">0</span>],temp[<span class="number">1</span>],temp[<span class="number">2</span>],temp[<span class="number">3</span>],temp[<span class="number">4</span>],\</span><br><span class="line">temp[<span class="number">5</span>],temp[<span class="number">6</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:<span class="comment">//有8个参数</span></span><br><span class="line">res=(*(u32(*)())usmart_dev.funs[id].func)(temp[<span class="number">0</span>],temp[<span class="number">1</span>],temp[<span class="number">2</span>],temp[<span class="number">3</span>],temp[<span class="number">4</span>],\</span><br><span class="line">temp[<span class="number">5</span>],temp[<span class="number">6</span>],temp[<span class="number">7</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:<span class="comment">//有9个参数</span></span><br><span class="line">res=(*(u32(*)())usmart_dev.funs[id].func)(temp[<span class="number">0</span>],temp[<span class="number">1</span>],temp[<span class="number">2</span>],temp[<span class="number">3</span>],temp[<span class="number">4</span>],\</span><br><span class="line">temp[<span class="number">5</span>],temp[<span class="number">6</span>],temp[<span class="number">7</span>],temp[<span class="number">8</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:<span class="comment">//有10个参数</span></span><br><span class="line">res=(*(u32(*)())usmart_dev.funs[id].func)(temp[<span class="number">0</span>],temp[<span class="number">1</span>],temp[<span class="number">2</span>],temp[<span class="number">3</span>],temp[<span class="number">4</span>],\</span><br><span class="line">temp[<span class="number">5</span>],temp[<span class="number">6</span>],temp[<span class="number">7</span>],temp[<span class="number">8</span>],temp[<span class="number">9</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">usmart_get_runtime();<span class="comment">//获取函数执行时间</span></span><br><span class="line"><span class="keyword">if</span>(rval==<span class="number">1</span>)<span class="comment">//需要返回值.</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(usmart_dev.sptype==SP_TYPE_DEC)<span class="built_in">printf</span>(<span class="string">&quot;=%lu;\r\n&quot;</span>,res);<span class="comment">//输出执行结果(10进制参数显示)</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;=0X%X;\r\n&quot;</span>,res);<span class="comment">//输出执行结果(16进制参数显示)   </span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;;\r\n&quot;</span>);<span class="comment">//不需要返回值,直接输出结束</span></span><br><span class="line"><span class="keyword">if</span>(usmart_dev.runtimeflag)<span class="comment">//需要显示函数执行时间</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Function Run Time:%d.%1dms\r\n&quot;</span>,usmart_dev.runtime/<span class="number">10</span>,usmart_dev.runtime%<span class="number">10</span>);<span class="comment">//打印函数执行时间 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//usmart扫描函数</span></span><br><span class="line"><span class="comment">//通过调用该函数,实现usmart的各个控制.该函数需要每隔一定时间被调用一次</span></span><br><span class="line"><span class="comment">//以及时执行从串口发过来的各个函数.</span></span><br><span class="line"><span class="comment">//本函数可以在中断里面调用,从而实现自动管理.</span></span><br><span class="line"><span class="comment">//如果非ALIENTEK用户,则USART_RX_STA和USART_RX_BUF[]需要用户自己实现</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">usmart_scan</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 sta,len;  </span><br><span class="line"><span class="keyword">if</span>(USART_RX_STA&amp;<span class="number">0x8000</span>)<span class="comment">//串口接收完成？</span></span><br><span class="line">&#123;   </span><br><span class="line">len=USART_RX_STA&amp;<span class="number">0x3fff</span>;<span class="comment">//得到此次接收到的数据长度</span></span><br><span class="line">USART_RX_BUF[len]=<span class="string">&#x27;\0&#x27;</span>;<span class="comment">//在末尾加入结束符. </span></span><br><span class="line">sta=usmart_dev.cmd_rec(USART_RX_BUF);<span class="comment">//得到函数各个信息</span></span><br><span class="line"><span class="keyword">if</span>(sta==<span class="number">0</span>)usmart_dev.exe();<span class="comment">//执行函数 </span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;  </span><br><span class="line">len=usmart_sys_cmd_exe(USART_RX_BUF);</span><br><span class="line"><span class="keyword">if</span>(len!=USMART_FUNCERR)sta=len;</span><br><span class="line"><span class="keyword">if</span>(sta)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(sta)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> USMART_FUNCERR:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;函数错误!\r\n&quot;</span>);   </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> USMART_PARMERR:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;参数错误!\r\n&quot;</span>);   </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> USMART_PARMOVER:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;参数太多!\r\n&quot;</span>);   </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> USMART_NOFUNCFIND:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;未找到匹配的函数!\r\n&quot;</span>);   </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">USART_RX_STA=<span class="number">0</span>;<span class="comment">//状态寄存器清空    </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> USMART_USE_WRFUNS==1 <span class="comment">//如果使能了读写操作</span></span></span><br><span class="line"><span class="comment">//读取指定地址的值 </span></span><br><span class="line">u32 <span class="title function_">read_addr</span><span class="params">(u32 addr)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> *(u32*)addr;<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在指定地址写入指定的值 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">write_addr</span><span class="params">(u32 addr,u32 val)</span></span><br><span class="line">&#123;</span><br><span class="line">*(u32*)addr=val; </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="usmarth"><a class="markdownIt-Anchor" href="#usmarth"></a> usmart.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// usmart.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __USMART_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __USMART_H    </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usmart_str.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//USMART资源占用情况@MDK 3.80A@2.0版本：</span></span><br><span class="line"><span class="comment">//FLASH:4K~K字节(通过USMART_USE_HELP和USMART_USE_WRFUNS设置)</span></span><br><span class="line"><span class="comment">//SRAM:72字节(最少的情况下)</span></span><br><span class="line"><span class="comment">//SRAM计算公式:   SRAM=PARM_LEN+72-4  其中PARM_LEN必须大于等于4.</span></span><br><span class="line"><span class="comment">//应该保证堆栈不小于100个字节.</span></span><br><span class="line"><span class="comment">////////////////////////////////////////////用户配置参数////////////////////////////////////////////////////  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_FNAME_LEN 30<span class="comment">//函数名最大长度，应该设置为不小于最长函数名的长度。   </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_PARM 10<span class="comment">//最大为10个参数 ,修改此参数,必须修改usmart_exe与之对应.</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PARM_LEN 200<span class="comment">//所有参数之和的长度不超过PARM_LEN个字节,注意串口接收部分要与之对应(不小于PARM_LEN)</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USMART_ENTIMX_SCAN 1<span class="comment">//使用TIM的定时中断来扫描SCAN函数,如果设置为0,需要自己实现隔一段时间扫描一次scan函数.</span></span></span><br><span class="line"><span class="comment">//注意:如果要用runtime统计功能,必须设置USMART_ENTIMX_SCAN为1!!!!</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USMART_USE_HELP1<span class="comment">//使用帮助，该值设为0，可以节省近700个字节，但是将导致无法显示帮助信息。</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USMART_USE_WRFUNS1<span class="comment">//使用读写函数,使能这里,可以读取任何地址的值,还可以写寄存器的值.</span></span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////END///////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USMART_OK 0  <span class="comment">//无错误</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USMART_FUNCERR 1  <span class="comment">//函数错误</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USMART_PARMERR 2  <span class="comment">//参数错误</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USMART_PARMOVER 3  <span class="comment">//参数溢出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USMART_NOFUNCFIND 4  <span class="comment">//未找到匹配函数</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SP_TYPE_DEC      0  <span class="comment">//10进制参数显示</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SP_TYPE_HEX       1  <span class="comment">//16进制参数显示</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">//函数名列表 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">m_usmart_nametab</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">void</span>* func;<span class="comment">//函数指针</span></span><br><span class="line"><span class="type">const</span> u8* name;<span class="comment">//函数名(查找串) </span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//usmart控制管理器</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">m_usmart_dev</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">m_usmart_nametab</span> *<span class="title">funs</span>;</span><span class="comment">//函数名指针</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> (*init)(u8);<span class="comment">//初始化</span></span><br><span class="line">u8 (*cmd_rec)(u8*str);<span class="comment">//识别函数名及参数</span></span><br><span class="line"><span class="type">void</span> (*exe)(<span class="type">void</span>); <span class="comment">//执行 </span></span><br><span class="line"><span class="type">void</span> (*scan)(<span class="type">void</span>);             <span class="comment">//扫描</span></span><br><span class="line">u8 fnum;   <span class="comment">//函数数量</span></span><br><span class="line">u8 pnum;                        <span class="comment">//参数数量</span></span><br><span class="line">u8 id;<span class="comment">//函数id</span></span><br><span class="line">u8 sptype;<span class="comment">//参数显示类型(非字符串参数):0,10进制;1,16进制;</span></span><br><span class="line">u16 parmtype;<span class="comment">//参数的类型</span></span><br><span class="line">u8  plentbl[MAX_PARM];  <span class="comment">//每个参数的长度暂存表</span></span><br><span class="line">u8  parm[PARM_LEN];  <span class="comment">//函数的参数</span></span><br><span class="line">u8 runtimeflag;<span class="comment">//0,不统计函数执行时间;1,统计函数执行时间,注意:此功能必须在USMART_ENTIMX_SCAN使能的时候,才有用</span></span><br><span class="line">u32 runtime;<span class="comment">//运行时间,单位:0.1ms,最大延时时间为定时器CNT值的2倍*0.1ms</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">extern</span> <span class="class"><span class="keyword">struct</span> _<span class="title">m_usmart_nametab</span> <span class="title">usmart_nametab</span>[];</span><span class="comment">//在usmart_config.c里面定义</span></span><br><span class="line"><span class="keyword">extern</span> <span class="class"><span class="keyword">struct</span> _<span class="title">m_usmart_dev</span> <span class="title">usmart_dev</span>;</span><span class="comment">//在usmart_config.c里面定义</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">usmart_init</span><span class="params">(u8 sysclk)</span>;<span class="comment">//初始化</span></span><br><span class="line">u8 <span class="title function_">usmart_cmd_rec</span><span class="params">(u8*str)</span>;<span class="comment">//识别</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">usmart_exe</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//执行</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">usmart_scan</span><span class="params">(<span class="type">void</span>)</span>;     <span class="comment">//扫描</span></span><br><span class="line">u32 <span class="title function_">read_addr</span><span class="params">(u32 addr)</span>;<span class="comment">//读取指定地址的值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">write_addr</span><span class="params">(u32 addr,u32 val)</span>;<span class="comment">//在指定地址写入指定的值</span></span><br><span class="line">u32 <span class="title function_">usmart_get_runtime</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//获取运行时间</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">usmart_reset_runtime</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//复位运行时间</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="usmart_strc"><a class="markdownIt-Anchor" href="#usmart_strc"></a> usmart_str.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//usmart_str.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usmart_str.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usmart.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="comment">//对比字符串str1和str2</span></span><br><span class="line"><span class="comment">//*str1:字符串1指针</span></span><br><span class="line"><span class="comment">//*str2:字符串2指针</span></span><br><span class="line"><span class="comment">//返回值:0，相等;1，不相等;</span></span><br><span class="line">u8 <span class="title function_">usmart_strcmp</span><span class="params">(u8 *str1,u8 *str2)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*str1!=*str2)<span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//不相等</span></span><br><span class="line"><span class="keyword">if</span>(*str1==<span class="string">&#x27;\0&#x27;</span>)<span class="keyword">break</span>;<span class="comment">//对比完成了.</span></span><br><span class="line">str1++;</span><br><span class="line">str2++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//两个字符串相等</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//把str1的内容copy到str2</span></span><br><span class="line"><span class="comment">//*str1:字符串1指针</span></span><br><span class="line"><span class="comment">//*str2:字符串2指针   </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">usmart_strcopy</span><span class="params">(u8*str1,u8 *str2)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;   </span><br><span class="line">*str2=*str1;<span class="comment">//拷贝</span></span><br><span class="line"><span class="keyword">if</span>(*str1==<span class="string">&#x27;\0&#x27;</span>)<span class="keyword">break</span>;<span class="comment">//拷贝完成了.</span></span><br><span class="line">str1++;</span><br><span class="line">str2++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//得到字符串的长度(字节)</span></span><br><span class="line"><span class="comment">//*str:字符串指针</span></span><br><span class="line"><span class="comment">//返回值:字符串的长度   </span></span><br><span class="line">u8 <span class="title function_">usmart_strlen</span><span class="params">(u8*str)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 len=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span>(*str==<span class="string">&#x27;\0&#x27;</span>)<span class="keyword">break</span>;<span class="comment">//拷贝完成了.</span></span><br><span class="line">len++;</span><br><span class="line">str++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//m^n函数</span></span><br><span class="line"><span class="comment">//返回值:m^n次方</span></span><br><span class="line">u32 <span class="title function_">usmart_pow</span><span class="params">(u8 m,u8 n)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 result=<span class="number">1</span>; </span><br><span class="line"><span class="keyword">while</span>(n--)result*=m;    </span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;    </span><br><span class="line"><span class="comment">//把字符串转为数字</span></span><br><span class="line"><span class="comment">//支持16进制转换,但是16进制字母必须是大写的,且格式为以0X开头的.</span></span><br><span class="line"><span class="comment">//不支持负数 </span></span><br><span class="line"><span class="comment">//*str:数字字符串指针</span></span><br><span class="line"><span class="comment">//*res:转换完的结果存放地址.</span></span><br><span class="line"><span class="comment">//返回值:0，成功转换完成.其他,错误代码.</span></span><br><span class="line"><span class="comment">//1,数据格式错误.2,16进制位数为0.3,起始格式错误.4,十进制位数为0.</span></span><br><span class="line">u8 <span class="title function_">usmart_str2num</span><span class="params">(u8*str,u32 *res)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 t;</span><br><span class="line">u8 bnum=<span class="number">0</span>;<span class="comment">//数字的位数</span></span><br><span class="line">u8 *p;  </span><br><span class="line">u8 hexdec=<span class="number">10</span>;<span class="comment">//默认为十进制数据</span></span><br><span class="line">p=str;</span><br><span class="line">*res=<span class="number">0</span>;<span class="comment">//清零.</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((*p&lt;=<span class="string">&#x27;9&#x27;</span>&amp;&amp;*p&gt;=<span class="string">&#x27;0&#x27;</span>)||(*p&lt;=<span class="string">&#x27;F&#x27;</span>&amp;&amp;*p&gt;=<span class="string">&#x27;A&#x27;</span>)||(*p==<span class="string">&#x27;X&#x27;</span>&amp;&amp;bnum==<span class="number">1</span>))<span class="comment">//参数合法</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*p&gt;=<span class="string">&#x27;A&#x27;</span>)hexdec=<span class="number">16</span>;<span class="comment">//字符串中存在字母,为16进制格式.</span></span><br><span class="line">bnum++;<span class="comment">//位数增加.</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(*p==<span class="string">&#x27;\0&#x27;</span>)<span class="keyword">break</span>;<span class="comment">//碰到结束符,退出.</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//不全是十进制或者16进制数据.</span></span><br><span class="line">p++; </span><br><span class="line">&#125; </span><br><span class="line">p=str;    <span class="comment">//重新定位到字符串开始的地址.</span></span><br><span class="line"><span class="keyword">if</span>(hexdec==<span class="number">16</span>)<span class="comment">//16进制数据</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(bnum&lt;<span class="number">3</span>)<span class="keyword">return</span> <span class="number">2</span>;<span class="comment">//位数小于3，直接退出.因为0X就占了2个,如果0X后面不跟数据,则该数据非法.</span></span><br><span class="line"><span class="keyword">if</span>(*p==<span class="string">&#x27;0&#x27;</span> &amp;&amp; (*(p+<span class="number">1</span>)==<span class="string">&#x27;X&#x27;</span>))<span class="comment">//必须以&#x27;0X&#x27;开头.</span></span><br><span class="line">&#123;</span><br><span class="line">p+=<span class="number">2</span>;<span class="comment">//偏移到数据起始地址.</span></span><br><span class="line">bnum-=<span class="number">2</span>;<span class="comment">//减去偏移量 </span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">3</span>;<span class="comment">//起始头的格式不对</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(bnum==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">4</span>;<span class="comment">//位数为0，直接退出.  </span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(bnum)bnum--;</span><br><span class="line"><span class="keyword">if</span>(*p&lt;=<span class="string">&#x27;9&#x27;</span>&amp;&amp;*p&gt;=<span class="string">&#x27;0&#x27;</span>)t=*p-<span class="string">&#x27;0&#x27;</span>;<span class="comment">//得到数字的值</span></span><br><span class="line"><span class="keyword">else</span> t=*p-<span class="string">&#x27;A&#x27;</span>+<span class="number">10</span>;<span class="comment">//得到A~F对应的值    </span></span><br><span class="line">*res+=t*usmart_pow(hexdec,bnum);   </span><br><span class="line">p++;</span><br><span class="line"><span class="keyword">if</span>(*p==<span class="string">&#x27;\0&#x27;</span>)<span class="keyword">break</span>;<span class="comment">//数据都查完了.</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//成功转换</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//得到指令名</span></span><br><span class="line"><span class="comment">//*str:源字符串</span></span><br><span class="line"><span class="comment">//*cmdname:指令名</span></span><br><span class="line"><span class="comment">//*nlen:指令名长度</span></span><br><span class="line"><span class="comment">//maxlen:最大长度(做限制,指令不可能太长的)</span></span><br><span class="line"><span class="comment">//返回值:0,成功;其他,失败.  </span></span><br><span class="line">u8 <span class="title function_">usmart_get_cmdname</span><span class="params">(u8*str,u8*cmdname,u8 *nlen,u8 maxlen)</span></span><br><span class="line">&#123;</span><br><span class="line">*nlen=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">while</span>(*str!=<span class="string">&#x27; &#x27;</span>&amp;&amp;*str!=<span class="string">&#x27;\0&#x27;</span>) <span class="comment">//找到空格或者结束符则认为结束了</span></span><br><span class="line">&#123;</span><br><span class="line">*cmdname=*str;</span><br><span class="line">str++;</span><br><span class="line">cmdname++;</span><br><span class="line">(*nlen)++;<span class="comment">//统计命令长度</span></span><br><span class="line"><span class="keyword">if</span>(*nlen&gt;=maxlen)<span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//错误的指令</span></span><br><span class="line">&#125;</span><br><span class="line">*cmdname=<span class="string">&#x27;\0&#x27;</span>;<span class="comment">//加入结束符</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//正常返回</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取下一个字符（当中间有很多空格的时候，此函数直接忽略空格，找到空格之后的第一个字符）</span></span><br><span class="line"><span class="comment">//str:字符串指针</span></span><br><span class="line"><span class="comment">//返回值:下一个字符</span></span><br><span class="line">u8 <span class="title function_">usmart_search_nextc</span><span class="params">(u8* str)</span></span><br><span class="line">&#123;    </span><br><span class="line">str++;</span><br><span class="line"><span class="keyword">while</span>(*str==<span class="string">&#x27; &#x27;</span>&amp;&amp;str!=<span class="string">&#x27;\0&#x27;</span>)str++;</span><br><span class="line"><span class="keyword">return</span> *str;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//从str中得到函数名</span></span><br><span class="line"><span class="comment">//*str:源字符串指针</span></span><br><span class="line"><span class="comment">//*fname:获取到的函数名字指针</span></span><br><span class="line"><span class="comment">//*pnum:函数的参数个数</span></span><br><span class="line"><span class="comment">//*rval:是否需要显示返回值(0,不需要;1,需要)</span></span><br><span class="line"><span class="comment">//返回值:0,成功;其他,错误代码.</span></span><br><span class="line">u8 <span class="title function_">usmart_get_fname</span><span class="params">(u8*str,u8*fname,u8 *pnum,u8 *rval)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 res;</span><br><span class="line">u8 fover=<span class="number">0</span>;  <span class="comment">//括号深度</span></span><br><span class="line">u8 *strtemp;</span><br><span class="line">u8 offset=<span class="number">0</span>;  </span><br><span class="line">u8 parmnum=<span class="number">0</span>;</span><br><span class="line">u8 temp=<span class="number">1</span>;</span><br><span class="line">u8 fpname[<span class="number">6</span>];<span class="comment">//void+X+&#x27;/0&#x27;</span></span><br><span class="line">u8 fplcnt=<span class="number">0</span>; <span class="comment">//第一个参数的长度计数器</span></span><br><span class="line">u8 pcnt=<span class="number">0</span>; <span class="comment">//参数计数器</span></span><br><span class="line">u8 nchar;</span><br><span class="line"><span class="comment">//判断函数是否有返回值</span></span><br><span class="line">strtemp=str;</span><br><span class="line"><span class="keyword">while</span>(*strtemp!=<span class="string">&#x27;\0&#x27;</span>)<span class="comment">//没有结束</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*strtemp!=<span class="string">&#x27; &#x27;</span>&amp;&amp;(pcnt&amp;<span class="number">0X7F</span>)&lt;<span class="number">5</span>)<span class="comment">//最多记录5个字符</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(pcnt==<span class="number">0</span>)pcnt|=<span class="number">0X80</span>;<span class="comment">//置位最高位,标记开始接收返回值类型</span></span><br><span class="line"><span class="keyword">if</span>(((pcnt&amp;<span class="number">0x7f</span>)==<span class="number">4</span>)&amp;&amp;(*strtemp!=<span class="string">&#x27;*&#x27;</span>))<span class="keyword">break</span>;<span class="comment">//最后一个字符,必须是*</span></span><br><span class="line">fpname[pcnt&amp;<span class="number">0x7f</span>]=*strtemp;<span class="comment">//记录函数的返回值类型</span></span><br><span class="line">pcnt++;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(pcnt==<span class="number">0X85</span>)<span class="keyword">break</span>;</span><br><span class="line">strtemp++; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(pcnt)<span class="comment">//接收完了</span></span><br><span class="line">&#123;</span><br><span class="line">fpname[pcnt&amp;<span class="number">0x7f</span>]=<span class="string">&#x27;\0&#x27;</span>;<span class="comment">//加入结束符</span></span><br><span class="line"><span class="keyword">if</span>(usmart_strcmp(fpname,<span class="string">&quot;void&quot;</span>)==<span class="number">0</span>)*rval=<span class="number">0</span>;<span class="comment">//不需要返回值</span></span><br><span class="line"><span class="keyword">else</span> *rval=<span class="number">1</span>;   <span class="comment">//需要返回值</span></span><br><span class="line">pcnt=<span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line">res=<span class="number">0</span>;</span><br><span class="line">strtemp=str;</span><br><span class="line"><span class="keyword">while</span>(*strtemp!=<span class="string">&#x27;(&#x27;</span>&amp;&amp;*strtemp!=<span class="string">&#x27;\0&#x27;</span>) <span class="comment">//此代码找到函数名的真正起始位置</span></span><br><span class="line">&#123;  </span><br><span class="line">strtemp++;</span><br><span class="line">res++;</span><br><span class="line"><span class="keyword">if</span>(*strtemp==<span class="string">&#x27; &#x27;</span>||*strtemp==<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">nchar=usmart_search_nextc(strtemp);<span class="comment">//获取下一个字符</span></span><br><span class="line"><span class="keyword">if</span>(nchar!=<span class="string">&#x27;(&#x27;</span>&amp;&amp;nchar!=<span class="string">&#x27;*&#x27;</span>)offset=res;<span class="comment">//跳过空格和*号</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">strtemp=str;</span><br><span class="line"><span class="keyword">if</span>(offset)strtemp+=offset+<span class="number">1</span>;<span class="comment">//跳到函数名开始的地方   </span></span><br><span class="line">res=<span class="number">0</span>;</span><br><span class="line">nchar=<span class="number">0</span>;<span class="comment">//是否正在字符串里面的标志,0，不在字符串;1，在字符串;</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*strtemp==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">res=USMART_FUNCERR;<span class="comment">//函数错误</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(*strtemp==<span class="string">&#x27;(&#x27;</span>&amp;&amp;nchar==<span class="number">0</span>)fover++;<span class="comment">//括号深度增加一级 </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*strtemp==<span class="string">&#x27;)&#x27;</span>&amp;&amp;nchar==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(fover)fover--;</span><br><span class="line"><span class="keyword">else</span> res=USMART_FUNCERR;<span class="comment">//错误结束,没收到&#x27;(&#x27;</span></span><br><span class="line"><span class="keyword">if</span>(fover==<span class="number">0</span>)<span class="keyword">break</span>;<span class="comment">//到末尾了,退出    </span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(*strtemp==<span class="string">&#x27;&quot;&#x27;</span>)nchar=!nchar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(fover==<span class="number">0</span>)<span class="comment">//函数名还没接收完</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*strtemp!=<span class="string">&#x27; &#x27;</span>)<span class="comment">//空格不属于函数名</span></span><br><span class="line">&#123;</span><br><span class="line">*fname=*strtemp;<span class="comment">//得到函数名</span></span><br><span class="line">fname++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="comment">//已经接受完了函数名了.</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*strtemp==<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp=<span class="number">1</span>;<span class="comment">//使能增加一个参数</span></span><br><span class="line">pcnt++;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(*strtemp!=<span class="string">&#x27; &#x27;</span>&amp;&amp;*strtemp!=<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(pcnt==<span class="number">0</span>&amp;&amp;fplcnt&lt;<span class="number">5</span>)<span class="comment">//当第一个参数来时,为了避免统计void类型的参数,必须做判断.</span></span><br><span class="line">&#123;</span><br><span class="line">fpname[fplcnt]=*strtemp;<span class="comment">//记录参数特征.</span></span><br><span class="line">fplcnt++;</span><br><span class="line">&#125;</span><br><span class="line">temp++;<span class="comment">//得到有效参数(非空格)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(fover==<span class="number">1</span>&amp;&amp;temp==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp++;<span class="comment">//防止重复增加</span></span><br><span class="line">parmnum++; <span class="comment">//参数增加一个</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">strtemp++; </span><br><span class="line">&#125;   </span><br><span class="line"><span class="keyword">if</span>(parmnum==<span class="number">1</span>)<span class="comment">//只有1个参数.</span></span><br><span class="line">&#123;</span><br><span class="line">fpname[fplcnt]=<span class="string">&#x27;\0&#x27;</span>;<span class="comment">//加入结束符</span></span><br><span class="line"><span class="keyword">if</span>(usmart_strcmp(fpname,<span class="string">&quot;void&quot;</span>)==<span class="number">0</span>)parmnum=<span class="number">0</span>;<span class="comment">//参数为void,表示没有参数.</span></span><br><span class="line">&#125;</span><br><span class="line">*pnum=parmnum;<span class="comment">//记录参数个数</span></span><br><span class="line">*fname=<span class="string">&#x27;\0&#x27;</span>;<span class="comment">//加入结束符</span></span><br><span class="line"><span class="keyword">return</span> res;<span class="comment">//返回执行结果</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//从str中得到一个函数的参数</span></span><br><span class="line"><span class="comment">//*str:源字符串指针</span></span><br><span class="line"><span class="comment">//*fparm:参数字符串指针</span></span><br><span class="line"><span class="comment">//*ptype:参数类型 0，数字;1，字符串;0XFF，参数错误</span></span><br><span class="line"><span class="comment">//返回值:0,已经无参数了;其他,下一个参数的偏移量.</span></span><br><span class="line">u8 <span class="title function_">usmart_get_aparm</span><span class="params">(u8 *str,u8 *fparm,u8 *ptype)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 i=<span class="number">0</span>;</span><br><span class="line">u8 enout=<span class="number">0</span>;</span><br><span class="line">u8 type=<span class="number">0</span>;<span class="comment">//默认是数字</span></span><br><span class="line">u8 <span class="built_in">string</span>=<span class="number">0</span>; <span class="comment">//标记str是否正在读</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;    </span><br><span class="line"><span class="keyword">if</span>(*str==<span class="string">&#x27;,&#x27;</span>&amp;&amp; <span class="built_in">string</span>==<span class="number">0</span>)enout=<span class="number">1</span>;<span class="comment">//暂缓立即退出,目的是寻找下一个参数的起始地址</span></span><br><span class="line"><span class="keyword">if</span>((*str==<span class="string">&#x27;)&#x27;</span>||*str==<span class="string">&#x27;\0&#x27;</span>)&amp;&amp;<span class="built_in">string</span>==<span class="number">0</span>)<span class="keyword">break</span>;<span class="comment">//立即退出标识符</span></span><br><span class="line"><span class="keyword">if</span>(type==<span class="number">0</span>)<span class="comment">//默认是数字的</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((*str&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; *str&lt;=<span class="string">&#x27;9&#x27;</span>)||(*str&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; *str&lt;=<span class="string">&#x27;f&#x27;</span>)||(*str&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; *str&lt;=<span class="string">&#x27;F&#x27;</span>)||*str==<span class="string">&#x27;X&#x27;</span>||*str==<span class="string">&#x27;x&#x27;</span>)<span class="comment">//数字串检测</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(enout)<span class="keyword">break</span>;<span class="comment">//找到了下一个参数,直接退出.</span></span><br><span class="line"><span class="keyword">if</span>(*str&gt;=<span class="string">&#x27;a&#x27;</span>)*fparm=*str<span class="number">-0X20</span>;<span class="comment">//小写转换为大写</span></span><br><span class="line"><span class="keyword">else</span> *fparm=*str;   <span class="comment">//小写或者数字保持不变</span></span><br><span class="line">fparm++;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(*str==<span class="string">&#x27;&quot;&#x27;</span>)<span class="comment">//找到字符串的开始标志</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(enout)<span class="keyword">break</span>;<span class="comment">//找到,后才找到&quot;,认为结束了.</span></span><br><span class="line">type=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">string</span>=<span class="number">1</span>;<span class="comment">//登记STRING 正在读了</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(*str!=<span class="string">&#x27; &#x27;</span>&amp;&amp;*str!=<span class="string">&#x27;,&#x27;</span>)<span class="comment">//发现非法字符,参数错误</span></span><br><span class="line">&#123;</span><br><span class="line">type=<span class="number">0XFF</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span><span class="comment">//string类</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span>(*str==<span class="string">&#x27;&quot;&#x27;</span>)<span class="built_in">string</span>=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(enout)<span class="keyword">break</span>;<span class="comment">//找到了下一个参数,直接退出.</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">string</span>)<span class="comment">//字符串正在读</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*str==<span class="string">&#x27;\\&#x27;</span>)<span class="comment">//遇到转义符(不复制转义符)</span></span><br><span class="line">&#123; </span><br><span class="line">str++;<span class="comment">//偏移到转义符后面的字符,不管什么字符,直接COPY</span></span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">*fparm=*str;<span class="comment">//小写或者数字保持不变</span></span><br><span class="line">fparm++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">i++;<span class="comment">//偏移量增加</span></span><br><span class="line">str++;</span><br><span class="line">&#125;</span><br><span class="line">*fparm=<span class="string">&#x27;\0&#x27;</span>;<span class="comment">//加入结束符</span></span><br><span class="line">*ptype=type;<span class="comment">//返回参数类型</span></span><br><span class="line"><span class="keyword">return</span> i;<span class="comment">//返回参数长度</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//得到指定参数的起始地址</span></span><br><span class="line"><span class="comment">//num:第num个参数,范围0~9.</span></span><br><span class="line"><span class="comment">//返回值:该参数的起始地址</span></span><br><span class="line">u8 <span class="title function_">usmart_get_parmpos</span><span class="params">(u8 num)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 temp=<span class="number">0</span>;</span><br><span class="line">u8 i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num;i++)temp+=usmart_dev.plentbl[i];</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从str中得到函数参数</span></span><br><span class="line"><span class="comment">//str:源字符串;</span></span><br><span class="line"><span class="comment">//parn:参数的多少.0表示无参数 void类型</span></span><br><span class="line"><span class="comment">//返回值:0,成功;其他,错误代码.</span></span><br><span class="line">u8 <span class="title function_">usmart_get_fparam</span><span class="params">(u8*str,u8 *parn)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 i,type;  </span><br><span class="line">u32 res;</span><br><span class="line">u8 n=<span class="number">0</span>;</span><br><span class="line">u8 len;</span><br><span class="line">u8 tstr[PARM_LEN+<span class="number">1</span>];<span class="comment">//字节长度的缓存,最多可以存放PARM_LEN个字符的字符串</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;MAX_PARM;i++)usmart_dev.plentbl[i]=<span class="number">0</span>;<span class="comment">//清空参数长度表</span></span><br><span class="line"><span class="keyword">while</span>(*str!=<span class="string">&#x27;(&#x27;</span>)<span class="comment">//偏移到参数开始的地方</span></span><br><span class="line">&#123;</span><br><span class="line">str++;    </span><br><span class="line"><span class="keyword">if</span>(*str==<span class="string">&#x27;\0&#x27;</span>)<span class="keyword">return</span> USMART_FUNCERR;<span class="comment">//遇到结束符了</span></span><br><span class="line">&#125;</span><br><span class="line">str++;<span class="comment">//偏移到&quot;(&quot;之后的第一个字节</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">i=usmart_get_aparm(str,tstr,&amp;type);<span class="comment">//得到第一个参数  </span></span><br><span class="line">str+=i;<span class="comment">//偏移</span></span><br><span class="line"><span class="keyword">switch</span>(type)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//数字</span></span><br><span class="line"><span class="keyword">if</span>(tstr[<span class="number">0</span>]!=<span class="string">&#x27;\0&#x27;</span>)<span class="comment">//接收到的参数有效</span></span><br><span class="line">&#123;    </span><br><span class="line">i=usmart_str2num(tstr,&amp;res);<span class="comment">//记录该参数 </span></span><br><span class="line"><span class="keyword">if</span>(i)<span class="keyword">return</span> USMART_PARMERR;<span class="comment">//参数错误.</span></span><br><span class="line">*(u32*)(usmart_dev.parm+usmart_get_parmpos(n))=res;<span class="comment">//记录转换成功的结果.</span></span><br><span class="line">usmart_dev.parmtype&amp;=~(<span class="number">1</span>&lt;&lt;n);<span class="comment">//标记数字</span></span><br><span class="line">usmart_dev.plentbl[n]=<span class="number">4</span>;<span class="comment">//该参数的长度为4  </span></span><br><span class="line">n++;<span class="comment">//参数增加  </span></span><br><span class="line"><span class="keyword">if</span>(n&gt;MAX_PARM)<span class="keyword">return</span> USMART_PARMOVER;<span class="comment">//参数太多</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//字符串 </span></span><br><span class="line">len=usmart_strlen(tstr)+<span class="number">1</span>;<span class="comment">//包含了结束符&#x27;\0&#x27;</span></span><br><span class="line">usmart_strcopy(tstr,&amp;usmart_dev.parm[usmart_get_parmpos(n)]);<span class="comment">//拷贝tstr数据到usmart_dev.parm[n]</span></span><br><span class="line">usmart_dev.parmtype|=<span class="number">1</span>&lt;&lt;n;<span class="comment">//标记字符串 </span></span><br><span class="line">usmart_dev.plentbl[n]=len;<span class="comment">//该参数的长度为len  </span></span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">if</span>(n&gt;MAX_PARM)<span class="keyword">return</span> USMART_PARMOVER;<span class="comment">//参数太多</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0XFF</span>:<span class="comment">//错误</span></span><br><span class="line"><span class="keyword">return</span> USMART_PARMERR;<span class="comment">//参数错误  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(*str==<span class="string">&#x27;)&#x27;</span>||*str==<span class="string">&#x27;\0&#x27;</span>)<span class="keyword">break</span>;<span class="comment">//查到结束标志了.</span></span><br><span class="line">&#125;</span><br><span class="line">*parn=n;<span class="comment">//记录参数的个数</span></span><br><span class="line"><span class="keyword">return</span> USMART_OK;<span class="comment">//正确得到了参数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="usmart_strh"><a class="markdownIt-Anchor" href="#usmart_strh"></a> usmart_str.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//usmart_str.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __USMART_STR_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __USMART_STR_H </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">u8 <span class="title function_">usmart_get_parmpos</span><span class="params">(u8 num)</span>;<span class="comment">//得到某个参数在参数列里面的起始位置</span></span><br><span class="line">u8 <span class="title function_">usmart_strcmp</span><span class="params">(u8*str1,u8 *str2)</span>;<span class="comment">//对比两个字符串是否相等</span></span><br><span class="line">u32 <span class="title function_">usmart_pow</span><span class="params">(u8 m,u8 n)</span>;<span class="comment">//M^N次方</span></span><br><span class="line">u8 <span class="title function_">usmart_str2num</span><span class="params">(u8*str,u32 *res)</span>;<span class="comment">//字符串转为数字</span></span><br><span class="line">u8 <span class="title function_">usmart_get_cmdname</span><span class="params">(u8*str,u8*cmdname,u8 *nlen,u8 maxlen)</span>;<span class="comment">//从str中得到指令名,并返回指令长度</span></span><br><span class="line">u8 <span class="title function_">usmart_get_fname</span><span class="params">(u8*str,u8*fname,u8 *pnum,u8 *rval)</span>;<span class="comment">//从str中得到函数名</span></span><br><span class="line">u8 <span class="title function_">usmart_get_aparm</span><span class="params">(u8 *str,u8 *fparm,u8 *ptype)</span>; <span class="comment">//从str中得到一个函数参数</span></span><br><span class="line">u8 <span class="title function_">usmart_get_fparam</span><span class="params">(u8*str,u8 *parn)</span>;  <span class="comment">//得到str中所有的函数参数.</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;lcd.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usmart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//LED状态设置函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">led_set</span><span class="params">(u8 sta)</span></span><br><span class="line">&#123;</span><br><span class="line">LED1=sta;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//函数参数调用测试函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test_fun</span><span class="params">(<span class="type">void</span>(*ledset)(u8),u8 sta)</span></span><br><span class="line">&#123;</span><br><span class="line">ledset(sta);</span><br><span class="line">&#125;  </span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123; </span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);  <span class="comment">//设置NVIC中断分组2:2位抢占优先级，2位响应优先级</span></span><br><span class="line">uart_init(<span class="number">115200</span>); <span class="comment">//串口初始化为115200</span></span><br><span class="line"> LED_Init();     <span class="comment">//LED端口初始化</span></span><br><span class="line">LCD_Init();</span><br><span class="line">usmart_dev.init(SystemCoreClock/<span class="number">1000000</span>);<span class="comment">//初始化USMART</span></span><br><span class="line"> </span><br><span class="line">POINT_COLOR=RED;</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">50</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;ELITE STM32 ^_^&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">70</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;USMART TEST&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">90</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;ATOM@ALIENTEK&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">110</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;2015/1/14&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>) </span><br><span class="line">&#123;   </span><br><span class="line">LED0=!LED0; </span><br><span class="line">delay_ms(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="代码片段分析"><a class="markdownIt-Anchor" href="#代码片段分析"></a> 代码片段分析</h2><p>略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（13）TFTLCD显示</title>
    <link href="https://sirius-tblog.github.io/posts/802121758.html"/>
    <id>https://sirius-tblog.github.io/posts/802121758.html</id>
    <published>2022-11-08T03:19:18.000Z</published>
    <updated>2023-04-05T14:19:54.949Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作，实现跑马灯样式实验。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a001b03c01.jpg" alt="" title="硬件电路连接" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>beep</td><td>output</td><td>PB8</td><td>LED0驱动</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件驱动GPIO口。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="lcdc"><a class="markdownIt-Anchor" href="#lcdc"></a> lcd.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br><span class="line">2291</span><br><span class="line">2292</span><br><span class="line">2293</span><br><span class="line">2294</span><br><span class="line">2295</span><br><span class="line">2296</span><br><span class="line">2297</span><br><span class="line">2298</span><br><span class="line">2299</span><br><span class="line">2300</span><br><span class="line">2301</span><br><span class="line">2302</span><br><span class="line">2303</span><br><span class="line">2304</span><br><span class="line">2305</span><br><span class="line">2306</span><br><span class="line">2307</span><br><span class="line">2308</span><br><span class="line">2309</span><br><span class="line">2310</span><br><span class="line">2311</span><br><span class="line">2312</span><br><span class="line">2313</span><br><span class="line">2314</span><br><span class="line">2315</span><br><span class="line">2316</span><br><span class="line">2317</span><br><span class="line">2318</span><br><span class="line">2319</span><br><span class="line">2320</span><br><span class="line">2321</span><br><span class="line">2322</span><br><span class="line">2323</span><br><span class="line">2324</span><br><span class="line">2325</span><br><span class="line">2326</span><br><span class="line">2327</span><br><span class="line">2328</span><br><span class="line">2329</span><br><span class="line">2330</span><br><span class="line">2331</span><br><span class="line">2332</span><br><span class="line">2333</span><br><span class="line">2334</span><br><span class="line">2335</span><br><span class="line">2336</span><br><span class="line">2337</span><br><span class="line">2338</span><br><span class="line">2339</span><br><span class="line">2340</span><br><span class="line">2341</span><br><span class="line">2342</span><br><span class="line">2343</span><br><span class="line">2344</span><br><span class="line">2345</span><br><span class="line">2346</span><br><span class="line">2347</span><br><span class="line">2348</span><br><span class="line">2349</span><br><span class="line">2350</span><br><span class="line">2351</span><br><span class="line">2352</span><br><span class="line">2353</span><br><span class="line">2354</span><br><span class="line">2355</span><br><span class="line">2356</span><br><span class="line">2357</span><br><span class="line">2358</span><br><span class="line">2359</span><br><span class="line">2360</span><br><span class="line">2361</span><br><span class="line">2362</span><br><span class="line">2363</span><br><span class="line">2364</span><br><span class="line">2365</span><br><span class="line">2366</span><br><span class="line">2367</span><br><span class="line">2368</span><br><span class="line">2369</span><br><span class="line">2370</span><br><span class="line">2371</span><br><span class="line">2372</span><br><span class="line">2373</span><br><span class="line">2374</span><br><span class="line">2375</span><br><span class="line">2376</span><br><span class="line">2377</span><br><span class="line">2378</span><br><span class="line">2379</span><br><span class="line">2380</span><br><span class="line">2381</span><br><span class="line">2382</span><br><span class="line">2383</span><br><span class="line">2384</span><br><span class="line">2385</span><br><span class="line">2386</span><br><span class="line">2387</span><br><span class="line">2388</span><br><span class="line">2389</span><br><span class="line">2390</span><br><span class="line">2391</span><br><span class="line">2392</span><br><span class="line">2393</span><br><span class="line">2394</span><br><span class="line">2395</span><br><span class="line">2396</span><br><span class="line">2397</span><br><span class="line">2398</span><br><span class="line">2399</span><br><span class="line">2400</span><br><span class="line">2401</span><br><span class="line">2402</span><br><span class="line">2403</span><br><span class="line">2404</span><br><span class="line">2405</span><br><span class="line">2406</span><br><span class="line">2407</span><br><span class="line">2408</span><br><span class="line">2409</span><br><span class="line">2410</span><br><span class="line">2411</span><br><span class="line">2412</span><br><span class="line">2413</span><br><span class="line">2414</span><br><span class="line">2415</span><br><span class="line">2416</span><br><span class="line">2417</span><br><span class="line">2418</span><br><span class="line">2419</span><br><span class="line">2420</span><br><span class="line">2421</span><br><span class="line">2422</span><br><span class="line">2423</span><br><span class="line">2424</span><br><span class="line">2425</span><br><span class="line">2426</span><br><span class="line">2427</span><br><span class="line">2428</span><br><span class="line">2429</span><br><span class="line">2430</span><br><span class="line">2431</span><br><span class="line">2432</span><br><span class="line">2433</span><br><span class="line">2434</span><br><span class="line">2435</span><br><span class="line">2436</span><br><span class="line">2437</span><br><span class="line">2438</span><br><span class="line">2439</span><br><span class="line">2440</span><br><span class="line">2441</span><br><span class="line">2442</span><br><span class="line">2443</span><br><span class="line">2444</span><br><span class="line">2445</span><br><span class="line">2446</span><br><span class="line">2447</span><br><span class="line">2448</span><br><span class="line">2449</span><br><span class="line">2450</span><br><span class="line">2451</span><br><span class="line">2452</span><br><span class="line">2453</span><br><span class="line">2454</span><br><span class="line">2455</span><br><span class="line">2456</span><br><span class="line">2457</span><br><span class="line">2458</span><br><span class="line">2459</span><br><span class="line">2460</span><br><span class="line">2461</span><br><span class="line">2462</span><br><span class="line">2463</span><br><span class="line">2464</span><br><span class="line">2465</span><br><span class="line">2466</span><br><span class="line">2467</span><br><span class="line">2468</span><br><span class="line">2469</span><br><span class="line">2470</span><br><span class="line">2471</span><br><span class="line">2472</span><br><span class="line">2473</span><br><span class="line">2474</span><br><span class="line">2475</span><br><span class="line">2476</span><br><span class="line">2477</span><br><span class="line">2478</span><br><span class="line">2479</span><br><span class="line">2480</span><br><span class="line">2481</span><br><span class="line">2482</span><br><span class="line">2483</span><br><span class="line">2484</span><br><span class="line">2485</span><br><span class="line">2486</span><br><span class="line">2487</span><br><span class="line">2488</span><br><span class="line">2489</span><br><span class="line">2490</span><br><span class="line">2491</span><br><span class="line">2492</span><br><span class="line">2493</span><br><span class="line">2494</span><br><span class="line">2495</span><br><span class="line">2496</span><br><span class="line">2497</span><br><span class="line">2498</span><br><span class="line">2499</span><br><span class="line">2500</span><br><span class="line">2501</span><br><span class="line">2502</span><br><span class="line">2503</span><br><span class="line">2504</span><br><span class="line">2505</span><br><span class="line">2506</span><br><span class="line">2507</span><br><span class="line">2508</span><br><span class="line">2509</span><br><span class="line">2510</span><br><span class="line">2511</span><br><span class="line">2512</span><br><span class="line">2513</span><br><span class="line">2514</span><br><span class="line">2515</span><br><span class="line">2516</span><br><span class="line">2517</span><br><span class="line">2518</span><br><span class="line">2519</span><br><span class="line">2520</span><br><span class="line">2521</span><br><span class="line">2522</span><br><span class="line">2523</span><br><span class="line">2524</span><br><span class="line">2525</span><br><span class="line">2526</span><br><span class="line">2527</span><br><span class="line">2528</span><br><span class="line">2529</span><br><span class="line">2530</span><br><span class="line">2531</span><br><span class="line">2532</span><br><span class="line">2533</span><br><span class="line">2534</span><br><span class="line">2535</span><br><span class="line">2536</span><br><span class="line">2537</span><br><span class="line">2538</span><br><span class="line">2539</span><br><span class="line">2540</span><br><span class="line">2541</span><br><span class="line">2542</span><br><span class="line">2543</span><br><span class="line">2544</span><br><span class="line">2545</span><br><span class="line">2546</span><br><span class="line">2547</span><br><span class="line">2548</span><br><span class="line">2549</span><br><span class="line">2550</span><br><span class="line">2551</span><br><span class="line">2552</span><br><span class="line">2553</span><br><span class="line">2554</span><br><span class="line">2555</span><br><span class="line">2556</span><br><span class="line">2557</span><br><span class="line">2558</span><br><span class="line">2559</span><br><span class="line">2560</span><br><span class="line">2561</span><br><span class="line">2562</span><br><span class="line">2563</span><br><span class="line">2564</span><br><span class="line">2565</span><br><span class="line">2566</span><br><span class="line">2567</span><br><span class="line">2568</span><br><span class="line">2569</span><br><span class="line">2570</span><br><span class="line">2571</span><br><span class="line">2572</span><br><span class="line">2573</span><br><span class="line">2574</span><br><span class="line">2575</span><br><span class="line">2576</span><br><span class="line">2577</span><br><span class="line">2578</span><br><span class="line">2579</span><br><span class="line">2580</span><br><span class="line">2581</span><br><span class="line">2582</span><br><span class="line">2583</span><br><span class="line">2584</span><br><span class="line">2585</span><br><span class="line">2586</span><br><span class="line">2587</span><br><span class="line">2588</span><br><span class="line">2589</span><br><span class="line">2590</span><br><span class="line">2591</span><br><span class="line">2592</span><br><span class="line">2593</span><br><span class="line">2594</span><br><span class="line">2595</span><br><span class="line">2596</span><br><span class="line">2597</span><br><span class="line">2598</span><br><span class="line">2599</span><br><span class="line">2600</span><br><span class="line">2601</span><br><span class="line">2602</span><br><span class="line">2603</span><br><span class="line">2604</span><br><span class="line">2605</span><br><span class="line">2606</span><br><span class="line">2607</span><br><span class="line">2608</span><br><span class="line">2609</span><br><span class="line">2610</span><br><span class="line">2611</span><br><span class="line">2612</span><br><span class="line">2613</span><br><span class="line">2614</span><br><span class="line">2615</span><br><span class="line">2616</span><br><span class="line">2617</span><br><span class="line">2618</span><br><span class="line">2619</span><br><span class="line">2620</span><br><span class="line">2621</span><br><span class="line">2622</span><br><span class="line">2623</span><br><span class="line">2624</span><br><span class="line">2625</span><br><span class="line">2626</span><br><span class="line">2627</span><br><span class="line">2628</span><br><span class="line">2629</span><br><span class="line">2630</span><br><span class="line">2631</span><br><span class="line">2632</span><br><span class="line">2633</span><br><span class="line">2634</span><br><span class="line">2635</span><br><span class="line">2636</span><br><span class="line">2637</span><br><span class="line">2638</span><br><span class="line">2639</span><br><span class="line">2640</span><br><span class="line">2641</span><br><span class="line">2642</span><br><span class="line">2643</span><br><span class="line">2644</span><br><span class="line">2645</span><br><span class="line">2646</span><br><span class="line">2647</span><br><span class="line">2648</span><br><span class="line">2649</span><br><span class="line">2650</span><br><span class="line">2651</span><br><span class="line">2652</span><br><span class="line">2653</span><br><span class="line">2654</span><br><span class="line">2655</span><br><span class="line">2656</span><br><span class="line">2657</span><br><span class="line">2658</span><br><span class="line">2659</span><br><span class="line">2660</span><br><span class="line">2661</span><br><span class="line">2662</span><br><span class="line">2663</span><br><span class="line">2664</span><br><span class="line">2665</span><br><span class="line">2666</span><br><span class="line">2667</span><br><span class="line">2668</span><br><span class="line">2669</span><br><span class="line">2670</span><br><span class="line">2671</span><br><span class="line">2672</span><br><span class="line">2673</span><br><span class="line">2674</span><br><span class="line">2675</span><br><span class="line">2676</span><br><span class="line">2677</span><br><span class="line">2678</span><br><span class="line">2679</span><br><span class="line">2680</span><br><span class="line">2681</span><br><span class="line">2682</span><br><span class="line">2683</span><br><span class="line">2684</span><br><span class="line">2685</span><br><span class="line">2686</span><br><span class="line">2687</span><br><span class="line">2688</span><br><span class="line">2689</span><br><span class="line">2690</span><br><span class="line">2691</span><br><span class="line">2692</span><br><span class="line">2693</span><br><span class="line">2694</span><br><span class="line">2695</span><br><span class="line">2696</span><br><span class="line">2697</span><br><span class="line">2698</span><br><span class="line">2699</span><br><span class="line">2700</span><br><span class="line">2701</span><br><span class="line">2702</span><br><span class="line">2703</span><br><span class="line">2704</span><br><span class="line">2705</span><br><span class="line">2706</span><br><span class="line">2707</span><br><span class="line">2708</span><br><span class="line">2709</span><br><span class="line">2710</span><br><span class="line">2711</span><br><span class="line">2712</span><br><span class="line">2713</span><br><span class="line">2714</span><br><span class="line">2715</span><br><span class="line">2716</span><br><span class="line">2717</span><br><span class="line">2718</span><br><span class="line">2719</span><br><span class="line">2720</span><br><span class="line">2721</span><br><span class="line">2722</span><br><span class="line">2723</span><br><span class="line">2724</span><br><span class="line">2725</span><br><span class="line">2726</span><br><span class="line">2727</span><br><span class="line">2728</span><br><span class="line">2729</span><br><span class="line">2730</span><br><span class="line">2731</span><br><span class="line">2732</span><br><span class="line">2733</span><br><span class="line">2734</span><br><span class="line">2735</span><br><span class="line">2736</span><br><span class="line">2737</span><br><span class="line">2738</span><br><span class="line">2739</span><br><span class="line">2740</span><br><span class="line">2741</span><br><span class="line">2742</span><br><span class="line">2743</span><br><span class="line">2744</span><br><span class="line">2745</span><br><span class="line">2746</span><br><span class="line">2747</span><br><span class="line">2748</span><br><span class="line">2749</span><br><span class="line">2750</span><br><span class="line">2751</span><br><span class="line">2752</span><br><span class="line">2753</span><br><span class="line">2754</span><br><span class="line">2755</span><br><span class="line">2756</span><br><span class="line">2757</span><br><span class="line">2758</span><br><span class="line">2759</span><br><span class="line">2760</span><br><span class="line">2761</span><br><span class="line">2762</span><br><span class="line">2763</span><br><span class="line">2764</span><br><span class="line">2765</span><br><span class="line">2766</span><br><span class="line">2767</span><br><span class="line">2768</span><br><span class="line">2769</span><br><span class="line">2770</span><br><span class="line">2771</span><br><span class="line">2772</span><br><span class="line">2773</span><br><span class="line">2774</span><br><span class="line">2775</span><br><span class="line">2776</span><br><span class="line">2777</span><br><span class="line">2778</span><br><span class="line">2779</span><br><span class="line">2780</span><br><span class="line">2781</span><br><span class="line">2782</span><br><span class="line">2783</span><br><span class="line">2784</span><br><span class="line">2785</span><br><span class="line">2786</span><br><span class="line">2787</span><br><span class="line">2788</span><br><span class="line">2789</span><br><span class="line">2790</span><br><span class="line">2791</span><br><span class="line">2792</span><br><span class="line">2793</span><br><span class="line">2794</span><br><span class="line">2795</span><br><span class="line">2796</span><br><span class="line">2797</span><br><span class="line">2798</span><br><span class="line">2799</span><br><span class="line">2800</span><br><span class="line">2801</span><br><span class="line">2802</span><br><span class="line">2803</span><br><span class="line">2804</span><br><span class="line">2805</span><br><span class="line">2806</span><br><span class="line">2807</span><br><span class="line">2808</span><br><span class="line">2809</span><br><span class="line">2810</span><br><span class="line">2811</span><br><span class="line">2812</span><br><span class="line">2813</span><br><span class="line">2814</span><br><span class="line">2815</span><br><span class="line">2816</span><br><span class="line">2817</span><br><span class="line">2818</span><br><span class="line">2819</span><br><span class="line">2820</span><br><span class="line">2821</span><br><span class="line">2822</span><br><span class="line">2823</span><br><span class="line">2824</span><br><span class="line">2825</span><br><span class="line">2826</span><br><span class="line">2827</span><br><span class="line">2828</span><br><span class="line">2829</span><br><span class="line">2830</span><br><span class="line">2831</span><br><span class="line">2832</span><br><span class="line">2833</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lcd.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;lcd.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdlib.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;font.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//LCD的画笔颜色和背景色   </span></span><br><span class="line">u16 POINT_COLOR=<span class="number">0x0000</span>;<span class="comment">//画笔颜色</span></span><br><span class="line">u16 BACK_COLOR=<span class="number">0xFFFF</span>;  <span class="comment">//背景色 </span></span><br><span class="line">  </span><br><span class="line"><span class="comment">//管理LCD重要参数</span></span><br><span class="line"><span class="comment">//默认为竖屏</span></span><br><span class="line">_lcd_dev lcddev;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//写寄存器函数</span></span><br><span class="line"><span class="comment">//regval:寄存器值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_WR_REG</span><span class="params">(u16 regval)</span></span><br><span class="line">&#123;   </span><br><span class="line">LCD-&gt;LCD_REG=regval;<span class="comment">//写入要写的寄存器序号 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写LCD数据</span></span><br><span class="line"><span class="comment">//data:要写入的值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_WR_DATA</span><span class="params">(u16 data)</span></span><br><span class="line">&#123; </span><br><span class="line">LCD-&gt;LCD_RAM=data; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//读LCD数据</span></span><br><span class="line"><span class="comment">//返回值:读到的值</span></span><br><span class="line">u16 <span class="title function_">LCD_RD_DATA</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">vu16 ram;<span class="comment">//防止被优化</span></span><br><span class="line">ram=LCD-&gt;LCD_RAM;</span><br><span class="line"><span class="keyword">return</span> ram; </span><br><span class="line">&#125;   </span><br><span class="line"><span class="comment">//写寄存器</span></span><br><span class="line"><span class="comment">//LCD_Reg:寄存器地址</span></span><br><span class="line"><span class="comment">//LCD_RegValue:要写入的数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_WriteReg</span><span class="params">(u16 LCD_Reg,u16 LCD_RegValue)</span></span><br><span class="line">&#123;</span><br><span class="line">LCD-&gt;LCD_REG = LCD_Reg;<span class="comment">//写入要写的寄存器序号 </span></span><br><span class="line">LCD-&gt;LCD_RAM = LCD_RegValue;<span class="comment">//写入数据     </span></span><br><span class="line">&#125;   </span><br><span class="line"><span class="comment">//读寄存器</span></span><br><span class="line"><span class="comment">//LCD_Reg:寄存器地址</span></span><br><span class="line"><span class="comment">//返回值:读到的数据</span></span><br><span class="line">u16 <span class="title function_">LCD_ReadReg</span><span class="params">(u16 LCD_Reg)</span></span><br><span class="line">&#123;   </span><br><span class="line">LCD_WR_REG(LCD_Reg);<span class="comment">//写入要读的寄存器序号</span></span><br><span class="line">delay_us(<span class="number">5</span>);  </span><br><span class="line"><span class="keyword">return</span> LCD_RD_DATA();<span class="comment">//返回读到的值</span></span><br><span class="line">&#125;   </span><br><span class="line"><span class="comment">//开始写GRAM</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_WriteRAM_Prepare</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> LCD-&gt;LCD_REG=lcddev.wramcmd;  </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//LCD写GRAM</span></span><br><span class="line"><span class="comment">//RGB_Code:颜色值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_WriteRAM</span><span class="params">(u16 RGB_Code)</span></span><br><span class="line">&#123;    </span><br><span class="line">LCD-&gt;LCD_RAM = RGB_Code;<span class="comment">//写十六位GRAM</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从ILI93xx读出的数据为GBR格式，而我们写入的时候为RGB格式。</span></span><br><span class="line"><span class="comment">//通过该函数转换</span></span><br><span class="line"><span class="comment">//c:GBR格式的颜色值</span></span><br><span class="line"><span class="comment">//返回值：RGB格式的颜色值</span></span><br><span class="line">u16 <span class="title function_">LCD_BGR2RGB</span><span class="params">(u16 c)</span></span><br><span class="line">&#123;</span><br><span class="line">u16  r,g,b,rgb;   </span><br><span class="line">b=(c&gt;&gt;<span class="number">0</span>)&amp;<span class="number">0x1f</span>;</span><br><span class="line">g=(c&gt;&gt;<span class="number">5</span>)&amp;<span class="number">0x3f</span>;</span><br><span class="line">r=(c&gt;&gt;<span class="number">11</span>)&amp;<span class="number">0x1f</span>; </span><br><span class="line">rgb=(b&lt;&lt;<span class="number">11</span>)+(g&lt;&lt;<span class="number">5</span>)+(r&lt;&lt;<span class="number">0</span>); </span><br><span class="line"><span class="keyword">return</span>(rgb);</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//当mdk -O1时间优化时需要设置</span></span><br><span class="line"><span class="comment">//延时i</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">opt_delay</span><span class="params">(u8 i)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(i--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//读取个某点的颜色值 </span></span><br><span class="line"><span class="comment">//x,y:坐标</span></span><br><span class="line"><span class="comment">//返回值:此点的颜色</span></span><br><span class="line">u16 <span class="title function_">LCD_ReadPoint</span><span class="params">(u16 x,u16 y)</span></span><br><span class="line">&#123;</span><br><span class="line"> u16 r=<span class="number">0</span>,g=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;=lcddev.width||y&gt;=lcddev.height)<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//超过了范围,直接返回   </span></span><br><span class="line">LCD_SetCursor(x,y);    </span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X9341</span>||lcddev.id==<span class="number">0X6804</span>||lcddev.id==<span class="number">0X5310</span>||lcddev.id==<span class="number">0X1963</span>)LCD_WR_REG(<span class="number">0X2E</span>);<span class="comment">//9341/6804/3510/1963 发送读GRAM指令</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X5510</span>)LCD_WR_REG(<span class="number">0X2E00</span>);<span class="comment">//5510 发送读GRAM指令</span></span><br><span class="line"><span class="keyword">else</span> LCD_WR_REG(<span class="number">0X22</span>);       <span class="comment">//其他IC发送读GRAM指令</span></span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X9320</span>)opt_delay(<span class="number">2</span>);<span class="comment">//FOR 9320,延时2us    </span></span><br><span class="line"> r=LCD_RD_DATA();<span class="comment">//dummy Read   </span></span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X1963</span>)<span class="keyword">return</span> r;<span class="comment">//1963直接读就可以 </span></span><br><span class="line">opt_delay(<span class="number">2</span>);  </span><br><span class="line"> r=LCD_RD_DATA();    <span class="comment">//实际坐标颜色</span></span><br><span class="line"> <span class="keyword">if</span>(lcddev.id==<span class="number">0X9341</span>||lcddev.id==<span class="number">0X5310</span>||lcddev.id==<span class="number">0X5510</span>)<span class="comment">//9341/NT35310/NT35510要分2次读出</span></span><br><span class="line"> &#123;</span><br><span class="line">opt_delay(<span class="number">2</span>);  </span><br><span class="line">b=LCD_RD_DATA(); </span><br><span class="line">g=r&amp;<span class="number">0XFF</span>;<span class="comment">//对于9341/5310/5510,第一次读取的是RG的值,R在前,G在后,各占8位</span></span><br><span class="line">g&lt;&lt;=<span class="number">8</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X9325</span>||lcddev.id==<span class="number">0X4535</span>||lcddev.id==<span class="number">0X4531</span>||lcddev.id==<span class="number">0XB505</span>||lcddev.id==<span class="number">0XC505</span>)<span class="keyword">return</span> r;<span class="comment">//这几种IC直接返回颜色值</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X9341</span>||lcddev.id==<span class="number">0X5310</span>||lcddev.id==<span class="number">0X5510</span>)<span class="keyword">return</span> (((r&gt;&gt;<span class="number">11</span>)&lt;&lt;<span class="number">11</span>)|((g&gt;&gt;<span class="number">10</span>)&lt;&lt;<span class="number">5</span>)|(b&gt;&gt;<span class="number">11</span>));<span class="comment">//ILI9341/NT35310/NT35510需要公式转换一下</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> LCD_BGR2RGB(r);<span class="comment">//其他IC</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//LCD开启显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_DisplayOn</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;   </span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X9341</span>||lcddev.id==<span class="number">0X6804</span>||lcddev.id==<span class="number">0X5310</span>||lcddev.id==<span class="number">0X1963</span>)LCD_WR_REG(<span class="number">0X29</span>);<span class="comment">//开启显示</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X5510</span>)LCD_WR_REG(<span class="number">0X2900</span>);<span class="comment">//开启显示</span></span><br><span class="line"><span class="keyword">else</span> LCD_WriteReg(<span class="number">0X07</span>,<span class="number">0x0173</span>);  <span class="comment">//开启显示</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//LCD关闭显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_DisplayOff</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;   </span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X9341</span>||lcddev.id==<span class="number">0X6804</span>||lcddev.id==<span class="number">0X5310</span>||lcddev.id==<span class="number">0X1963</span>)LCD_WR_REG(<span class="number">0X28</span>);<span class="comment">//关闭显示</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X5510</span>)LCD_WR_REG(<span class="number">0X2800</span>);<span class="comment">//关闭显示</span></span><br><span class="line"><span class="keyword">else</span> LCD_WriteReg(<span class="number">0X07</span>,<span class="number">0x0</span>);<span class="comment">//关闭显示 </span></span><br><span class="line">&#125;   </span><br><span class="line"><span class="comment">//设置光标位置</span></span><br><span class="line"><span class="comment">//Xpos:横坐标</span></span><br><span class="line"><span class="comment">//Ypos:纵坐标</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_SetCursor</span><span class="params">(u16 Xpos, u16 Ypos)</span></span><br><span class="line">&#123; </span><br><span class="line"> <span class="keyword">if</span>(lcddev.id==<span class="number">0X9341</span>||lcddev.id==<span class="number">0X5310</span>)</span><br><span class="line">&#123;    </span><br><span class="line">LCD_WR_REG(lcddev.setxcmd); </span><br><span class="line">LCD_WR_DATA(Xpos&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(Xpos&amp;<span class="number">0XFF</span>);  </span><br><span class="line">LCD_WR_REG(lcddev.setycmd); </span><br><span class="line">LCD_WR_DATA(Ypos&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(Ypos&amp;<span class="number">0XFF</span>); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X6804</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lcddev.dir==<span class="number">1</span>)Xpos=lcddev.width<span class="number">-1</span>-Xpos;<span class="comment">//横屏时处理</span></span><br><span class="line">LCD_WR_REG(lcddev.setxcmd); </span><br><span class="line">LCD_WR_DATA(Xpos&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(Xpos&amp;<span class="number">0XFF</span>); </span><br><span class="line">LCD_WR_REG(lcddev.setycmd); </span><br><span class="line">LCD_WR_DATA(Ypos&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(Ypos&amp;<span class="number">0XFF</span>); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X1963</span>)</span><br><span class="line">&#123;   </span><br><span class="line"><span class="keyword">if</span>(lcddev.dir==<span class="number">0</span>)<span class="comment">//x坐标需要变换</span></span><br><span class="line">&#123;</span><br><span class="line">Xpos=lcddev.width<span class="number">-1</span>-Xpos;</span><br><span class="line">LCD_WR_REG(lcddev.setxcmd); </span><br><span class="line">LCD_WR_DATA(<span class="number">0</span>);LCD_WR_DATA(<span class="number">0</span>); </span><br><span class="line">LCD_WR_DATA(Xpos&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(Xpos&amp;<span class="number">0XFF</span>);  </span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_WR_REG(lcddev.setxcmd); </span><br><span class="line">LCD_WR_DATA(Xpos&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(Xpos&amp;<span class="number">0XFF</span>); </span><br><span class="line">LCD_WR_DATA((lcddev.width<span class="number">-1</span>)&gt;&gt;<span class="number">8</span>);LCD_WR_DATA((lcddev.width<span class="number">-1</span>)&amp;<span class="number">0XFF</span>);  </span><br><span class="line">&#125;</span><br><span class="line">LCD_WR_REG(lcddev.setycmd); </span><br><span class="line">LCD_WR_DATA(Ypos&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(Ypos&amp;<span class="number">0XFF</span>); </span><br><span class="line">LCD_WR_DATA((lcddev.height<span class="number">-1</span>)&gt;&gt;<span class="number">8</span>);LCD_WR_DATA((lcddev.height<span class="number">-1</span>)&amp;<span class="number">0XFF</span>);  </span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X5510</span>)</span><br><span class="line">&#123;</span><br><span class="line">LCD_WR_REG(lcddev.setxcmd);LCD_WR_DATA(Xpos&gt;&gt;<span class="number">8</span>); </span><br><span class="line">LCD_WR_REG(lcddev.setxcmd+<span class="number">1</span>);LCD_WR_DATA(Xpos&amp;<span class="number">0XFF</span>); </span><br><span class="line">LCD_WR_REG(lcddev.setycmd);LCD_WR_DATA(Ypos&gt;&gt;<span class="number">8</span>);  </span><br><span class="line">LCD_WR_REG(lcddev.setycmd+<span class="number">1</span>);LCD_WR_DATA(Ypos&amp;<span class="number">0XFF</span>);</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lcddev.dir==<span class="number">1</span>)Xpos=lcddev.width<span class="number">-1</span>-Xpos;<span class="comment">//横屏其实就是调转x,y坐标</span></span><br><span class="line">LCD_WriteReg(lcddev.setxcmd, Xpos);</span><br><span class="line">LCD_WriteReg(lcddev.setycmd, Ypos);</span><br><span class="line">&#125; </span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//设置LCD的自动扫描方向</span></span><br><span class="line"><span class="comment">//注意:其他函数可能会受到此函数设置的影响(尤其是9341/6804这两个奇葩),</span></span><br><span class="line"><span class="comment">//所以,一般设置为L2R_U2D即可,如果设置为其他扫描方式,可能导致显示不正常.</span></span><br><span class="line"><span class="comment">//dir:0~7,代表8个方向(具体定义见lcd.h)</span></span><br><span class="line"><span class="comment">//9320/9325/9328/4531/4535/1505/b505/5408/9341/5310/5510/1963等IC已经实际测试      </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Scan_Dir</span><span class="params">(u8 dir)</span></span><br><span class="line">&#123;</span><br><span class="line">u16 regval=<span class="number">0</span>;</span><br><span class="line">u16 dirreg=<span class="number">0</span>;</span><br><span class="line">u16 temp;  </span><br><span class="line"><span class="keyword">if</span>((lcddev.dir==<span class="number">1</span>&amp;&amp;lcddev.id!=<span class="number">0X6804</span>&amp;&amp;lcddev.id!=<span class="number">0X1963</span>)||(lcddev.dir==<span class="number">0</span>&amp;&amp;lcddev.id==<span class="number">0X1963</span>))<span class="comment">//横屏时，对6804和1963不改变扫描方向！竖屏时1963改变方向</span></span><br><span class="line">&#123;   </span><br><span class="line"><span class="keyword">switch</span>(dir)<span class="comment">//方向转换</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:dir=<span class="number">6</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:dir=<span class="number">7</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:dir=<span class="number">4</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:dir=<span class="number">5</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:dir=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:dir=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:dir=<span class="number">3</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:dir=<span class="number">2</span>;<span class="keyword">break</span>;     </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0x9341</span>||lcddev.id==<span class="number">0X6804</span>||lcddev.id==<span class="number">0X5310</span>||lcddev.id==<span class="number">0X5510</span>||lcddev.id==<span class="number">0X1963</span>)<span class="comment">//9341/6804/5310/5510/1963,特殊处理</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(dir)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> L2R_U2D:<span class="comment">//从左到右,从上到下</span></span><br><span class="line">regval|=(<span class="number">0</span>&lt;&lt;<span class="number">7</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">6</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">5</span>); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> L2R_D2U:<span class="comment">//从左到右,从下到上</span></span><br><span class="line">regval|=(<span class="number">1</span>&lt;&lt;<span class="number">7</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">6</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">5</span>); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> R2L_U2D:<span class="comment">//从右到左,从上到下</span></span><br><span class="line">regval|=(<span class="number">0</span>&lt;&lt;<span class="number">7</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">6</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">5</span>); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> R2L_D2U:<span class="comment">//从右到左,从下到上</span></span><br><span class="line">regval|=(<span class="number">1</span>&lt;&lt;<span class="number">7</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">6</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">5</span>); </span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">case</span> U2D_L2R:<span class="comment">//从上到下,从左到右</span></span><br><span class="line">regval|=(<span class="number">0</span>&lt;&lt;<span class="number">7</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">6</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">5</span>); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U2D_R2L:<span class="comment">//从上到下,从右到左</span></span><br><span class="line">regval|=(<span class="number">0</span>&lt;&lt;<span class="number">7</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">6</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">5</span>); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> D2U_L2R:<span class="comment">//从下到上,从左到右</span></span><br><span class="line">regval|=(<span class="number">1</span>&lt;&lt;<span class="number">7</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">6</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">5</span>); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> D2U_R2L:<span class="comment">//从下到上,从右到左</span></span><br><span class="line">regval|=(<span class="number">1</span>&lt;&lt;<span class="number">7</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">6</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">5</span>); </span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X5510</span>)dirreg=<span class="number">0X3600</span>;</span><br><span class="line"><span class="keyword">else</span> dirreg=<span class="number">0X36</span>;</span><br><span class="line"> <span class="keyword">if</span>((lcddev.id!=<span class="number">0X5310</span>)&amp;&amp;(lcddev.id!=<span class="number">0X5510</span>)&amp;&amp;(lcddev.id!=<span class="number">0X1963</span>))regval|=<span class="number">0X08</span>;<span class="comment">//5310/5510/1963不需要BGR   </span></span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X6804</span>)regval|=<span class="number">0x02</span>;<span class="comment">//6804的BIT6和9341的反了   </span></span><br><span class="line">LCD_WriteReg(dirreg,regval);</span><br><span class="line"><span class="keyword">if</span>(lcddev.id!=<span class="number">0X1963</span>)<span class="comment">//1963不做坐标处理</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(regval&amp;<span class="number">0X20</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lcddev.width&lt;lcddev.height)<span class="comment">//交换X,Y</span></span><br><span class="line">&#123;</span><br><span class="line">temp=lcddev.width;</span><br><span class="line">lcddev.width=lcddev.height;</span><br><span class="line">lcddev.height=temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lcddev.width&gt;lcddev.height)<span class="comment">//交换X,Y</span></span><br><span class="line">&#123;</span><br><span class="line">temp=lcddev.width;</span><br><span class="line">lcddev.width=lcddev.height;</span><br><span class="line">lcddev.height=temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X5510</span>)</span><br><span class="line">&#123;</span><br><span class="line">LCD_WR_REG(lcddev.setxcmd);LCD_WR_DATA(<span class="number">0</span>); </span><br><span class="line">LCD_WR_REG(lcddev.setxcmd+<span class="number">1</span>);LCD_WR_DATA(<span class="number">0</span>); </span><br><span class="line">LCD_WR_REG(lcddev.setxcmd+<span class="number">2</span>);LCD_WR_DATA((lcddev.width<span class="number">-1</span>)&gt;&gt;<span class="number">8</span>); </span><br><span class="line">LCD_WR_REG(lcddev.setxcmd+<span class="number">3</span>);LCD_WR_DATA((lcddev.width<span class="number">-1</span>)&amp;<span class="number">0XFF</span>); </span><br><span class="line">LCD_WR_REG(lcddev.setycmd);LCD_WR_DATA(<span class="number">0</span>); </span><br><span class="line">LCD_WR_REG(lcddev.setycmd+<span class="number">1</span>);LCD_WR_DATA(<span class="number">0</span>); </span><br><span class="line">LCD_WR_REG(lcddev.setycmd+<span class="number">2</span>);LCD_WR_DATA((lcddev.height<span class="number">-1</span>)&gt;&gt;<span class="number">8</span>); </span><br><span class="line">LCD_WR_REG(lcddev.setycmd+<span class="number">3</span>);LCD_WR_DATA((lcddev.height<span class="number">-1</span>)&amp;<span class="number">0XFF</span>);</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_WR_REG(lcddev.setxcmd); </span><br><span class="line">LCD_WR_DATA(<span class="number">0</span>);LCD_WR_DATA(<span class="number">0</span>);</span><br><span class="line">LCD_WR_DATA((lcddev.width<span class="number">-1</span>)&gt;&gt;<span class="number">8</span>);LCD_WR_DATA((lcddev.width<span class="number">-1</span>)&amp;<span class="number">0XFF</span>);</span><br><span class="line">LCD_WR_REG(lcddev.setycmd); </span><br><span class="line">LCD_WR_DATA(<span class="number">0</span>);LCD_WR_DATA(<span class="number">0</span>);</span><br><span class="line">LCD_WR_DATA((lcddev.height<span class="number">-1</span>)&gt;&gt;<span class="number">8</span>);LCD_WR_DATA((lcddev.height<span class="number">-1</span>)&amp;<span class="number">0XFF</span>);  </span><br><span class="line">&#125;</span><br><span class="line">  &#125;<span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(dir)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> L2R_U2D:<span class="comment">//从左到右,从上到下</span></span><br><span class="line">regval|=(<span class="number">1</span>&lt;&lt;<span class="number">5</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">4</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">3</span>); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> L2R_D2U:<span class="comment">//从左到右,从下到上</span></span><br><span class="line">regval|=(<span class="number">0</span>&lt;&lt;<span class="number">5</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">4</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">3</span>); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> R2L_U2D:<span class="comment">//从右到左,从上到下</span></span><br><span class="line">regval|=(<span class="number">1</span>&lt;&lt;<span class="number">5</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">4</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">3</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> R2L_D2U:<span class="comment">//从右到左,从下到上</span></span><br><span class="line">regval|=(<span class="number">0</span>&lt;&lt;<span class="number">5</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">4</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">3</span>); </span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">case</span> U2D_L2R:<span class="comment">//从上到下,从左到右</span></span><br><span class="line">regval|=(<span class="number">1</span>&lt;&lt;<span class="number">5</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">4</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">3</span>); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U2D_R2L:<span class="comment">//从上到下,从右到左</span></span><br><span class="line">regval|=(<span class="number">1</span>&lt;&lt;<span class="number">5</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">4</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">3</span>); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> D2U_L2R:<span class="comment">//从下到上,从左到右</span></span><br><span class="line">regval|=(<span class="number">0</span>&lt;&lt;<span class="number">5</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">4</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">3</span>); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> D2U_R2L:<span class="comment">//从下到上,从右到左</span></span><br><span class="line">regval|=(<span class="number">0</span>&lt;&lt;<span class="number">5</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">4</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">3</span>); </span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125; </span><br><span class="line">dirreg=<span class="number">0X03</span>;</span><br><span class="line">regval|=<span class="number">1</span>&lt;&lt;<span class="number">12</span>; </span><br><span class="line">LCD_WriteReg(dirreg,regval);</span><br><span class="line">&#125;</span><br><span class="line">&#125;     </span><br><span class="line"><span class="comment">//画点</span></span><br><span class="line"><span class="comment">//x,y:坐标</span></span><br><span class="line"><span class="comment">//POINT_COLOR:此点的颜色</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_DrawPoint</span><span class="params">(u16 x,u16 y)</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_SetCursor(x,y);<span class="comment">//设置光标位置 </span></span><br><span class="line">LCD_WriteRAM_Prepare();<span class="comment">//开始写入GRAM</span></span><br><span class="line">LCD-&gt;LCD_RAM=POINT_COLOR; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//快速画点</span></span><br><span class="line"><span class="comment">//x,y:坐标</span></span><br><span class="line"><span class="comment">//color:颜色</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Fast_DrawPoint</span><span class="params">(u16 x,u16 y,u16 color)</span></span><br><span class="line">&#123;   </span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X9341</span>||lcddev.id==<span class="number">0X5310</span>)</span><br><span class="line">&#123;</span><br><span class="line">LCD_WR_REG(lcddev.setxcmd); </span><br><span class="line">LCD_WR_DATA(x&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(x&amp;<span class="number">0XFF</span>);   </span><br><span class="line">LCD_WR_REG(lcddev.setycmd); </span><br><span class="line">LCD_WR_DATA(y&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(y&amp;<span class="number">0XFF</span>);   </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X5510</span>)</span><br><span class="line">&#123;</span><br><span class="line">LCD_WR_REG(lcddev.setxcmd);LCD_WR_DATA(x&gt;&gt;<span class="number">8</span>);  </span><br><span class="line">LCD_WR_REG(lcddev.setxcmd+<span class="number">1</span>);LCD_WR_DATA(x&amp;<span class="number">0XFF</span>);  </span><br><span class="line">LCD_WR_REG(lcddev.setycmd);LCD_WR_DATA(y&gt;&gt;<span class="number">8</span>);  </span><br><span class="line">LCD_WR_REG(lcddev.setycmd+<span class="number">1</span>);LCD_WR_DATA(y&amp;<span class="number">0XFF</span>); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X1963</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lcddev.dir==<span class="number">0</span>)x=lcddev.width<span class="number">-1</span>-x;</span><br><span class="line">LCD_WR_REG(lcddev.setxcmd); </span><br><span class="line">LCD_WR_DATA(x&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(x&amp;<span class="number">0XFF</span>); </span><br><span class="line">LCD_WR_DATA(x&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(x&amp;<span class="number">0XFF</span>); </span><br><span class="line">LCD_WR_REG(lcddev.setycmd); </span><br><span class="line">LCD_WR_DATA(y&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(y&amp;<span class="number">0XFF</span>); </span><br><span class="line">LCD_WR_DATA(y&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(y&amp;<span class="number">0XFF</span>); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X6804</span>)</span><br><span class="line">&#123;    </span><br><span class="line"><span class="keyword">if</span>(lcddev.dir==<span class="number">1</span>)x=lcddev.width<span class="number">-1</span>-x;<span class="comment">//横屏时处理</span></span><br><span class="line">LCD_WR_REG(lcddev.setxcmd); </span><br><span class="line">LCD_WR_DATA(x&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(x&amp;<span class="number">0XFF</span>); </span><br><span class="line">LCD_WR_REG(lcddev.setycmd); </span><br><span class="line">LCD_WR_DATA(y&gt;&gt;<span class="number">8</span>);LCD_WR_DATA(y&amp;<span class="number">0XFF</span>); </span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>(lcddev.dir==<span class="number">1</span>)x=lcddev.width<span class="number">-1</span>-x;<span class="comment">//横屏其实就是调转x,y坐标</span></span><br><span class="line">LCD_WriteReg(lcddev.setxcmd,x);</span><br><span class="line">LCD_WriteReg(lcddev.setycmd,y);</span><br><span class="line">&#125; </span><br><span class="line">LCD-&gt;LCD_REG=lcddev.wramcmd; </span><br><span class="line">LCD-&gt;LCD_RAM=color; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//SSD1963 背光设置</span></span><br><span class="line"><span class="comment">//pwm:背光等级,0~100.越大越亮.</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_SSD_BackLightSet</span><span class="params">(u8 pwm)</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_WR_REG(<span class="number">0xBE</span>);<span class="comment">//配置PWM输出</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x05</span>);<span class="comment">//1设置PWM频率</span></span><br><span class="line">LCD_WR_DATA(pwm*<span class="number">2.55</span>);<span class="comment">//2设置PWM占空比</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x01</span>);<span class="comment">//3设置C</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0xFF</span>);<span class="comment">//4设置D</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);<span class="comment">//5设置E</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);<span class="comment">//6设置F</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置LCD显示方向</span></span><br><span class="line"><span class="comment">//dir:0,竖屏；1,横屏</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Display_Dir</span><span class="params">(u8 dir)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dir==<span class="number">0</span>)<span class="comment">//竖屏</span></span><br><span class="line">&#123;</span><br><span class="line">lcddev.dir=<span class="number">0</span>;<span class="comment">//竖屏</span></span><br><span class="line">lcddev.width=<span class="number">240</span>;</span><br><span class="line">lcddev.height=<span class="number">320</span>;</span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X9341</span>||lcddev.id==<span class="number">0X6804</span>||lcddev.id==<span class="number">0X5310</span>)</span><br><span class="line">&#123;</span><br><span class="line">lcddev.wramcmd=<span class="number">0X2C</span>;</span><br><span class="line"> lcddev.setxcmd=<span class="number">0X2A</span>;</span><br><span class="line">lcddev.setycmd=<span class="number">0X2B</span>;   </span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X6804</span>||lcddev.id==<span class="number">0X5310</span>)</span><br><span class="line">&#123;</span><br><span class="line">lcddev.width=<span class="number">320</span>;</span><br><span class="line">lcddev.height=<span class="number">480</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0x5510</span>)</span><br><span class="line">&#123;</span><br><span class="line">lcddev.wramcmd=<span class="number">0X2C00</span>;</span><br><span class="line"> lcddev.setxcmd=<span class="number">0X2A00</span>;</span><br><span class="line">lcddev.setycmd=<span class="number">0X2B00</span>; </span><br><span class="line">lcddev.width=<span class="number">480</span>;</span><br><span class="line">lcddev.height=<span class="number">800</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X1963</span>)</span><br><span class="line">&#123;</span><br><span class="line">lcddev.wramcmd=<span class="number">0X2C</span>;<span class="comment">//设置写入GRAM的指令 </span></span><br><span class="line">lcddev.setxcmd=<span class="number">0X2B</span>;<span class="comment">//设置写X坐标指令</span></span><br><span class="line">lcddev.setycmd=<span class="number">0X2A</span>;<span class="comment">//设置写Y坐标指令</span></span><br><span class="line">lcddev.width=<span class="number">480</span>;<span class="comment">//设置宽度480</span></span><br><span class="line">lcddev.height=<span class="number">800</span>;<span class="comment">//设置高度800  </span></span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">lcddev.wramcmd=<span class="number">0X22</span>;</span><br><span class="line"> lcddev.setxcmd=<span class="number">0X20</span>;</span><br><span class="line">lcddev.setycmd=<span class="number">0X21</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="comment">//横屏</span></span><br><span class="line">&#123;  </span><br><span class="line">lcddev.dir=<span class="number">1</span>;<span class="comment">//横屏</span></span><br><span class="line">lcddev.width=<span class="number">320</span>;</span><br><span class="line">lcddev.height=<span class="number">240</span>;</span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X9341</span>||lcddev.id==<span class="number">0X5310</span>)</span><br><span class="line">&#123;</span><br><span class="line">lcddev.wramcmd=<span class="number">0X2C</span>;</span><br><span class="line"> lcddev.setxcmd=<span class="number">0X2A</span>;</span><br><span class="line">lcddev.setycmd=<span class="number">0X2B</span>;   </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X6804</span>) </span><br><span class="line">&#123;</span><br><span class="line"> lcddev.wramcmd=<span class="number">0X2C</span>;</span><br><span class="line"> lcddev.setxcmd=<span class="number">0X2B</span>;</span><br><span class="line">lcddev.setycmd=<span class="number">0X2A</span>; </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0x5510</span>)</span><br><span class="line">&#123;</span><br><span class="line">lcddev.wramcmd=<span class="number">0X2C00</span>;</span><br><span class="line"> lcddev.setxcmd=<span class="number">0X2A00</span>;</span><br><span class="line">lcddev.setycmd=<span class="number">0X2B00</span>; </span><br><span class="line">lcddev.width=<span class="number">800</span>;</span><br><span class="line">lcddev.height=<span class="number">480</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X1963</span>)</span><br><span class="line">&#123;</span><br><span class="line">lcddev.wramcmd=<span class="number">0X2C</span>;<span class="comment">//设置写入GRAM的指令 </span></span><br><span class="line">lcddev.setxcmd=<span class="number">0X2A</span>;<span class="comment">//设置写X坐标指令</span></span><br><span class="line">lcddev.setycmd=<span class="number">0X2B</span>;<span class="comment">//设置写Y坐标指令</span></span><br><span class="line">lcddev.width=<span class="number">800</span>;<span class="comment">//设置宽度800</span></span><br><span class="line">lcddev.height=<span class="number">480</span>;<span class="comment">//设置高度480  </span></span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">lcddev.wramcmd=<span class="number">0X22</span>;</span><br><span class="line"> lcddev.setxcmd=<span class="number">0X21</span>;</span><br><span class="line">lcddev.setycmd=<span class="number">0X20</span>;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X6804</span>||lcddev.id==<span class="number">0X5310</span>)</span><br><span class="line">&#123;  </span><br><span class="line">lcddev.width=<span class="number">480</span>;</span><br><span class="line">lcddev.height=<span class="number">320</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">LCD_Scan_Dir(DFT_SCAN_DIR);<span class="comment">//默认扫描方向</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//设置窗口,并自动设置画点坐标到窗口左上角(sx,sy).</span></span><br><span class="line"><span class="comment">//sx,sy:窗口起始坐标(左上角)</span></span><br><span class="line"><span class="comment">//width,height:窗口宽度和高度,必须大于0!!</span></span><br><span class="line"><span class="comment">//窗体大小:width*height. </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Set_Window</span><span class="params">(u16 sx,u16 sy,u16 width,u16 height)</span></span><br><span class="line">&#123;    </span><br><span class="line">u8 hsareg,heareg,vsareg,veareg;</span><br><span class="line">u16 hsaval,heaval,vsaval,veaval; </span><br><span class="line">u16 twidth,theight;</span><br><span class="line">twidth=sx+width<span class="number">-1</span>;</span><br><span class="line">theight=sy+height<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X9341</span>||lcddev.id==<span class="number">0X5310</span>||lcddev.id==<span class="number">0X6804</span>||(lcddev.dir==<span class="number">1</span>&amp;&amp;lcddev.id==<span class="number">0X1963</span>))</span><br><span class="line">&#123;</span><br><span class="line">LCD_WR_REG(lcddev.setxcmd); </span><br><span class="line">LCD_WR_DATA(sx&gt;&gt;<span class="number">8</span>); </span><br><span class="line">LCD_WR_DATA(sx&amp;<span class="number">0XFF</span>); </span><br><span class="line">LCD_WR_DATA(twidth&gt;&gt;<span class="number">8</span>); </span><br><span class="line">LCD_WR_DATA(twidth&amp;<span class="number">0XFF</span>);  </span><br><span class="line">LCD_WR_REG(lcddev.setycmd); </span><br><span class="line">LCD_WR_DATA(sy&gt;&gt;<span class="number">8</span>); </span><br><span class="line">LCD_WR_DATA(sy&amp;<span class="number">0XFF</span>); </span><br><span class="line">LCD_WR_DATA(theight&gt;&gt;<span class="number">8</span>); </span><br><span class="line">LCD_WR_DATA(theight&amp;<span class="number">0XFF</span>); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X1963</span>)<span class="comment">//1963竖屏特殊处理</span></span><br><span class="line">&#123;</span><br><span class="line">sx=lcddev.width-width-sx; </span><br><span class="line">height=sy+height<span class="number">-1</span>; </span><br><span class="line">LCD_WR_REG(lcddev.setxcmd); </span><br><span class="line">LCD_WR_DATA(sx&gt;&gt;<span class="number">8</span>); </span><br><span class="line">LCD_WR_DATA(sx&amp;<span class="number">0XFF</span>); </span><br><span class="line">LCD_WR_DATA((sx+width<span class="number">-1</span>)&gt;&gt;<span class="number">8</span>); </span><br><span class="line">LCD_WR_DATA((sx+width<span class="number">-1</span>)&amp;<span class="number">0XFF</span>);  </span><br><span class="line">LCD_WR_REG(lcddev.setycmd); </span><br><span class="line">LCD_WR_DATA(sy&gt;&gt;<span class="number">8</span>); </span><br><span class="line">LCD_WR_DATA(sy&amp;<span class="number">0XFF</span>); </span><br><span class="line">LCD_WR_DATA(height&gt;&gt;<span class="number">8</span>); </span><br><span class="line">LCD_WR_DATA(height&amp;<span class="number">0XFF</span>); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X5510</span>)</span><br><span class="line">&#123;</span><br><span class="line">LCD_WR_REG(lcddev.setxcmd);LCD_WR_DATA(sx&gt;&gt;<span class="number">8</span>);  </span><br><span class="line">LCD_WR_REG(lcddev.setxcmd+<span class="number">1</span>);LCD_WR_DATA(sx&amp;<span class="number">0XFF</span>);  </span><br><span class="line">LCD_WR_REG(lcddev.setxcmd+<span class="number">2</span>);LCD_WR_DATA(twidth&gt;&gt;<span class="number">8</span>);   </span><br><span class="line">LCD_WR_REG(lcddev.setxcmd+<span class="number">3</span>);LCD_WR_DATA(twidth&amp;<span class="number">0XFF</span>);   </span><br><span class="line">LCD_WR_REG(lcddev.setycmd);LCD_WR_DATA(sy&gt;&gt;<span class="number">8</span>);   </span><br><span class="line">LCD_WR_REG(lcddev.setycmd+<span class="number">1</span>);LCD_WR_DATA(sy&amp;<span class="number">0XFF</span>);  </span><br><span class="line">LCD_WR_REG(lcddev.setycmd+<span class="number">2</span>);LCD_WR_DATA(theight&gt;&gt;<span class="number">8</span>);   </span><br><span class="line">LCD_WR_REG(lcddev.setycmd+<span class="number">3</span>);LCD_WR_DATA(theight&amp;<span class="number">0XFF</span>);  </span><br><span class="line">&#125;<span class="keyword">else</span><span class="comment">//其他驱动IC</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lcddev.dir==<span class="number">1</span>)<span class="comment">//横屏</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//窗口值</span></span><br><span class="line">hsaval=sy;</span><br><span class="line">heaval=theight;</span><br><span class="line">vsaval=lcddev.width-twidth<span class="number">-1</span>;</span><br><span class="line">veaval=lcddev.width-sx<span class="number">-1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123; </span><br><span class="line">hsaval=sx;</span><br><span class="line">heaval=twidth;</span><br><span class="line">vsaval=sy;</span><br><span class="line">veaval=theight;</span><br><span class="line">&#125; </span><br><span class="line">hsareg=<span class="number">0X50</span>;heareg=<span class="number">0X51</span>;<span class="comment">//水平方向窗口寄存器</span></span><br><span class="line">vsareg=<span class="number">0X52</span>;veareg=<span class="number">0X53</span>;<span class="comment">//垂直方向窗口寄存器     </span></span><br><span class="line"><span class="comment">//设置寄存器值</span></span><br><span class="line">LCD_WriteReg(hsareg,hsaval);</span><br><span class="line">LCD_WriteReg(heareg,heaval);</span><br><span class="line">LCD_WriteReg(vsareg,vsaval);</span><br><span class="line">LCD_WriteReg(veareg,veaval);</span><br><span class="line">LCD_SetCursor(sx,sy);<span class="comment">//设置光标位置</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化lcd</span></span><br><span class="line"><span class="comment">//该初始化函数可以初始化各种ILI93XX液晶,但是其他函数是基于ILI9320的!!!</span></span><br><span class="line"><span class="comment">//在其他型号的驱动芯片上没有测试! </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line"> GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;</span><br><span class="line">  FSMC_NORSRAMTimingInitTypeDef  readWriteTiming; </span><br><span class="line">FSMC_NORSRAMTimingInitTypeDef  writeTiming;</span><br><span class="line"></span><br><span class="line">  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_FSMC,ENABLE);<span class="comment">//使能FSMC时钟</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB|RCC_APB2Periph_GPIOD|RCC_APB2Periph_GPIOE|RCC_APB2Periph_GPIOG,ENABLE);<span class="comment">//使能PORTB,D,E,G以及AFIO复用功能时钟</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0; <span class="comment">//PB0 推挽输出 背光</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;  <span class="comment">//推挽输出</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"> GPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"> <span class="comment">//PORTD复用推挽输出  </span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0|GPIO_Pin_1|GPIO_Pin_4|GPIO_Pin_5|GPIO_Pin_8|GPIO_Pin_9|GPIO_Pin_10|GPIO_Pin_14|GPIO_Pin_15; <span class="comment">////PORTD复用推挽输出  </span></span><br><span class="line"> GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  <span class="comment">//复用推挽输出   </span></span><br><span class="line"> GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"> GPIO_Init(GPIOD, &amp;GPIO_InitStructure); </span><br><span class="line">   </span><br><span class="line"><span class="comment">//PORTE复用推挽输出  </span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7|GPIO_Pin_8|GPIO_Pin_9|GPIO_Pin_10|GPIO_Pin_11|GPIO_Pin_12|GPIO_Pin_13|GPIO_Pin_14|GPIO_Pin_15; <span class="comment">////PORTD复用推挽输出  </span></span><br><span class="line"> GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  <span class="comment">//复用推挽输出   </span></span><br><span class="line"> GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"> GPIO_Init(GPIOE, &amp;GPIO_InitStructure);          </span><br><span class="line"></span><br><span class="line">   <span class="comment">////PORTG12复用推挽输出 A0</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0|GPIO_Pin_12; <span class="comment">////PORTD复用推挽输出  </span></span><br><span class="line"> GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  <span class="comment">//复用推挽输出   </span></span><br><span class="line"> GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"> GPIO_Init(GPIOG, &amp;GPIO_InitStructure); </span><br><span class="line"></span><br><span class="line">readWriteTiming.FSMC_AddressSetupTime = <span class="number">0x01</span>; <span class="comment">//地址建立时间（ADDSET）为2个HCLK 1/36M=27ns</span></span><br><span class="line">  readWriteTiming.FSMC_AddressHoldTime = <span class="number">0x00</span>; <span class="comment">//地址保持时间（ADDHLD）模式A未用到</span></span><br><span class="line">  readWriteTiming.FSMC_DataSetupTime = <span class="number">0x0f</span>; <span class="comment">// 数据保存时间为16个HCLK,因为液晶驱动IC的读数据的时候，速度不能太快，尤其对1289这个IC。</span></span><br><span class="line">  readWriteTiming.FSMC_BusTurnAroundDuration = <span class="number">0x00</span>;</span><br><span class="line">  readWriteTiming.FSMC_CLKDivision = <span class="number">0x00</span>;</span><br><span class="line">  readWriteTiming.FSMC_DataLatency = <span class="number">0x00</span>;</span><br><span class="line">  readWriteTiming.FSMC_AccessMode = FSMC_AccessMode_A; <span class="comment">//模式A </span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">writeTiming.FSMC_AddressSetupTime = <span class="number">0x00</span>; <span class="comment">//地址建立时间（ADDSET）为1个HCLK  </span></span><br><span class="line">  writeTiming.FSMC_AddressHoldTime = <span class="number">0x00</span>; <span class="comment">//地址保持时间（A</span></span><br><span class="line">  writeTiming.FSMC_DataSetupTime = <span class="number">0x03</span>; <span class="comment">////数据保存时间为4个HCLK</span></span><br><span class="line">  writeTiming.FSMC_BusTurnAroundDuration = <span class="number">0x00</span>;</span><br><span class="line">  writeTiming.FSMC_CLKDivision = <span class="number">0x00</span>;</span><br><span class="line">  writeTiming.FSMC_DataLatency = <span class="number">0x00</span>;</span><br><span class="line">  writeTiming.FSMC_AccessMode = FSMC_AccessMode_A; <span class="comment">//模式A </span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_Bank = FSMC_Bank1_NORSRAM4;<span class="comment">//  这里我们使用NE4 ，也就对应BTCR[6],[7]。</span></span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_DataAddressMux = FSMC_DataAddressMux_Disable; <span class="comment">// 不复用数据地址</span></span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_MemoryType =FSMC_MemoryType_SRAM;<span class="comment">// FSMC_MemoryType_SRAM;  //SRAM   </span></span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_16b;<span class="comment">//存储器数据宽度为16bit   </span></span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_BurstAccessMode =FSMC_BurstAccessMode_Disable;<span class="comment">// FSMC_BurstAccessMode_Disable; </span></span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;</span><br><span class="line">FSMC_NORSRAMInitStructure.FSMC_AsynchronousWait=FSMC_AsynchronousWait_Disable; </span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_WrapMode = FSMC_WrapMode_Disable;   </span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;  </span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_WriteOperation = FSMC_WriteOperation_Enable;<span class="comment">//  存储器写使能</span></span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_WaitSignal = FSMC_WaitSignal_Disable;   </span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_ExtendedMode = FSMC_ExtendedMode_Enable; <span class="comment">// 读写使用不同的时序</span></span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_WriteBurst = FSMC_WriteBurst_Disable; </span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_ReadWriteTimingStruct = &amp;readWriteTiming; <span class="comment">//读写时序</span></span><br><span class="line">  FSMC_NORSRAMInitStructure.FSMC_WriteTimingStruct = &amp;writeTiming;  <span class="comment">//写时序</span></span><br><span class="line"></span><br><span class="line">  FSMC_NORSRAMInit(&amp;FSMC_NORSRAMInitStructure);  <span class="comment">//初始化FSMC配置</span></span><br><span class="line"></span><br><span class="line"> FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM4, ENABLE);  <span class="comment">// 使能BANK1 </span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">delay_ms(<span class="number">50</span>); <span class="comment">// delay 50 ms </span></span><br><span class="line">  lcddev.id=LCD_ReadReg(<span class="number">0x0000</span>);<span class="comment">//读ID（9320/9325/9328/4531/4535等IC）   </span></span><br><span class="line">  <span class="keyword">if</span>(lcddev.id&lt;<span class="number">0XFF</span>||lcddev.id==<span class="number">0XFFFF</span>||lcddev.id==<span class="number">0X9300</span>)<span class="comment">//读到ID不正确,新增lcddev.id==0X9300判断，因为9341在未被复位的情况下会被读成9300</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="comment">//尝试9341 ID的读取</span></span><br><span class="line">LCD_WR_REG(<span class="number">0XD3</span>);   </span><br><span class="line">lcddev.id=LCD_RD_DATA();<span class="comment">//dummy read </span></span><br><span class="line"> lcddev.id=LCD_RD_DATA();<span class="comment">//读到0X00</span></span><br><span class="line">  lcddev.id=LCD_RD_DATA();   <span class="comment">//读取93   </span></span><br><span class="line"> lcddev.id&lt;&lt;=<span class="number">8</span>;</span><br><span class="line">lcddev.id|=LCD_RD_DATA();  <span class="comment">//读取41       </span></span><br><span class="line"> <span class="keyword">if</span>(lcddev.id!=<span class="number">0X9341</span>)<span class="comment">//非9341,尝试是不是6804</span></span><br><span class="line">&#123;</span><br><span class="line"> LCD_WR_REG(<span class="number">0XBF</span>);   </span><br><span class="line">lcddev.id=LCD_RD_DATA(); <span class="comment">//dummy read  </span></span><br><span class="line"> lcddev.id=LCD_RD_DATA();   <span class="comment">//读回0X01   </span></span><br><span class="line"> lcddev.id=LCD_RD_DATA(); <span class="comment">//读回0XD0   </span></span><br><span class="line">  lcddev.id=LCD_RD_DATA();<span class="comment">//这里读回0X68 </span></span><br><span class="line">lcddev.id&lt;&lt;=<span class="number">8</span>;</span><br><span class="line">  lcddev.id|=LCD_RD_DATA();<span class="comment">//这里读回0X04  </span></span><br><span class="line"><span class="keyword">if</span>(lcddev.id!=<span class="number">0X6804</span>)<span class="comment">//也不是6804,尝试看看是不是NT35310</span></span><br><span class="line">&#123; </span><br><span class="line">LCD_WR_REG(<span class="number">0XD4</span>);   </span><br><span class="line">lcddev.id=LCD_RD_DATA();<span class="comment">//dummy read  </span></span><br><span class="line">lcddev.id=LCD_RD_DATA();<span class="comment">//读回0X01 </span></span><br><span class="line">lcddev.id=LCD_RD_DATA();<span class="comment">//读回0X53</span></span><br><span class="line">lcddev.id&lt;&lt;=<span class="number">8</span>; </span><br><span class="line">lcddev.id|=LCD_RD_DATA();<span class="comment">//这里读回0X10 </span></span><br><span class="line"><span class="keyword">if</span>(lcddev.id!=<span class="number">0X5310</span>)<span class="comment">//也不是NT35310,尝试看看是不是NT35510</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_WR_REG(<span class="number">0XDA00</span>);</span><br><span class="line">lcddev.id=LCD_RD_DATA();<span class="comment">//读回0X00 </span></span><br><span class="line">LCD_WR_REG(<span class="number">0XDB00</span>);</span><br><span class="line">lcddev.id=LCD_RD_DATA();<span class="comment">//读回0X80</span></span><br><span class="line">lcddev.id&lt;&lt;=<span class="number">8</span>;</span><br><span class="line">LCD_WR_REG(<span class="number">0XDC00</span>);</span><br><span class="line">lcddev.id|=LCD_RD_DATA();<span class="comment">//读回0X00</span></span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0x8000</span>)lcddev.id=<span class="number">0x5510</span>;<span class="comment">//NT35510读回的ID是8000H,为方便区分,我们强制设置为5510</span></span><br><span class="line"><span class="keyword">if</span>(lcddev.id!=<span class="number">0X5510</span>)<span class="comment">//也不是NT5510,尝试看看是不是SSD1963</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_WR_REG(<span class="number">0XA1</span>);</span><br><span class="line">lcddev.id=LCD_RD_DATA();</span><br><span class="line">lcddev.id=LCD_RD_DATA();<span class="comment">//读回0X57</span></span><br><span class="line">lcddev.id&lt;&lt;=<span class="number">8</span>; </span><br><span class="line">lcddev.id|=LCD_RD_DATA();<span class="comment">//读回0X61</span></span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X5761</span>)lcddev.id=<span class="number">0X1963</span>;<span class="comment">//SSD1963读回的ID是5761H,为方便区分,我们强制设置为1963</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;  </span><br><span class="line">&#125; </span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot; LCD ID:%x\r\n&quot;</span>,lcddev.id); <span class="comment">//打印LCD ID   </span></span><br><span class="line"><span class="keyword">if</span>(lcddev.id==<span class="number">0X9341</span>)<span class="comment">//9341初始化</span></span><br><span class="line">&#123; </span><br><span class="line">LCD_WR_REG(<span class="number">0xCF</span>);  </span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0xC1</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0X30</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0xED</span>);  </span><br><span class="line">LCD_WR_DATA(<span class="number">0x64</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x03</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0X12</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0X81</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0xE8</span>);  </span><br><span class="line">LCD_WR_DATA(<span class="number">0x85</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x10</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x7A</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0xCB</span>);  </span><br><span class="line">LCD_WR_DATA(<span class="number">0x39</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x2C</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x34</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x02</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0xF7</span>);  </span><br><span class="line">LCD_WR_DATA(<span class="number">0x20</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0xEA</span>);  </span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0xC0</span>);    <span class="comment">//Power control </span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x1B</span>);   <span class="comment">//VRH[5:0] </span></span><br><span class="line">LCD_WR_REG(<span class="number">0xC1</span>);    <span class="comment">//Power control </span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x01</span>);   <span class="comment">//SAP[2:0];BT[3:0] </span></span><br><span class="line">LCD_WR_REG(<span class="number">0xC5</span>);    <span class="comment">//VCM control </span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x30</span>);  <span class="comment">//3F</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x30</span>);  <span class="comment">//3C</span></span><br><span class="line">LCD_WR_REG(<span class="number">0xC7</span>);    <span class="comment">//VCM control2 </span></span><br><span class="line">LCD_WR_DATA(<span class="number">0XB7</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0x36</span>);    <span class="comment">// Memory Access Control </span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x48</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0x3A</span>);   </span><br><span class="line">LCD_WR_DATA(<span class="number">0x55</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0xB1</span>);   </span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);   </span><br><span class="line">LCD_WR_DATA(<span class="number">0x1A</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0xB6</span>);    <span class="comment">// Display Function Control </span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x0A</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0xA2</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0xF2</span>);    <span class="comment">// 3Gamma Function Disable </span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0x26</span>);    <span class="comment">//Gamma curve selected </span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x01</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0xE0</span>);    <span class="comment">//Set Gamma </span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x0F</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x2A</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x28</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x08</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x0E</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x08</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x54</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0XA9</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x43</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x0A</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x0F</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);  </span><br><span class="line">LCD_WR_REG(<span class="number">0XE1</span>);    <span class="comment">//Set Gamma </span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x15</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x17</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x07</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x11</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x06</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x2B</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x56</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x3C</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x05</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x10</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x0F</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x3F</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x3F</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x0F</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0x2B</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x01</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x3f</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0x2A</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xef</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0x11</span>); <span class="comment">//Exit Sleep</span></span><br><span class="line">delay_ms(<span class="number">120</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0x29</span>); <span class="comment">//display on</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0x6804</span>) <span class="comment">//6804初始化</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_WR_REG(<span class="number">0X11</span>);</span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0XD0</span>);<span class="comment">//VCI1  VCL  VGH  VGL DDVDH VREG1OUT power amplitude setting</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0X07</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0X42</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0X1D</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0XD1</span>);<span class="comment">//VCOMH VCOM_AC amplitude setting</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0X00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X1a</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X09</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0XD2</span>);<span class="comment">//Operational Amplifier Circuit Constant Current Adjust , charge pump frequency setting</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0X01</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X22</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0XC0</span>);<span class="comment">//REV SM GS </span></span><br><span class="line">LCD_WR_DATA(<span class="number">0X10</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X3B</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X02</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X11</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0XC5</span>);<span class="comment">// Frame rate setting = 72HZ  when setting 0x03</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0X03</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0XC8</span>);<span class="comment">//Gamma setting</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0X00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X25</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X21</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X05</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X0a</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X65</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X25</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X77</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X50</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X0f</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X00</span>);  </span><br><span class="line">  </span><br><span class="line">   LCD_WR_REG(<span class="number">0XF8</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X01</span>);  </span><br><span class="line"></span><br><span class="line"> LCD_WR_REG(<span class="number">0XFE</span>);</span><br><span class="line"> LCD_WR_DATA(<span class="number">0X00</span>);</span><br><span class="line"> LCD_WR_DATA(<span class="number">0X02</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0X20</span>);<span class="comment">//Exit invert mode</span></span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0X36</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X08</span>);<span class="comment">//原来是a</span></span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0X3A</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X55</span>);<span class="comment">//16位模式  </span></span><br><span class="line">LCD_WR_REG(<span class="number">0X2B</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X01</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X3F</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0X2A</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X01</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0XDF</span>);</span><br><span class="line">delay_ms(<span class="number">120</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0X29</span>);  </span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0x5310</span>)</span><br><span class="line">&#123; </span><br><span class="line">LCD_WR_REG(<span class="number">0xED</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x01</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xFE</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xEE</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xDE</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x21</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xF1</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x01</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0xDF</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x10</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//VCOMvoltage//</span></span><br><span class="line">LCD_WR_REG(<span class="number">0xC4</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x8F</span>);  <span class="comment">//5f</span></span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xC6</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xE2</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xE2</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xE2</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0xBF</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xAA</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xB0</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x0D</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x0D</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x11</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x19</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x21</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x2D</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x3D</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x5D</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x5D</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xB1</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x80</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x8B</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x96</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xB2</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x02</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x03</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xB3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xB4</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x8B</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x96</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xA1</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xB5</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x02</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x03</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x04</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xB6</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xB7</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x3F</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x5E</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x64</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x8C</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xAC</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xDC</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x70</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x90</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xEB</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xDC</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xB8</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xBA</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x24</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xC1</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x20</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x54</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xFF</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xC2</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x0A</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x04</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xC3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x3C</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x3A</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x39</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x37</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x3C</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x36</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x32</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x2F</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x2C</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x29</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x26</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x24</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x24</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x23</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x3C</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x36</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x32</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x2F</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x2C</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x29</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x26</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x24</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x24</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x23</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xC4</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x62</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x05</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x84</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xF0</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x18</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xA4</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x18</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x50</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x0C</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x17</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x95</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xF3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xE6</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xC5</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x32</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x44</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x65</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x76</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x88</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xC6</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x20</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x17</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x01</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xC7</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xC8</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xC9</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xE0</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x16</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x1C</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x21</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x36</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x46</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x52</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x64</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x7A</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x8B</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x99</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xA8</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xB9</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xC4</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xCA</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xD2</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xD9</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xE0</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xF3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xE1</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x16</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x1C</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x22</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x36</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x45</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x52</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x64</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x7A</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x8B</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x99</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xA8</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xB9</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xC4</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xCA</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xD2</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xD8</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xE0</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xF3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xE2</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x05</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x0B</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x1B</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x34</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x44</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x4F</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x61</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x79</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x88</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x97</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xA6</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xB7</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xC2</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xC7</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xD1</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xD6</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xDD</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xF3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0xE3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x05</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xA</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x1C</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x33</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x44</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x50</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x62</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x78</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x88</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x97</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xA6</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xB7</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xC2</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xC7</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xD1</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xD5</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xDD</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xF3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xE4</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x01</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x01</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x02</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x2A</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x3C</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x4B</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x5D</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x74</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x84</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x93</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xA2</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xB3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xBE</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xC4</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xCD</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xD3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xDD</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xF3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0xE5</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x02</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x29</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x3C</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x4B</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x5D</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x74</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x84</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x93</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xA2</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xB3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xBE</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xC4</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xCD</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xD3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xDC</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xF3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xE6</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x11</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x34</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x56</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x76</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x77</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x66</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x88</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x99</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xBB</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x99</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x66</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x55</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x55</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x45</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x43</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x44</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xE7</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x32</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x55</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x76</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x66</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x67</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x67</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x87</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x99</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xBB</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x99</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x77</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x44</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x56</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x23</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x33</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x45</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xE8</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x99</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x87</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x88</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x77</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x66</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x88</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xAA</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xBB</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x99</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x66</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x55</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x55</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x44</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x44</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x55</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xE9</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xAA</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xAA</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xCF</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xF0</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x50</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xF3</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xF9</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x06</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x10</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x29</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0x3A</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x55</span>);<span class="comment">//66</span></span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0x11</span>);</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0x29</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0x35</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0x51</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xFF</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0x53</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x2C</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0x55</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x82</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0x2c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0x5510</span>)</span><br><span class="line">&#123;</span><br><span class="line">LCD_WriteReg(<span class="number">0xF000</span>,<span class="number">0x55</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xF001</span>,<span class="number">0xAA</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xF002</span>,<span class="number">0x52</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xF003</span>,<span class="number">0x08</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xF004</span>,<span class="number">0x01</span>);</span><br><span class="line"><span class="comment">//AVDD Set AVDD 5.2V</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xB000</span>,<span class="number">0x0D</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB001</span>,<span class="number">0x0D</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB002</span>,<span class="number">0x0D</span>);</span><br><span class="line"><span class="comment">//AVDD ratio</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xB600</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB601</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB602</span>,<span class="number">0x34</span>);</span><br><span class="line"><span class="comment">//AVEE -5.2V</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xB100</span>,<span class="number">0x0D</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB101</span>,<span class="number">0x0D</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB102</span>,<span class="number">0x0D</span>);</span><br><span class="line"><span class="comment">//AVEE ratio</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xB700</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB701</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB702</span>,<span class="number">0x34</span>);</span><br><span class="line"><span class="comment">//VCL -2.5V</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xB200</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB201</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB202</span>,<span class="number">0x00</span>);</span><br><span class="line"><span class="comment">//VCL ratio</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xB800</span>,<span class="number">0x24</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB801</span>,<span class="number">0x24</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB802</span>,<span class="number">0x24</span>);</span><br><span class="line"><span class="comment">//VGH 15V (Free pump)</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xBF00</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB300</span>,<span class="number">0x0F</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB301</span>,<span class="number">0x0F</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB302</span>,<span class="number">0x0F</span>);</span><br><span class="line"><span class="comment">//VGH ratio</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xB900</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB901</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB902</span>,<span class="number">0x34</span>);</span><br><span class="line"><span class="comment">//VGL_REG -10V</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xB500</span>,<span class="number">0x08</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB501</span>,<span class="number">0x08</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB502</span>,<span class="number">0x08</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xC200</span>,<span class="number">0x03</span>);</span><br><span class="line"><span class="comment">//VGLX ratio</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xBA00</span>,<span class="number">0x24</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xBA01</span>,<span class="number">0x24</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xBA02</span>,<span class="number">0x24</span>);</span><br><span class="line"><span class="comment">//VGMP/VGSP 4.5V/0V</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xBC00</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xBC01</span>,<span class="number">0x78</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xBC02</span>,<span class="number">0x00</span>);</span><br><span class="line"><span class="comment">//VGMN/VGSN -4.5V/0V</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xBD00</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xBD01</span>,<span class="number">0x78</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xBD02</span>,<span class="number">0x00</span>);</span><br><span class="line"><span class="comment">//VCOM</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xBE00</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xBE01</span>,<span class="number">0x64</span>);</span><br><span class="line"><span class="comment">//Gamma Setting</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xD100</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD101</span>,<span class="number">0x33</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD102</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD103</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD104</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD105</span>,<span class="number">0x3A</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD106</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD107</span>,<span class="number">0x4A</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD108</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD109</span>,<span class="number">0x5C</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD10A</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD10B</span>,<span class="number">0x81</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD10C</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD10D</span>,<span class="number">0xA6</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD10E</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD10F</span>,<span class="number">0xE5</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD110</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD111</span>,<span class="number">0x13</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD112</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD113</span>,<span class="number">0x54</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD114</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD115</span>,<span class="number">0x82</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD116</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD117</span>,<span class="number">0xCA</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD118</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD119</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD11A</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD11B</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD11C</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD11D</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD11E</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD11F</span>,<span class="number">0x67</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD120</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD121</span>,<span class="number">0x84</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD122</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD123</span>,<span class="number">0xA4</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD124</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD125</span>,<span class="number">0xB7</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD126</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD127</span>,<span class="number">0xCF</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD128</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD129</span>,<span class="number">0xDE</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD12A</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD12B</span>,<span class="number">0xF2</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD12C</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD12D</span>,<span class="number">0xFE</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD12E</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD12F</span>,<span class="number">0x10</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD130</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD131</span>,<span class="number">0x33</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD132</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD133</span>,<span class="number">0x6D</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD200</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD201</span>,<span class="number">0x33</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD202</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD203</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD204</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD205</span>,<span class="number">0x3A</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD206</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD207</span>,<span class="number">0x4A</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD208</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD209</span>,<span class="number">0x5C</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD20A</span>,<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0xD20B</span>,<span class="number">0x81</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD20C</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD20D</span>,<span class="number">0xA6</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD20E</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD20F</span>,<span class="number">0xE5</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD210</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD211</span>,<span class="number">0x13</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD212</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD213</span>,<span class="number">0x54</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD214</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD215</span>,<span class="number">0x82</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD216</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD217</span>,<span class="number">0xCA</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD218</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD219</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD21A</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD21B</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD21C</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD21D</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD21E</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD21F</span>,<span class="number">0x67</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD220</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD221</span>,<span class="number">0x84</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD222</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD223</span>,<span class="number">0xA4</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD224</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD225</span>,<span class="number">0xB7</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD226</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD227</span>,<span class="number">0xCF</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD228</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD229</span>,<span class="number">0xDE</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD22A</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD22B</span>,<span class="number">0xF2</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD22C</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD22D</span>,<span class="number">0xFE</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD22E</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD22F</span>,<span class="number">0x10</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD230</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD231</span>,<span class="number">0x33</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD232</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD233</span>,<span class="number">0x6D</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD300</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD301</span>,<span class="number">0x33</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD302</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD303</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD304</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD305</span>,<span class="number">0x3A</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD306</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD307</span>,<span class="number">0x4A</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD308</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD309</span>,<span class="number">0x5C</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD30A</span>,<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0xD30B</span>,<span class="number">0x81</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD30C</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD30D</span>,<span class="number">0xA6</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD30E</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD30F</span>,<span class="number">0xE5</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD310</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD311</span>,<span class="number">0x13</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD312</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD313</span>,<span class="number">0x54</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD314</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD315</span>,<span class="number">0x82</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD316</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD317</span>,<span class="number">0xCA</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD318</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD319</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD31A</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD31B</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD31C</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD31D</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD31E</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD31F</span>,<span class="number">0x67</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD320</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD321</span>,<span class="number">0x84</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD322</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD323</span>,<span class="number">0xA4</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD324</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD325</span>,<span class="number">0xB7</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD326</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD327</span>,<span class="number">0xCF</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD328</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD329</span>,<span class="number">0xDE</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD32A</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD32B</span>,<span class="number">0xF2</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD32C</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD32D</span>,<span class="number">0xFE</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD32E</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD32F</span>,<span class="number">0x10</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD330</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD331</span>,<span class="number">0x33</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD332</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD333</span>,<span class="number">0x6D</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD400</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD401</span>,<span class="number">0x33</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD402</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD403</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD404</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD405</span>,<span class="number">0x3A</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD406</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD407</span>,<span class="number">0x4A</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD408</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD409</span>,<span class="number">0x5C</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD40A</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD40B</span>,<span class="number">0x81</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0xD40C</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD40D</span>,<span class="number">0xA6</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD40E</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD40F</span>,<span class="number">0xE5</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD410</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD411</span>,<span class="number">0x13</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD412</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD413</span>,<span class="number">0x54</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD414</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD415</span>,<span class="number">0x82</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD416</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD417</span>,<span class="number">0xCA</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD418</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD419</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD41A</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD41B</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD41C</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD41D</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD41E</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD41F</span>,<span class="number">0x67</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD420</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD421</span>,<span class="number">0x84</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD422</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD423</span>,<span class="number">0xA4</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD424</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD425</span>,<span class="number">0xB7</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD426</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD427</span>,<span class="number">0xCF</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD428</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD429</span>,<span class="number">0xDE</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD42A</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD42B</span>,<span class="number">0xF2</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD42C</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD42D</span>,<span class="number">0xFE</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD42E</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD42F</span>,<span class="number">0x10</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD430</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD431</span>,<span class="number">0x33</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD432</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD433</span>,<span class="number">0x6D</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD500</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD501</span>,<span class="number">0x33</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD502</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD503</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD504</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD505</span>,<span class="number">0x3A</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD506</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD507</span>,<span class="number">0x4A</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD508</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD509</span>,<span class="number">0x5C</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD50A</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD50B</span>,<span class="number">0x81</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0xD50C</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD50D</span>,<span class="number">0xA6</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD50E</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD50F</span>,<span class="number">0xE5</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD510</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD511</span>,<span class="number">0x13</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD512</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD513</span>,<span class="number">0x54</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD514</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD515</span>,<span class="number">0x82</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD516</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD517</span>,<span class="number">0xCA</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD518</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD519</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD51A</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD51B</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD51C</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD51D</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD51E</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD51F</span>,<span class="number">0x67</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD520</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD521</span>,<span class="number">0x84</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD522</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD523</span>,<span class="number">0xA4</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD524</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD525</span>,<span class="number">0xB7</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD526</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD527</span>,<span class="number">0xCF</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD528</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD529</span>,<span class="number">0xDE</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD52A</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD52B</span>,<span class="number">0xF2</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD52C</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD52D</span>,<span class="number">0xFE</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD52E</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD52F</span>,<span class="number">0x10</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD530</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD531</span>,<span class="number">0x33</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD532</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD533</span>,<span class="number">0x6D</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD600</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD601</span>,<span class="number">0x33</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD602</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD603</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD604</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD605</span>,<span class="number">0x3A</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD606</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD607</span>,<span class="number">0x4A</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD608</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD609</span>,<span class="number">0x5C</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD60A</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD60B</span>,<span class="number">0x81</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0xD60C</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD60D</span>,<span class="number">0xA6</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD60E</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD60F</span>,<span class="number">0xE5</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD610</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD611</span>,<span class="number">0x13</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD612</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD613</span>,<span class="number">0x54</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD614</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD615</span>,<span class="number">0x82</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD616</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD617</span>,<span class="number">0xCA</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD618</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD619</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD61A</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD61B</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD61C</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD61D</span>,<span class="number">0x34</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD61E</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD61F</span>,<span class="number">0x67</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD620</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD621</span>,<span class="number">0x84</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD622</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD623</span>,<span class="number">0xA4</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD624</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD625</span>,<span class="number">0xB7</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD626</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD627</span>,<span class="number">0xCF</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD628</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD629</span>,<span class="number">0xDE</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD62A</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD62B</span>,<span class="number">0xF2</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD62C</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD62D</span>,<span class="number">0xFE</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD62E</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD62F</span>,<span class="number">0x10</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD630</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD631</span>,<span class="number">0x33</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD632</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xD633</span>,<span class="number">0x6D</span>);</span><br><span class="line"><span class="comment">//LV2 Page 0 enable</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xF000</span>,<span class="number">0x55</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xF001</span>,<span class="number">0xAA</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xF002</span>,<span class="number">0x52</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xF003</span>,<span class="number">0x08</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xF004</span>,<span class="number">0x00</span>);</span><br><span class="line"><span class="comment">//Display control</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xB100</span>, <span class="number">0xCC</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB101</span>, <span class="number">0x00</span>);</span><br><span class="line"><span class="comment">//Source hold time</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xB600</span>,<span class="number">0x05</span>);</span><br><span class="line"><span class="comment">//Gate EQ control</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xB700</span>,<span class="number">0x70</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB701</span>,<span class="number">0x70</span>);</span><br><span class="line"><span class="comment">//Source EQ control (Mode 2)</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xB800</span>,<span class="number">0x01</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB801</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB802</span>,<span class="number">0x03</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xB803</span>,<span class="number">0x03</span>);</span><br><span class="line"><span class="comment">//Inversion mode (2-dot)</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xBC00</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xBC01</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xBC02</span>,<span class="number">0x00</span>);</span><br><span class="line"><span class="comment">//Timing control 4H w/ 4-delay</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xC900</span>,<span class="number">0xD0</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xC901</span>,<span class="number">0x02</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xC902</span>,<span class="number">0x50</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xC903</span>,<span class="number">0x50</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0xC904</span>,<span class="number">0x50</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x3500</span>,<span class="number">0x00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x3A00</span>,<span class="number">0x55</span>);  <span class="comment">//16-bit/pixel</span></span><br><span class="line">LCD_WR_REG(<span class="number">0x1100</span>);</span><br><span class="line">delay_us(<span class="number">120</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0x2900</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0x9325</span>)<span class="comment">//9325</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_WriteReg(<span class="number">0x00E5</span>,<span class="number">0x78F0</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0001</span>,<span class="number">0x0100</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0002</span>,<span class="number">0x0700</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0003</span>,<span class="number">0x1030</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0004</span>,<span class="number">0x0000</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0008</span>,<span class="number">0x0202</span>);  </span><br><span class="line">LCD_WriteReg(<span class="number">0x0009</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x000A</span>,<span class="number">0x0000</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x000C</span>,<span class="number">0x0000</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x000D</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x000F</span>,<span class="number">0x0000</span>);</span><br><span class="line"><span class="comment">//power on sequence VGHVGL</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0010</span>,<span class="number">0x0000</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0x0011</span>,<span class="number">0x0007</span>);  </span><br><span class="line">LCD_WriteReg(<span class="number">0x0012</span>,<span class="number">0x0000</span>);  </span><br><span class="line">LCD_WriteReg(<span class="number">0x0013</span>,<span class="number">0x0000</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0007</span>,<span class="number">0x0000</span>); </span><br><span class="line"><span class="comment">//vgh </span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0010</span>,<span class="number">0x1690</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0x0011</span>,<span class="number">0x0227</span>);</span><br><span class="line"><span class="comment">//delayms(100);</span></span><br><span class="line"><span class="comment">//vregiout </span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0012</span>,<span class="number">0x009D</span>); <span class="comment">//0x001b</span></span><br><span class="line"><span class="comment">//delayms(100); </span></span><br><span class="line"><span class="comment">//vom amplitude</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0013</span>,<span class="number">0x1900</span>);</span><br><span class="line"><span class="comment">//delayms(100); </span></span><br><span class="line"><span class="comment">//vom H</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0029</span>,<span class="number">0x0025</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x002B</span>,<span class="number">0x000D</span>); </span><br><span class="line"><span class="comment">//gamma</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0030</span>,<span class="number">0x0007</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0031</span>,<span class="number">0x0303</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0032</span>,<span class="number">0x0003</span>);<span class="comment">// 0006</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0035</span>,<span class="number">0x0206</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0036</span>,<span class="number">0x0008</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0037</span>,<span class="number">0x0406</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0038</span>,<span class="number">0x0304</span>);<span class="comment">//0200</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0039</span>,<span class="number">0x0007</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x003C</span>,<span class="number">0x0602</span>);<span class="comment">// 0504</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x003D</span>,<span class="number">0x0008</span>); </span><br><span class="line"><span class="comment">//ram</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0050</span>,<span class="number">0x0000</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0051</span>,<span class="number">0x00EF</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0052</span>,<span class="number">0x0000</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0053</span>,<span class="number">0x013F</span>);  </span><br><span class="line">LCD_WriteReg(<span class="number">0x0060</span>,<span class="number">0xA700</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0061</span>,<span class="number">0x0001</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x006A</span>,<span class="number">0x0000</span>); </span><br><span class="line"><span class="comment">//</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0080</span>,<span class="number">0x0000</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0081</span>,<span class="number">0x0000</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0082</span>,<span class="number">0x0000</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0083</span>,<span class="number">0x0000</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0084</span>,<span class="number">0x0000</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0085</span>,<span class="number">0x0000</span>); </span><br><span class="line"><span class="comment">//</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0090</span>,<span class="number">0x0010</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x0092</span>,<span class="number">0x0600</span>); </span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x0007</span>,<span class="number">0x0133</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x00</span>,<span class="number">0x0022</span>);<span class="comment">//</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0x9328</span>)<span class="comment">//ILI9328   OK  </span></span><br><span class="line">&#123;</span><br><span class="line">  LCD_WriteReg(<span class="number">0x00EC</span>,<span class="number">0x108F</span>);<span class="comment">// internal timeing      </span></span><br><span class="line"> LCD_WriteReg(<span class="number">0x00EF</span>,<span class="number">0x1234</span>);<span class="comment">// ADD        </span></span><br><span class="line"><span class="comment">//LCD_WriteReg(0x00e7,0x0010);      </span></span><br><span class="line">        <span class="comment">//LCD_WriteReg(0x0000,0x0001);//开启内部时钟</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0001</span>,<span class="number">0x0100</span>);     </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0002</span>,<span class="number">0x0700</span>);<span class="comment">//电源开启                    </span></span><br><span class="line"><span class="comment">//LCD_WriteReg(0x0003,(1&lt;&lt;3)|(1&lt;&lt;4) ); //65K  RGB</span></span><br><span class="line"><span class="comment">//DRIVE TABLE(寄存器 03H)</span></span><br><span class="line"><span class="comment">//BIT3=AM BIT4:5=ID0:1</span></span><br><span class="line"><span class="comment">//AM ID0 ID1   FUNCATION</span></span><br><span class="line"><span class="comment">// 0  0   0   R-&gt;L D-&gt;U</span></span><br><span class="line"><span class="comment">// 1  0   0   D-&gt;UR-&gt;L</span></span><br><span class="line"><span class="comment">// 0  1   0   L-&gt;R D-&gt;U</span></span><br><span class="line"><span class="comment">// 1  1   0    D-&gt;UL-&gt;R</span></span><br><span class="line"><span class="comment">// 0  0   1   R-&gt;L U-&gt;D</span></span><br><span class="line"><span class="comment">// 1  0   1    U-&gt;DR-&gt;L</span></span><br><span class="line"><span class="comment">// 0  1   1    L-&gt;R U-&gt;D 正常就用这个.</span></span><br><span class="line"><span class="comment">// 1  1   1   U-&gt;DL-&gt;R</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0003</span>,(<span class="number">1</span>&lt;&lt;<span class="number">12</span>)|(<span class="number">3</span>&lt;&lt;<span class="number">4</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">3</span>) );<span class="comment">//65K    </span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0004</span>,<span class="number">0x0000</span>);                                   </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0008</span>,<span class="number">0x0202</span>);           </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0009</span>,<span class="number">0x0000</span>);         </span><br><span class="line">        LCD_WriteReg(<span class="number">0x000a</span>,<span class="number">0x0000</span>);<span class="comment">//display setting         </span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x000c</span>,<span class="number">0x0001</span>);<span class="comment">//display setting          </span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x000d</span>,<span class="number">0x0000</span>);<span class="comment">//0f3c          </span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x000f</span>,<span class="number">0x0000</span>);</span><br><span class="line"><span class="comment">//电源配置</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0010</span>,<span class="number">0x0000</span>);   </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0011</span>,<span class="number">0x0007</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0012</span>,<span class="number">0x0000</span>);                                                                 </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0013</span>,<span class="number">0x0000</span>);                 </span><br><span class="line">     LCD_WriteReg(<span class="number">0x0007</span>,<span class="number">0x0001</span>);                 </span><br><span class="line">       delay_ms(<span class="number">50</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0010</span>,<span class="number">0x1490</span>);   </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0011</span>,<span class="number">0x0227</span>);</span><br><span class="line">        delay_ms(<span class="number">50</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0012</span>,<span class="number">0x008A</span>);                  </span><br><span class="line">        delay_ms(<span class="number">50</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0013</span>,<span class="number">0x1a00</span>);   </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0029</span>,<span class="number">0x0006</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x002b</span>,<span class="number">0x000d</span>);</span><br><span class="line">        delay_ms(<span class="number">50</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0020</span>,<span class="number">0x0000</span>);                                                            </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0021</span>,<span class="number">0x0000</span>);           </span><br><span class="line">delay_ms(<span class="number">50</span>); </span><br><span class="line"><span class="comment">//伽马校正</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0030</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0031</span>,<span class="number">0x0604</span>);   </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0032</span>,<span class="number">0x0305</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0035</span>,<span class="number">0x0000</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0036</span>,<span class="number">0x0C09</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0037</span>,<span class="number">0x0204</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0038</span>,<span class="number">0x0301</span>);        </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0039</span>,<span class="number">0x0707</span>);     </span><br><span class="line">        LCD_WriteReg(<span class="number">0x003c</span>,<span class="number">0x0000</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x003d</span>,<span class="number">0x0a0a</span>);</span><br><span class="line">        delay_ms(<span class="number">50</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0050</span>,<span class="number">0x0000</span>); <span class="comment">//水平GRAM起始位置 </span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0051</span>,<span class="number">0x00ef</span>); <span class="comment">//水平GRAM终止位置                    </span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0052</span>,<span class="number">0x0000</span>); <span class="comment">//垂直GRAM起始位置                    </span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0053</span>,<span class="number">0x013f</span>); <span class="comment">//垂直GRAM终止位置  </span></span><br><span class="line"> </span><br><span class="line">         LCD_WriteReg(<span class="number">0x0060</span>,<span class="number">0xa700</span>);        </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0061</span>,<span class="number">0x0001</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x006a</span>,<span class="number">0x0000</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0080</span>,<span class="number">0x0000</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0081</span>,<span class="number">0x0000</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0082</span>,<span class="number">0x0000</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0083</span>,<span class="number">0x0000</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0084</span>,<span class="number">0x0000</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0085</span>,<span class="number">0x0000</span>);</span><br><span class="line">      </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0090</span>,<span class="number">0x0010</span>);     </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0092</span>,<span class="number">0x0600</span>);  </span><br><span class="line">        <span class="comment">//开启显示设置    </span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0007</span>,<span class="number">0x0133</span>); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0x9320</span>)<span class="comment">//测试OK.</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_WriteReg(<span class="number">0x00</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x01</span>,<span class="number">0x0100</span>);<span class="comment">//Driver Output Contral.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x02</span>,<span class="number">0x0700</span>);<span class="comment">//LCD Driver Waveform Contral.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x03</span>,<span class="number">0x1030</span>);<span class="comment">//Entry Mode Set.</span></span><br><span class="line"><span class="comment">//LCD_WriteReg(0x03,0x1018);//Entry Mode Set.</span></span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x04</span>,<span class="number">0x0000</span>);<span class="comment">//Scalling Contral.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x08</span>,<span class="number">0x0202</span>);<span class="comment">//Display Contral 2.(0x0207)</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x09</span>,<span class="number">0x0000</span>);<span class="comment">//Display Contral 3.(0x0000)</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0a</span>,<span class="number">0x0000</span>);<span class="comment">//Frame Cycle Contal.(0x0000)</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0c</span>,(<span class="number">1</span>&lt;&lt;<span class="number">0</span>));<span class="comment">//Extern Display Interface Contral 1.(0x0000)</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0d</span>,<span class="number">0x0000</span>);<span class="comment">//Frame Maker Position.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0f</span>,<span class="number">0x0000</span>);<span class="comment">//Extern Display Interface Contral 2.    </span></span><br><span class="line">delay_ms(<span class="number">50</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x07</span>,<span class="number">0x0101</span>);<span class="comment">//Display Contral.</span></span><br><span class="line">delay_ms(<span class="number">50</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0x10</span>,(<span class="number">1</span>&lt;&lt;<span class="number">12</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">8</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">7</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">6</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">4</span>));<span class="comment">//Power Control 1.(0x16b0)</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x11</span>,<span class="number">0x0007</span>);<span class="comment">//Power Control 2.(0x0001)</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x12</span>,(<span class="number">1</span>&lt;&lt;<span class="number">8</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">4</span>)|(<span class="number">0</span>&lt;&lt;<span class="number">0</span>));<span class="comment">//Power Control 3.(0x0138)</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x13</span>,<span class="number">0x0b00</span>);<span class="comment">//Power Control 4.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x29</span>,<span class="number">0x0000</span>);<span class="comment">//Power Control 7.</span></span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x2b</span>,(<span class="number">1</span>&lt;&lt;<span class="number">14</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">4</span>));    </span><br><span class="line">LCD_WriteReg(<span class="number">0x50</span>,<span class="number">0</span>);<span class="comment">//Set X Star</span></span><br><span class="line"><span class="comment">//水平GRAM终止位置Set X End.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x51</span>,<span class="number">239</span>);<span class="comment">//Set Y Star</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x52</span>,<span class="number">0</span>);<span class="comment">//Set Y End.t.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x53</span>,<span class="number">319</span>);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x60</span>,<span class="number">0x2700</span>);<span class="comment">//Driver Output Control.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x61</span>,<span class="number">0x0001</span>);<span class="comment">//Driver Output Control.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x6a</span>,<span class="number">0x0000</span>);<span class="comment">//Vertical Srcoll Control.</span></span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x80</span>,<span class="number">0x0000</span>);<span class="comment">//Display Position? Partial Display 1.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x81</span>,<span class="number">0x0000</span>);<span class="comment">//RAM Address Start? Partial Display 1.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x82</span>,<span class="number">0x0000</span>);<span class="comment">//RAM Address End-Partial Display 1.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x83</span>,<span class="number">0x0000</span>);<span class="comment">//Displsy Position? Partial Display 2.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x84</span>,<span class="number">0x0000</span>);<span class="comment">//RAM Address Start? Partial Display 2.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x85</span>,<span class="number">0x0000</span>);<span class="comment">//RAM Address End? Partial Display 2.</span></span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x90</span>,(<span class="number">0</span>&lt;&lt;<span class="number">7</span>)|(<span class="number">16</span>&lt;&lt;<span class="number">0</span>));<span class="comment">//Frame Cycle Contral.(0x0013)</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x92</span>,<span class="number">0x0000</span>);<span class="comment">//Panel Interface Contral 2.(0x0000)</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x93</span>,<span class="number">0x0001</span>);<span class="comment">//Panel Interface Contral 3.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x95</span>,<span class="number">0x0110</span>);<span class="comment">//Frame Cycle Contral.(0x0110)</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x97</span>,(<span class="number">0</span>&lt;&lt;<span class="number">8</span>));<span class="comment">//</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x98</span>,<span class="number">0x0000</span>);<span class="comment">//Frame Cycle Contral.   </span></span><br><span class="line">LCD_WriteReg(<span class="number">0x07</span>,<span class="number">0x0173</span>);<span class="comment">//(0x0173)</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X9331</span>)<span class="comment">//OK |/|/| </span></span><br><span class="line">&#123;</span><br><span class="line">LCD_WriteReg(<span class="number">0x00E7</span>, <span class="number">0x1014</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0001</span>, <span class="number">0x0100</span>); <span class="comment">// set SS and SM bit</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0002</span>, <span class="number">0x0200</span>); <span class="comment">// set 1 line inversion</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0003</span>,(<span class="number">1</span>&lt;&lt;<span class="number">12</span>)|(<span class="number">3</span>&lt;&lt;<span class="number">4</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">3</span>));<span class="comment">//65K    </span></span><br><span class="line"><span class="comment">//LCD_WriteReg(0x0003, 0x1030); // set GRAM write direction and BGR=1.</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0008</span>, <span class="number">0x0202</span>); <span class="comment">// set the back porch and front porch</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0009</span>, <span class="number">0x0000</span>); <span class="comment">// set non-display area refresh cycle ISC[3:0]</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x000A</span>, <span class="number">0x0000</span>); <span class="comment">// FMARK function</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x000C</span>, <span class="number">0x0000</span>); <span class="comment">// RGB interface setting</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x000D</span>, <span class="number">0x0000</span>); <span class="comment">// Frame marker Position</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x000F</span>, <span class="number">0x0000</span>); <span class="comment">// RGB interface polarity</span></span><br><span class="line"><span class="comment">//*************Power On sequence ****************//</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0010</span>, <span class="number">0x0000</span>); <span class="comment">// SAP, BT[3:0], AP, DSTB, SLP, STB</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0011</span>, <span class="number">0x0007</span>); <span class="comment">// DC1[2:0], DC0[2:0], VC[2:0]</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0012</span>, <span class="number">0x0000</span>); <span class="comment">// VREG1OUT voltage</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0013</span>, <span class="number">0x0000</span>); <span class="comment">// VDV[4:0] for VCOM amplitude</span></span><br><span class="line">delay_ms(<span class="number">200</span>); <span class="comment">// Dis-charge capacitor power voltage</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0010</span>, <span class="number">0x1690</span>); <span class="comment">// SAP, BT[3:0], AP, DSTB, SLP, STB</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0011</span>, <span class="number">0x0227</span>); <span class="comment">// DC1[2:0], DC0[2:0], VC[2:0]</span></span><br><span class="line">delay_ms(<span class="number">50</span>); <span class="comment">// Delay 50ms</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0012</span>, <span class="number">0x000C</span>); <span class="comment">// Internal reference voltage= Vci;</span></span><br><span class="line">delay_ms(<span class="number">50</span>); <span class="comment">// Delay 50ms</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0013</span>, <span class="number">0x0800</span>); <span class="comment">// Set VDV[4:0] for VCOM amplitude</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0029</span>, <span class="number">0x0011</span>); <span class="comment">// Set VCM[5:0] for VCOMH</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x002B</span>, <span class="number">0x000B</span>); <span class="comment">// Set Frame Rate</span></span><br><span class="line">delay_ms(<span class="number">50</span>); <span class="comment">// Delay 50ms</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0020</span>, <span class="number">0x0000</span>); <span class="comment">// GRAM horizontal Address</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0021</span>, <span class="number">0x013f</span>); <span class="comment">// GRAM Vertical Address</span></span><br><span class="line"><span class="comment">// ----------- Adjust the Gamma Curve ----------//</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0030</span>, <span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0031</span>, <span class="number">0x0106</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0032</span>, <span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0035</span>, <span class="number">0x0204</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0036</span>, <span class="number">0x160A</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0037</span>, <span class="number">0x0707</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0038</span>, <span class="number">0x0106</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0039</span>, <span class="number">0x0707</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x003C</span>, <span class="number">0x0402</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x003D</span>, <span class="number">0x0C0F</span>);</span><br><span class="line"><span class="comment">//------------------ Set GRAM area ---------------//</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0050</span>, <span class="number">0x0000</span>); <span class="comment">// Horizontal GRAM Start Address</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0051</span>, <span class="number">0x00EF</span>); <span class="comment">// Horizontal GRAM End Address</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0052</span>, <span class="number">0x0000</span>); <span class="comment">// Vertical GRAM Start Address</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0053</span>, <span class="number">0x013F</span>); <span class="comment">// Vertical GRAM Start Address</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0060</span>, <span class="number">0x2700</span>); <span class="comment">// Gate Scan Line</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0061</span>, <span class="number">0x0001</span>); <span class="comment">// NDL,VLE, REV </span></span><br><span class="line">LCD_WriteReg(<span class="number">0x006A</span>, <span class="number">0x0000</span>); <span class="comment">// set scrolling line</span></span><br><span class="line"><span class="comment">//-------------- Partial Display Control ---------//</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0080</span>, <span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0081</span>, <span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0082</span>, <span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0083</span>, <span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0084</span>, <span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0085</span>, <span class="number">0x0000</span>);</span><br><span class="line"><span class="comment">//-------------- Panel Control -------------------//</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0090</span>, <span class="number">0x0010</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0092</span>, <span class="number">0x0600</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0007</span>, <span class="number">0x0133</span>); <span class="comment">// 262K color and display ON</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0x5408</span>)</span><br><span class="line">&#123;</span><br><span class="line">LCD_WriteReg(<span class="number">0x01</span>,<span class="number">0x0100</span>);  </span><br><span class="line">LCD_WriteReg(<span class="number">0x02</span>,<span class="number">0x0700</span>);<span class="comment">//LCD Driving Waveform Contral </span></span><br><span class="line">LCD_WriteReg(<span class="number">0x03</span>,<span class="number">0x1030</span>);<span class="comment">//Entry Mode设置    </span></span><br><span class="line"><span class="comment">//指针从左至右自上而下的自动增模式</span></span><br><span class="line"><span class="comment">//Normal Mode(Window Mode disable)</span></span><br><span class="line"><span class="comment">//RGB格式</span></span><br><span class="line"><span class="comment">//16位数据2次传输的8总线设置</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x04</span>,<span class="number">0x0000</span>); <span class="comment">//Scalling Control register     </span></span><br><span class="line">LCD_WriteReg(<span class="number">0x08</span>,<span class="number">0x0207</span>); <span class="comment">//Display Control 2 </span></span><br><span class="line">LCD_WriteReg(<span class="number">0x09</span>,<span class="number">0x0000</span>); <span class="comment">//Display Control 3 </span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0A</span>,<span class="number">0x0000</span>); <span class="comment">//Frame Cycle Control </span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0C</span>,<span class="number">0x0000</span>); <span class="comment">//External Display Interface Control 1 </span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0D</span>,<span class="number">0x0000</span>); <span class="comment">//Frame Maker Position </span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0F</span>,<span class="number">0x0000</span>); <span class="comment">//External Display Interface Control 2 </span></span><br><span class="line"> delay_ms(<span class="number">20</span>);</span><br><span class="line"><span class="comment">//TFT 液晶彩色图像显示方法14</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x10</span>,<span class="number">0x16B0</span>); <span class="comment">//0x14B0 //Power Control 1</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x11</span>,<span class="number">0x0001</span>); <span class="comment">//0x0007 //Power Control 2</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x17</span>,<span class="number">0x0001</span>); <span class="comment">//0x0000 //Power Control 3</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x12</span>,<span class="number">0x0138</span>); <span class="comment">//0x013B //Power Control 4</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x13</span>,<span class="number">0x0800</span>); <span class="comment">//0x0800 //Power Control 5</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x29</span>,<span class="number">0x0009</span>); <span class="comment">//NVM read data 2</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x2a</span>,<span class="number">0x0009</span>); <span class="comment">//NVM read data 3</span></span><br><span class="line">LCD_WriteReg(<span class="number">0xa4</span>,<span class="number">0x0000</span>); </span><br><span class="line">LCD_WriteReg(<span class="number">0x50</span>,<span class="number">0x0000</span>); <span class="comment">//设置操作窗口的X轴开始列</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x51</span>,<span class="number">0x00EF</span>); <span class="comment">//设置操作窗口的X轴结束列</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x52</span>,<span class="number">0x0000</span>); <span class="comment">//设置操作窗口的Y轴开始行</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x53</span>,<span class="number">0x013F</span>); <span class="comment">//设置操作窗口的Y轴结束行</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x60</span>,<span class="number">0x2700</span>); <span class="comment">//Driver Output Control</span></span><br><span class="line"><span class="comment">//设置屏幕的点数以及扫描的起始行</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x61</span>,<span class="number">0x0001</span>); <span class="comment">//Driver Output Control</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x6A</span>,<span class="number">0x0000</span>); <span class="comment">//Vertical Scroll Control</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x80</span>,<span class="number">0x0000</span>); <span class="comment">//Display Position – Partial Display 1</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x81</span>,<span class="number">0x0000</span>); <span class="comment">//RAM Address Start – Partial Display 1</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x82</span>,<span class="number">0x0000</span>); <span class="comment">//RAM address End - Partial Display 1</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x83</span>,<span class="number">0x0000</span>); <span class="comment">//Display Position – Partial Display 2</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x84</span>,<span class="number">0x0000</span>); <span class="comment">//RAM Address Start – Partial Display 2</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x85</span>,<span class="number">0x0000</span>); <span class="comment">//RAM address End – Partail Display2</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x90</span>,<span class="number">0x0013</span>); <span class="comment">//Frame Cycle Control</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x92</span>,<span class="number">0x0000</span>);  <span class="comment">//Panel Interface Control 2</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x93</span>,<span class="number">0x0003</span>); <span class="comment">//Panel Interface control 3</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x95</span>,<span class="number">0x0110</span>);  <span class="comment">//Frame Cycle Control</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x07</span>,<span class="number">0x0173</span>); </span><br><span class="line">delay_ms(<span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0x1505</span>)<span class="comment">//OK</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// second release on 3/5  ,luminance is acceptable,water wave appear during camera preview</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0007</span>,<span class="number">0x0000</span>);</span><br><span class="line">        delay_ms(<span class="number">50</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0012</span>,<span class="number">0x011C</span>);<span class="comment">//0x011A   why need to set several times?</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x00A4</span>,<span class="number">0x0001</span>);<span class="comment">//NVM </span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0008</span>,<span class="number">0x000F</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x000A</span>,<span class="number">0x0008</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x000D</span>,<span class="number">0x0008</span>);    </span><br><span class="line">  <span class="comment">//伽马校正</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0030</span>,<span class="number">0x0707</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0031</span>,<span class="number">0x0007</span>); <span class="comment">//0x0707</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0032</span>,<span class="number">0x0603</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0033</span>,<span class="number">0x0700</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0034</span>,<span class="number">0x0202</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0035</span>,<span class="number">0x0002</span>); <span class="comment">//?0x0606</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0036</span>,<span class="number">0x1F0F</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0037</span>,<span class="number">0x0707</span>); <span class="comment">//0x0f0f  0x0105</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0038</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0039</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x003A</span>,<span class="number">0x0707</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x003B</span>,<span class="number">0x0000</span>); <span class="comment">//0x0303</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x003C</span>,<span class="number">0x0007</span>); <span class="comment">//?0x0707</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x003D</span>,<span class="number">0x0000</span>); <span class="comment">//0x1313//0x1f08</span></span><br><span class="line">        delay_ms(<span class="number">50</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0007</span>,<span class="number">0x0001</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0017</span>,<span class="number">0x0001</span>);<span class="comment">//开启电源</span></span><br><span class="line">        delay_ms(<span class="number">50</span>); </span><br><span class="line">  <span class="comment">//电源配置</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0010</span>,<span class="number">0x17A0</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0011</span>,<span class="number">0x0217</span>);<span class="comment">//reference voltage VC[2:0]   Vciout = 1.00*Vcivl</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0012</span>,<span class="number">0x011E</span>);<span class="comment">//0x011c  //Vreg1out = Vcilvl*1.80   is it the same as Vgama1out ?</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0013</span>,<span class="number">0x0F00</span>);<span class="comment">//VDV[4:0]--&gt;VCOM Amplitude VcomL = VcomH - Vcom Ampl</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x002A</span>,<span class="number">0x0000</span>);  </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0029</span>,<span class="number">0x000A</span>);<span class="comment">//0x0001F  Vcomh = VCM1[4:0]*Vreg1out    gate source voltage??</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0012</span>,<span class="number">0x013E</span>);<span class="comment">// 0x013C  power supply on</span></span><br><span class="line">        <span class="comment">//Coordinates Control//</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0050</span>,<span class="number">0x0000</span>);<span class="comment">//0x0e00</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0051</span>,<span class="number">0x00EF</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0052</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0053</span>,<span class="number">0x013F</span>); </span><br><span class="line">    <span class="comment">//Pannel Image Control//</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0060</span>,<span class="number">0x2700</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0061</span>,<span class="number">0x0001</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x006A</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0080</span>,<span class="number">0x0000</span>); </span><br><span class="line">    <span class="comment">//Partial Image Control//</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0081</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0082</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0083</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0084</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0085</span>,<span class="number">0x0000</span>); </span><br><span class="line">  <span class="comment">//Panel Interface Control//</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0090</span>,<span class="number">0x0013</span>);<span class="comment">//0x0010 frenqucy</span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0092</span>,<span class="number">0x0300</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0093</span>,<span class="number">0x0005</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0095</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0097</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0098</span>,<span class="number">0x0000</span>); </span><br><span class="line">  </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0001</span>,<span class="number">0x0100</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0002</span>,<span class="number">0x0700</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0003</span>,<span class="number">0x1038</span>);<span class="comment">//扫描方向 上-&gt;下  左-&gt;右 </span></span><br><span class="line">        LCD_WriteReg(<span class="number">0x0004</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x000C</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x000F</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0020</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0021</span>,<span class="number">0x0000</span>); </span><br><span class="line">        LCD_WriteReg(<span class="number">0x0007</span>,<span class="number">0x0021</span>); </span><br><span class="line">        delay_ms(<span class="number">20</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0007</span>,<span class="number">0x0061</span>); </span><br><span class="line">        delay_ms(<span class="number">20</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0007</span>,<span class="number">0x0173</span>); </span><br><span class="line">        delay_ms(<span class="number">20</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0xB505</span>)</span><br><span class="line">&#123;</span><br><span class="line">LCD_WriteReg(<span class="number">0x0000</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0000</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0000</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0000</span>,<span class="number">0x0000</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x00a4</span>,<span class="number">0x0001</span>);</span><br><span class="line">delay_ms(<span class="number">20</span>);  </span><br><span class="line">LCD_WriteReg(<span class="number">0x0060</span>,<span class="number">0x2700</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0008</span>,<span class="number">0x0202</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x0030</span>,<span class="number">0x0214</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0031</span>,<span class="number">0x3715</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0032</span>,<span class="number">0x0604</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0033</span>,<span class="number">0x0e16</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0034</span>,<span class="number">0x2211</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0035</span>,<span class="number">0x1500</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0036</span>,<span class="number">0x8507</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0037</span>,<span class="number">0x1407</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0038</span>,<span class="number">0x1403</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0039</span>,<span class="number">0x0020</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x0090</span>,<span class="number">0x001a</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0010</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0011</span>,<span class="number">0x0007</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0012</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0013</span>,<span class="number">0x0000</span>);</span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x0010</span>,<span class="number">0x0730</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0011</span>,<span class="number">0x0137</span>);</span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x0012</span>,<span class="number">0x01b8</span>);</span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x0013</span>,<span class="number">0x0f00</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x002a</span>,<span class="number">0x0080</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0029</span>,<span class="number">0x0048</span>);</span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x0001</span>,<span class="number">0x0100</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0002</span>,<span class="number">0x0700</span>);</span><br><span class="line">        LCD_WriteReg(<span class="number">0x0003</span>,<span class="number">0x1038</span>);<span class="comment">//扫描方向 上-&gt;下  左-&gt;右 </span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0008</span>,<span class="number">0x0202</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x000a</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x000c</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x000d</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x000e</span>,<span class="number">0x0030</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0050</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0051</span>,<span class="number">0x00ef</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0052</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0053</span>,<span class="number">0x013f</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0060</span>,<span class="number">0x2700</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0061</span>,<span class="number">0x0001</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x006a</span>,<span class="number">0x0000</span>);</span><br><span class="line"><span class="comment">//LCD_WriteReg(0x0080,0x0000);</span></span><br><span class="line"><span class="comment">//LCD_WriteReg(0x0081,0x0000);</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0090</span>,<span class="number">0X0011</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0092</span>,<span class="number">0x0600</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0093</span>,<span class="number">0x0402</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0094</span>,<span class="number">0x0002</span>);</span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x0007</span>,<span class="number">0x0001</span>);</span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0007</span>,<span class="number">0x0061</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0007</span>,<span class="number">0x0173</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x0020</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0021</span>,<span class="number">0x0000</span>);  </span><br><span class="line">LCD_WriteReg(<span class="number">0x00</span>,<span class="number">0x22</span>);  </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0xC505</span>)</span><br><span class="line">&#123;</span><br><span class="line">LCD_WriteReg(<span class="number">0x0000</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0000</span>,<span class="number">0x0000</span>);</span><br><span class="line">delay_ms(<span class="number">20</span>);  </span><br><span class="line">LCD_WriteReg(<span class="number">0x0000</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0000</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0000</span>,<span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0000</span>,<span class="number">0x0000</span>);</span><br><span class="line"> LCD_WriteReg(<span class="number">0x00a4</span>,<span class="number">0x0001</span>);</span><br><span class="line">delay_ms(<span class="number">20</span>);  </span><br><span class="line">LCD_WriteReg(<span class="number">0x0060</span>,<span class="number">0x2700</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0008</span>,<span class="number">0x0806</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x0030</span>,<span class="number">0x0703</span>);<span class="comment">//gamma setting</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0031</span>,<span class="number">0x0001</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0032</span>,<span class="number">0x0004</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0033</span>,<span class="number">0x0102</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0034</span>,<span class="number">0x0300</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0035</span>,<span class="number">0x0103</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0036</span>,<span class="number">0x001F</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0037</span>,<span class="number">0x0703</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0038</span>,<span class="number">0x0001</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0039</span>,<span class="number">0x0004</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x0090</span>, <span class="number">0x0015</span>);<span class="comment">//80Hz</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0010</span>, <span class="number">0X0410</span>);<span class="comment">//BT,AP</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0011</span>,<span class="number">0x0247</span>);<span class="comment">//DC1,DC0,VC</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0012</span>, <span class="number">0x01BC</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0013</span>, <span class="number">0x0e00</span>);</span><br><span class="line">delay_ms(<span class="number">120</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0001</span>, <span class="number">0x0100</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0002</span>, <span class="number">0x0200</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0003</span>, <span class="number">0x1030</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x000A</span>, <span class="number">0x0008</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x000C</span>, <span class="number">0x0000</span>);</span><br><span class="line"></span><br><span class="line">LCD_WriteReg(<span class="number">0x000E</span>, <span class="number">0x0020</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x000F</span>, <span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0020</span>, <span class="number">0x0000</span>);<span class="comment">//H Start</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x0021</span>, <span class="number">0x0000</span>);<span class="comment">//V Start</span></span><br><span class="line">LCD_WriteReg(<span class="number">0x002A</span>,<span class="number">0x003D</span>);<span class="comment">//vcom2</span></span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0029</span>, <span class="number">0x002d</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0050</span>, <span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0051</span>, <span class="number">0xD0EF</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0052</span>, <span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0053</span>, <span class="number">0x013F</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0061</span>, <span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x006A</span>, <span class="number">0x0000</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0092</span>,<span class="number">0x0300</span>); </span><br><span class="line"> </span><br><span class="line"> LCD_WriteReg(<span class="number">0x0093</span>, <span class="number">0x0005</span>);</span><br><span class="line">LCD_WriteReg(<span class="number">0x0007</span>, <span class="number">0x0100</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0x4531</span>)<span class="comment">//OK |/|/|</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_WriteReg(<span class="number">0X00</span>,<span class="number">0X0001</span>);   </span><br><span class="line">delay_ms(<span class="number">10</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X10</span>,<span class="number">0X1628</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X12</span>,<span class="number">0X000e</span>);<span class="comment">//0x0006    </span></span><br><span class="line">LCD_WriteReg(<span class="number">0X13</span>,<span class="number">0X0A39</span>);   </span><br><span class="line">delay_ms(<span class="number">10</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X11</span>,<span class="number">0X0040</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X15</span>,<span class="number">0X0050</span>);   </span><br><span class="line">delay_ms(<span class="number">10</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X12</span>,<span class="number">0X001e</span>);<span class="comment">//16    </span></span><br><span class="line">delay_ms(<span class="number">10</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X10</span>,<span class="number">0X1620</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X13</span>,<span class="number">0X2A39</span>);   </span><br><span class="line">delay_ms(<span class="number">10</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X01</span>,<span class="number">0X0100</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X02</span>,<span class="number">0X0300</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X03</span>,<span class="number">0X1038</span>);<span class="comment">//改变方向的   </span></span><br><span class="line">LCD_WriteReg(<span class="number">0X08</span>,<span class="number">0X0202</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X0A</span>,<span class="number">0X0008</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X30</span>,<span class="number">0X0000</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X31</span>,<span class="number">0X0402</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X32</span>,<span class="number">0X0106</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X33</span>,<span class="number">0X0503</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X34</span>,<span class="number">0X0104</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X35</span>,<span class="number">0X0301</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X36</span>,<span class="number">0X0707</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X37</span>,<span class="number">0X0305</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X38</span>,<span class="number">0X0208</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X39</span>,<span class="number">0X0F0B</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X41</span>,<span class="number">0X0002</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X60</span>,<span class="number">0X2700</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X61</span>,<span class="number">0X0001</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X90</span>,<span class="number">0X0210</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X92</span>,<span class="number">0X010A</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X93</span>,<span class="number">0X0004</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0XA0</span>,<span class="number">0X0100</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X07</span>,<span class="number">0X0001</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X07</span>,<span class="number">0X0021</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X07</span>,<span class="number">0X0023</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X07</span>,<span class="number">0X0033</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X07</span>,<span class="number">0X0133</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0XA0</span>,<span class="number">0X0000</span>); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0x4535</span>)</span><br><span class="line">&#123;      </span><br><span class="line">LCD_WriteReg(<span class="number">0X15</span>,<span class="number">0X0030</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X9A</span>,<span class="number">0X0010</span>);   </span><br><span class="line"> LCD_WriteReg(<span class="number">0X11</span>,<span class="number">0X0020</span>);   </span><br><span class="line"> LCD_WriteReg(<span class="number">0X10</span>,<span class="number">0X3428</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X12</span>,<span class="number">0X0002</span>);<span class="comment">//16    </span></span><br><span class="line"> LCD_WriteReg(<span class="number">0X13</span>,<span class="number">0X1038</span>);   </span><br><span class="line">delay_ms(<span class="number">40</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X12</span>,<span class="number">0X0012</span>);<span class="comment">//16    </span></span><br><span class="line">delay_ms(<span class="number">40</span>);   </span><br><span class="line">  LCD_WriteReg(<span class="number">0X10</span>,<span class="number">0X3420</span>);   </span><br><span class="line"> LCD_WriteReg(<span class="number">0X13</span>,<span class="number">0X3038</span>);   </span><br><span class="line">delay_ms(<span class="number">70</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X30</span>,<span class="number">0X0000</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X31</span>,<span class="number">0X0402</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X32</span>,<span class="number">0X0307</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X33</span>,<span class="number">0X0304</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X34</span>,<span class="number">0X0004</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X35</span>,<span class="number">0X0401</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X36</span>,<span class="number">0X0707</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X37</span>,<span class="number">0X0305</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X38</span>,<span class="number">0X0610</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X39</span>,<span class="number">0X0610</span>); </span><br><span class="line">  </span><br><span class="line">LCD_WriteReg(<span class="number">0X01</span>,<span class="number">0X0100</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X02</span>,<span class="number">0X0300</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X03</span>,<span class="number">0X1030</span>);<span class="comment">//改变方向的   </span></span><br><span class="line">LCD_WriteReg(<span class="number">0X08</span>,<span class="number">0X0808</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X0A</span>,<span class="number">0X0008</span>);   </span><br><span class="line"> LCD_WriteReg(<span class="number">0X60</span>,<span class="number">0X2700</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X61</span>,<span class="number">0X0001</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X90</span>,<span class="number">0X013E</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X92</span>,<span class="number">0X0100</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X93</span>,<span class="number">0X0100</span>);   </span><br><span class="line"> LCD_WriteReg(<span class="number">0XA0</span>,<span class="number">0X3000</span>);   </span><br><span class="line"> LCD_WriteReg(<span class="number">0XA3</span>,<span class="number">0X0010</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X07</span>,<span class="number">0X0001</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X07</span>,<span class="number">0X0021</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X07</span>,<span class="number">0X0023</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X07</span>,<span class="number">0X0033</span>);   </span><br><span class="line">LCD_WriteReg(<span class="number">0X07</span>,<span class="number">0X0133</span>);   </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcddev.id==<span class="number">0X1963</span>)</span><br><span class="line">&#123;</span><br><span class="line">LCD_WR_REG(<span class="number">0xE2</span>);<span class="comment">//Set PLL with OSC = 10MHz (hardware),Multiplier N = 35, 250MHz &lt; VCO &lt; 800MHz = OSC*(N+1), VCO = 360MHz</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x23</span>);<span class="comment">//参数1 </span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x02</span>);<span class="comment">//参数2 Divider M = 2, PLL = 360/(M+1) = 120MHz</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x04</span>);<span class="comment">//参数3 Validate M and N values   </span></span><br><span class="line">delay_us(<span class="number">100</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0xE0</span>);<span class="comment">// Start PLL command</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x01</span>);<span class="comment">// enable PLL</span></span><br><span class="line">delay_ms(<span class="number">10</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0xE0</span>);<span class="comment">// Start PLL command again</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x03</span>);<span class="comment">// now, use PLL output as system clock</span></span><br><span class="line">delay_ms(<span class="number">12</span>);  </span><br><span class="line">LCD_WR_REG(<span class="number">0x01</span>);<span class="comment">//软复位</span></span><br><span class="line">delay_ms(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xE6</span>);<span class="comment">//设置像素频率</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x03</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xFF</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0xFF</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xB0</span>);<span class="comment">//设置LCD模式</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x20</span>);<span class="comment">//24位模式</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);<span class="comment">//TFT 模式 </span></span><br><span class="line"></span><br><span class="line">LCD_WR_DATA((SSD_HOR_RESOLUTION<span class="number">-1</span>)&gt;&gt;<span class="number">8</span>);<span class="comment">//设置LCD水平像素</span></span><br><span class="line">LCD_WR_DATA(SSD_HOR_RESOLUTION<span class="number">-1</span>); </span><br><span class="line">LCD_WR_DATA((SSD_VER_RESOLUTION<span class="number">-1</span>)&gt;&gt;<span class="number">8</span>);<span class="comment">//设置LCD垂直像素</span></span><br><span class="line">LCD_WR_DATA(SSD_VER_RESOLUTION<span class="number">-1</span>); </span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);<span class="comment">//RGB序列 </span></span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xB4</span>);<span class="comment">//Set horizontal period</span></span><br><span class="line">LCD_WR_DATA((SSD_HT<span class="number">-1</span>)&gt;&gt;<span class="number">8</span>);</span><br><span class="line">LCD_WR_DATA(SSD_HT<span class="number">-1</span>);</span><br><span class="line">LCD_WR_DATA((SSD_HPS<span class="number">-1</span>)&gt;&gt;<span class="number">8</span>);</span><br><span class="line">LCD_WR_DATA(SSD_HPS<span class="number">-1</span>);</span><br><span class="line">LCD_WR_DATA(SSD_HOR_PULSE_WIDTH<span class="number">-1</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0xB6</span>);<span class="comment">//Set vertical period</span></span><br><span class="line">LCD_WR_DATA((SSD_VT<span class="number">-1</span>)&gt;&gt;<span class="number">8</span>);</span><br><span class="line">LCD_WR_DATA(SSD_VT<span class="number">-1</span>);</span><br><span class="line">LCD_WR_DATA((SSD_VSP<span class="number">-1</span>)&gt;&gt;<span class="number">8</span>);</span><br><span class="line">LCD_WR_DATA(SSD_VSP<span class="number">-1</span>);</span><br><span class="line">LCD_WR_DATA(SSD_VER_FRONT_PORCH<span class="number">-1</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xF0</span>);<span class="comment">//设置SSD1963与CPU接口为16bit  </span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x03</span>);<span class="comment">//16-bit(565 format) data for 16bpp </span></span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0x29</span>);<span class="comment">//开启显示</span></span><br><span class="line"><span class="comment">//设置PWM输出  背光通过占空比可调 </span></span><br><span class="line">LCD_WR_REG(<span class="number">0xD0</span>);<span class="comment">//设置自动白平衡DBC</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);<span class="comment">//disable</span></span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xBE</span>);<span class="comment">//配置PWM输出</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x05</span>);<span class="comment">//1设置PWM频率</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0xFE</span>);<span class="comment">//2设置PWM占空比</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x01</span>);<span class="comment">//3设置C</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0xFF</span>);<span class="comment">//4设置D</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x00</span>);<span class="comment">//5设置E </span></span><br><span class="line"></span><br><span class="line">LCD_WR_REG(<span class="number">0xB8</span>);<span class="comment">//设置GPIO配置</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x0F</span>);<span class="comment">//4个IO口设置成输出</span></span><br><span class="line">LCD_WR_DATA(<span class="number">0x01</span>);<span class="comment">//GPIO使用正常的IO功能 </span></span><br><span class="line">LCD_WR_REG(<span class="number">0xBA</span>);</span><br><span class="line">LCD_WR_DATA(<span class="number">0X01</span>);<span class="comment">//GPIO[1:0]=01,控制LCD方向</span></span><br><span class="line"></span><br><span class="line">LCD_SSD_BackLightSet(<span class="number">100</span>);<span class="comment">//背光设置为最亮</span></span><br><span class="line">&#125; </span><br><span class="line">LCD_Display_Dir(<span class="number">0</span>);<span class="comment">//默认为竖屏</span></span><br><span class="line">LCD_LED=<span class="number">1</span>;<span class="comment">//点亮背光</span></span><br><span class="line">LCD_Clear(WHITE);</span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//清屏函数</span></span><br><span class="line"><span class="comment">//color:要清屏的填充色</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Clear</span><span class="params">(u16 color)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 index=<span class="number">0</span>;      </span><br><span class="line">u32 totalpoint=lcddev.width;</span><br><span class="line">totalpoint*=lcddev.height; <span class="comment">//得到总点数</span></span><br><span class="line"><span class="keyword">if</span>((lcddev.id==<span class="number">0X6804</span>)&amp;&amp;(lcddev.dir==<span class="number">1</span>))<span class="comment">//6804横屏的时候特殊处理  </span></span><br><span class="line">&#123;    </span><br><span class="line"> lcddev.dir=<span class="number">0</span>; </span><br><span class="line"> lcddev.setxcmd=<span class="number">0X2A</span>;</span><br><span class="line">lcddev.setycmd=<span class="number">0X2B</span>;   </span><br><span class="line">LCD_SetCursor(<span class="number">0x00</span>,<span class="number">0x0000</span>);<span class="comment">//设置光标位置  </span></span><br><span class="line"> lcddev.dir=<span class="number">1</span>; </span><br><span class="line">  lcddev.setxcmd=<span class="number">0X2B</span>;</span><br><span class="line">lcddev.setycmd=<span class="number">0X2A</span>;   </span><br><span class="line"> &#125;<span class="keyword">else</span> LCD_SetCursor(<span class="number">0x00</span>,<span class="number">0x0000</span>);<span class="comment">//设置光标位置 </span></span><br><span class="line">LCD_WriteRAM_Prepare();     <span class="comment">//开始写入GRAM   </span></span><br><span class="line"><span class="keyword">for</span>(index=<span class="number">0</span>;index&lt;totalpoint;index++)</span><br><span class="line">&#123;</span><br><span class="line">LCD-&gt;LCD_RAM=color;</span><br><span class="line">&#125;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//在指定区域内填充单个颜色</span></span><br><span class="line"><span class="comment">//(sx,sy),(ex,ey):填充矩形对角坐标,区域大小为:(ex-sx+1)*(ey-sy+1)   </span></span><br><span class="line"><span class="comment">//color:要填充的颜色</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Fill</span><span class="params">(u16 sx,u16 sy,u16 ex,u16 ey,u16 color)</span></span><br><span class="line">&#123;          </span><br><span class="line">u16 i,j;</span><br><span class="line">u16 xlen=<span class="number">0</span>;</span><br><span class="line">u16 temp;</span><br><span class="line"><span class="keyword">if</span>((lcddev.id==<span class="number">0X6804</span>)&amp;&amp;(lcddev.dir==<span class="number">1</span>))<span class="comment">//6804横屏的时候特殊处理  </span></span><br><span class="line">&#123;</span><br><span class="line">temp=sx;</span><br><span class="line">sx=sy;</span><br><span class="line">sy=lcddev.width-ex<span class="number">-1</span>;  </span><br><span class="line">ex=ey;</span><br><span class="line">ey=lcddev.width-temp<span class="number">-1</span>;</span><br><span class="line"> lcddev.dir=<span class="number">0</span>; </span><br><span class="line"> lcddev.setxcmd=<span class="number">0X2A</span>;</span><br><span class="line">lcddev.setycmd=<span class="number">0X2B</span>;   </span><br><span class="line">LCD_Fill(sx,sy,ex,ey,color);  </span><br><span class="line"> lcddev.dir=<span class="number">1</span>; </span><br><span class="line">  lcddev.setxcmd=<span class="number">0X2B</span>;</span><br><span class="line">lcddev.setycmd=<span class="number">0X2A</span>;   </span><br><span class="line"> &#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">xlen=ex-sx+<span class="number">1</span>; </span><br><span class="line"><span class="keyword">for</span>(i=sy;i&lt;=ey;i++)</span><br><span class="line">&#123;</span><br><span class="line"> LCD_SetCursor(sx,i);      <span class="comment">//设置光标位置 </span></span><br><span class="line">LCD_WriteRAM_Prepare();     <span class="comment">//开始写入GRAM  </span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;xlen;j++)LCD-&gt;LCD_RAM=color;<span class="comment">//显示颜色     </span></span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//在指定区域内填充指定颜色块 </span></span><br><span class="line"><span class="comment">//(sx,sy),(ex,ey):填充矩形对角坐标,区域大小为:(ex-sx+1)*(ey-sy+1)   </span></span><br><span class="line"><span class="comment">//color:要填充的颜色</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Color_Fill</span><span class="params">(u16 sx,u16 sy,u16 ex,u16 ey,u16 *color)</span></span><br><span class="line">&#123;  </span><br><span class="line">u16 height,width;</span><br><span class="line">u16 i,j;</span><br><span class="line">width=ex-sx+<span class="number">1</span>; <span class="comment">//得到填充的宽度</span></span><br><span class="line">height=ey-sy+<span class="number">1</span>;<span class="comment">//高度</span></span><br><span class="line"> <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;height;i++)</span><br><span class="line">&#123;</span><br><span class="line"> LCD_SetCursor(sx,sy+i);   <span class="comment">//设置光标位置 </span></span><br><span class="line">LCD_WriteRAM_Prepare();     <span class="comment">//开始写入GRAM</span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;width;j++)LCD-&gt;LCD_RAM=color[i*width+j];<span class="comment">//写入数据 </span></span><br><span class="line">&#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//画线</span></span><br><span class="line"><span class="comment">//x1,y1:起点坐标</span></span><br><span class="line"><span class="comment">//x2,y2:终点坐标  </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_DrawLine</span><span class="params">(u16 x1, u16 y1, u16 x2, u16 y2)</span></span><br><span class="line">&#123;</span><br><span class="line">u16 t; </span><br><span class="line"><span class="type">int</span> xerr=<span class="number">0</span>,yerr=<span class="number">0</span>,delta_x,delta_y,distance; </span><br><span class="line"><span class="type">int</span> incx,incy,uRow,uCol; </span><br><span class="line">delta_x=x2-x1; <span class="comment">//计算坐标增量 </span></span><br><span class="line">delta_y=y2-y1; </span><br><span class="line">uRow=x1; </span><br><span class="line">uCol=y1; </span><br><span class="line"><span class="keyword">if</span>(delta_x&gt;<span class="number">0</span>)incx=<span class="number">1</span>; <span class="comment">//设置单步方向 </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(delta_x==<span class="number">0</span>)incx=<span class="number">0</span>;<span class="comment">//垂直线 </span></span><br><span class="line"><span class="keyword">else</span> &#123;incx=<span class="number">-1</span>;delta_x=-delta_x;&#125; </span><br><span class="line"><span class="keyword">if</span>(delta_y&gt;<span class="number">0</span>)incy=<span class="number">1</span>; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(delta_y==<span class="number">0</span>)incy=<span class="number">0</span>;<span class="comment">//水平线 </span></span><br><span class="line"><span class="keyword">else</span>&#123;incy=<span class="number">-1</span>;delta_y=-delta_y;&#125; </span><br><span class="line"><span class="keyword">if</span>( delta_x&gt;delta_y)distance=delta_x; <span class="comment">//选取基本增量坐标轴 </span></span><br><span class="line"><span class="keyword">else</span> distance=delta_y; </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;=distance+<span class="number">1</span>;t++ )<span class="comment">//画线输出 </span></span><br><span class="line">&#123;  </span><br><span class="line">LCD_DrawPoint(uRow,uCol);<span class="comment">//画点 </span></span><br><span class="line">xerr+=delta_x ; </span><br><span class="line">yerr+=delta_y ; </span><br><span class="line"><span class="keyword">if</span>(xerr&gt;distance) </span><br><span class="line">&#123; </span><br><span class="line">xerr-=distance; </span><br><span class="line">uRow+=incx; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(yerr&gt;distance) </span><br><span class="line">&#123; </span><br><span class="line">yerr-=distance; </span><br><span class="line">uCol+=incy; </span><br><span class="line">&#125; </span><br><span class="line">&#125;  </span><br><span class="line">&#125;    </span><br><span class="line"><span class="comment">//画矩形  </span></span><br><span class="line"><span class="comment">//(x1,y1),(x2,y2):矩形的对角坐标</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_DrawRectangle</span><span class="params">(u16 x1, u16 y1, u16 x2, u16 y2)</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_DrawLine(x1,y1,x2,y1);</span><br><span class="line">LCD_DrawLine(x1,y1,x1,y2);</span><br><span class="line">LCD_DrawLine(x1,y2,x2,y2);</span><br><span class="line">LCD_DrawLine(x2,y1,x2,y2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在指定位置画一个指定大小的圆</span></span><br><span class="line"><span class="comment">//(x,y):中心点</span></span><br><span class="line"><span class="comment">//r    :半径</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Draw_Circle</span><span class="params">(u16 x0,u16 y0,u8 r)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a,b;</span><br><span class="line"><span class="type">int</span> di;</span><br><span class="line">a=<span class="number">0</span>;b=r;  </span><br><span class="line">di=<span class="number">3</span>-(r&lt;&lt;<span class="number">1</span>);             <span class="comment">//判断下个点位置的标志</span></span><br><span class="line"><span class="keyword">while</span>(a&lt;=b)</span><br><span class="line">&#123;</span><br><span class="line">LCD_DrawPoint(x0+a,y0-b);             <span class="comment">//5</span></span><br><span class="line"> LCD_DrawPoint(x0+b,y0-a);             <span class="comment">//0           </span></span><br><span class="line">LCD_DrawPoint(x0+b,y0+a);             <span class="comment">//4               </span></span><br><span class="line">LCD_DrawPoint(x0+a,y0+b);             <span class="comment">//6 </span></span><br><span class="line">LCD_DrawPoint(x0-a,y0+b);             <span class="comment">//1       </span></span><br><span class="line"> LCD_DrawPoint(x0-b,y0+a);             </span><br><span class="line">LCD_DrawPoint(x0-a,y0-b);             <span class="comment">//2             </span></span><br><span class="line">  LCD_DrawPoint(x0-b,y0-a);             <span class="comment">//7              </span></span><br><span class="line">a++;</span><br><span class="line"><span class="comment">//使用Bresenham算法画圆     </span></span><br><span class="line"><span class="keyword">if</span>(di&lt;<span class="number">0</span>)di +=<span class="number">4</span>*a+<span class="number">6</span>;  </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">di+=<span class="number">10</span>+<span class="number">4</span>*(a-b);   </span><br><span class="line">b--;</span><br><span class="line">&#125;     </span><br><span class="line">&#125;</span><br><span class="line">&#125;   </span><br><span class="line"><span class="comment">//在指定位置显示一个字符</span></span><br><span class="line"><span class="comment">//x,y:起始坐标</span></span><br><span class="line"><span class="comment">//num:要显示的字符:&quot; &quot;---&gt;&quot;~&quot;</span></span><br><span class="line"><span class="comment">//size:字体大小 12/16/24</span></span><br><span class="line"><span class="comment">//mode:叠加方式(1)还是非叠加方式(0)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowChar</span><span class="params">(u16 x,u16 y,u8 num,u8 size,u8 mode)</span></span><br><span class="line">&#123;    </span><br><span class="line">    u8 temp,t1,t;</span><br><span class="line">u16 y0=y;</span><br><span class="line">u8 csize=(size/<span class="number">8</span>+((size%<span class="number">8</span>)?<span class="number">1</span>:<span class="number">0</span>))*(size/<span class="number">2</span>);<span class="comment">//得到字体一个字符对应点阵集所占的字节数</span></span><br><span class="line"> num=num-<span class="string">&#x27; &#x27;</span>;<span class="comment">//得到偏移后的值（ASCII字库是从空格开始取模，所以-&#x27; &#x27;就是对应字符的字库）</span></span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;csize;t++)</span><br><span class="line">&#123;   </span><br><span class="line"><span class="keyword">if</span>(size==<span class="number">12</span>)temp=asc2_1206[num][t];  <span class="comment">//调用1206字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size==<span class="number">16</span>)temp=asc2_1608[num][t];<span class="comment">//调用1608字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size==<span class="number">24</span>)temp=asc2_2412[num][t];<span class="comment">//调用2412字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span>;<span class="comment">//没有的字库</span></span><br><span class="line"><span class="keyword">for</span>(t1=<span class="number">0</span>;t1&lt;<span class="number">8</span>;t1++)</span><br><span class="line">&#123;    </span><br><span class="line"><span class="keyword">if</span>(temp&amp;<span class="number">0x80</span>)LCD_Fast_DrawPoint(x,y,POINT_COLOR);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(mode==<span class="number">0</span>)LCD_Fast_DrawPoint(x,y,BACK_COLOR);</span><br><span class="line">temp&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">y++;</span><br><span class="line"><span class="keyword">if</span>(y&gt;=lcddev.height)<span class="keyword">return</span>;<span class="comment">//超区域了</span></span><br><span class="line"><span class="keyword">if</span>((y-y0)==size)</span><br><span class="line">&#123;</span><br><span class="line">y=y0;</span><br><span class="line">x++;</span><br><span class="line"><span class="keyword">if</span>(x&gt;=lcddev.width)<span class="keyword">return</span>;<span class="comment">//超区域了</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;   </span><br><span class="line">&#125;            </span><br><span class="line">&#125;   </span><br><span class="line"><span class="comment">//m^n函数</span></span><br><span class="line"><span class="comment">//返回值:m^n次方.</span></span><br><span class="line">u32 <span class="title function_">LCD_Pow</span><span class="params">(u8 m,u8 n)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 result=<span class="number">1</span>; </span><br><span class="line"><span class="keyword">while</span>(n--)result*=m;    </span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//显示数字,高位为0,则不显示</span></span><br><span class="line"><span class="comment">//x,y :起点坐标 </span></span><br><span class="line"><span class="comment">//len :数字的位数</span></span><br><span class="line"><span class="comment">//size:字体大小</span></span><br><span class="line"><span class="comment">//color:颜色 </span></span><br><span class="line"><span class="comment">//num:数值(0~4294967295); </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowNum</span><span class="params">(u16 x,u16 y,u32 num,u8 len,u8 size)</span></span><br><span class="line">&#123;         </span><br><span class="line">u8 t,temp;</span><br><span class="line">u8 enshow=<span class="number">0</span>;   </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp=(num/LCD_Pow(<span class="number">10</span>,len-t<span class="number">-1</span>))%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(enshow==<span class="number">0</span>&amp;&amp;t&lt;(len<span class="number">-1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">LCD_ShowChar(x+(size/<span class="number">2</span>)*t,y,<span class="string">&#x27; &#x27;</span>,size,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> enshow=<span class="number">1</span>; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"> LCD_ShowChar(x+(size/<span class="number">2</span>)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size,<span class="number">0</span>); </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//显示数字,高位为0,还是显示</span></span><br><span class="line"><span class="comment">//x,y:起点坐标</span></span><br><span class="line"><span class="comment">//num:数值(0~999999999); </span></span><br><span class="line"><span class="comment">//len:长度(即要显示的位数)</span></span><br><span class="line"><span class="comment">//size:字体大小</span></span><br><span class="line"><span class="comment">//mode:</span></span><br><span class="line"><span class="comment">//[7]:0,不填充;1,填充0.</span></span><br><span class="line"><span class="comment">//[6:1]:保留</span></span><br><span class="line"><span class="comment">//[0]:0,非叠加显示;1,叠加显示.</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowxNum</span><span class="params">(u16 x,u16 y,u32 num,u8 len,u8 size,u8 mode)</span></span><br><span class="line">&#123;  </span><br><span class="line">u8 t,temp;</span><br><span class="line">u8 enshow=<span class="number">0</span>;   </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp=(num/LCD_Pow(<span class="number">10</span>,len-t<span class="number">-1</span>))%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(enshow==<span class="number">0</span>&amp;&amp;t&lt;(len<span class="number">-1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mode&amp;<span class="number">0X80</span>)LCD_ShowChar(x+(size/<span class="number">2</span>)*t,y,<span class="string">&#x27;0&#x27;</span>,size,mode&amp;<span class="number">0X01</span>);  </span><br><span class="line"><span class="keyword">else</span> LCD_ShowChar(x+(size/<span class="number">2</span>)*t,y,<span class="string">&#x27; &#x27;</span>,size,mode&amp;<span class="number">0X01</span>);  </span><br><span class="line"> <span class="keyword">continue</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> enshow=<span class="number">1</span>; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"> LCD_ShowChar(x+(size/<span class="number">2</span>)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size,mode&amp;<span class="number">0X01</span>); </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//显示字符串</span></span><br><span class="line"><span class="comment">//x,y:起点坐标</span></span><br><span class="line"><span class="comment">//width,height:区域大小  </span></span><br><span class="line"><span class="comment">//size:字体大小</span></span><br><span class="line"><span class="comment">//*p:字符串起始地址  </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowString</span><span class="params">(u16 x,u16 y,u16 width,u16 height,u8 size,u8 *p)</span></span><br><span class="line">&#123;         </span><br><span class="line">u8 x0=x;</span><br><span class="line">width+=x;</span><br><span class="line">height+=y;</span><br><span class="line">    <span class="keyword">while</span>((*p&lt;=<span class="string">&#x27;~&#x27;</span>)&amp;&amp;(*p&gt;=<span class="string">&#x27; &#x27;</span>))<span class="comment">//判断是不是非法字符!</span></span><br><span class="line">    &#123;       </span><br><span class="line">        <span class="keyword">if</span>(x&gt;=width)&#123;x=x0;y+=size;&#125;</span><br><span class="line">        <span class="keyword">if</span>(y&gt;=height)<span class="keyword">break</span>;<span class="comment">//退出</span></span><br><span class="line">        LCD_ShowChar(x,y,*p,size,<span class="number">0</span>);</span><br><span class="line">        x+=size/<span class="number">2</span>;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="lcdh"><a class="markdownIt-Anchor" href="#lcdh"></a> lcd.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lcd.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LCD_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LCD_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdlib.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment">//LCD重要参数集</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>  </span></span><br><span class="line"><span class="class">&#123;</span>    </span><br><span class="line">u16 width;<span class="comment">//LCD 宽度</span></span><br><span class="line">u16 height;<span class="comment">//LCD 高度</span></span><br><span class="line">u16 id;<span class="comment">//LCD ID</span></span><br><span class="line">u8  dir;<span class="comment">//横屏还是竖屏控制：0，竖屏；1，横屏。</span></span><br><span class="line">u16wramcmd;<span class="comment">//开始写gram指令</span></span><br><span class="line">u16  setxcmd;<span class="comment">//设置x坐标指令</span></span><br><span class="line">u16  setycmd;<span class="comment">//设置y坐标指令 </span></span><br><span class="line">&#125;_lcd_dev;   </span><br><span class="line"></span><br><span class="line"><span class="comment">//LCD参数</span></span><br><span class="line"><span class="keyword">extern</span> _lcd_dev lcddev;<span class="comment">//管理LCD重要参数</span></span><br><span class="line"><span class="comment">//LCD的画笔颜色和背景色   </span></span><br><span class="line"><span class="keyword">extern</span> u16  POINT_COLOR;<span class="comment">//默认红色    </span></span><br><span class="line"><span class="keyword">extern</span> u16  BACK_COLOR; <span class="comment">//背景颜色.默认为白色</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////////////////////// </span></span><br><span class="line"><span class="comment">//-----------------LCD端口定义---------------- </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>LCD_LED PBout(0) <span class="comment">//LCD背光  PB0     </span></span></span><br><span class="line"><span class="comment">//LCD地址结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">vu16 LCD_REG;</span><br><span class="line">vu16 LCD_RAM;</span><br><span class="line">&#125; LCD_TypeDef;</span><br><span class="line"><span class="comment">//使用NOR/SRAM的 Bank1.sector4,地址位HADDR[27,26]=11 A10作为数据命令区分线 </span></span><br><span class="line"><span class="comment">//注意设置时STM32内部会右移一位对其!     </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LCD_BASE        ((u32)(0x6C000000 | 0x000007FE))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LCD             ((LCD_TypeDef *) LCD_BASE)</span></span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//扫描方向定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> L2R_U2D  0 <span class="comment">//从左到右,从上到下</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> L2R_D2U  1 <span class="comment">//从左到右,从下到上</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> R2L_U2D  2 <span class="comment">//从右到左,从上到下</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> R2L_D2U  3 <span class="comment">//从右到左,从下到上</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> U2D_L2R  4 <span class="comment">//从上到下,从左到右</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> U2D_R2L  5 <span class="comment">//从上到下,从右到左</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> D2U_L2R  6 <span class="comment">//从下到上,从左到右</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> D2U_R2L  7 <span class="comment">//从下到上,从右到左 </span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DFT_SCAN_DIR  L2R_U2D  <span class="comment">//默认的扫描方向</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//画笔颜色</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WHITE          0xFFFF</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLACK          0x0000  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLUE          0x001F  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BRED             0XF81F</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GRED  0XFFE0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GBLUE 0X07FF</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RED            0xF800</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAGENTA        0xF81F</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GREEN          0x07E0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CYAN           0x7FFF</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> YELLOW         0xFFE0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BROWN  0XBC40 <span class="comment">//棕色</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BRRED  0XFC07 <span class="comment">//棕红色</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GRAY   0X8430 <span class="comment">//灰色</span></span></span><br><span class="line"><span class="comment">//GUI颜色</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DARKBLUE       0X01CF<span class="comment">//深蓝色</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LIGHTBLUE       0X7D7C<span class="comment">//浅蓝色  </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GRAYBLUE        0X5458 <span class="comment">//灰蓝色</span></span></span><br><span class="line"><span class="comment">//以上三色为PANEL的颜色 </span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LIGHTGREEN      0X841F <span class="comment">//浅绿色</span></span></span><br><span class="line"><span class="comment">//#define LIGHTGRAY        0XEF5B //浅灰色(PANNEL)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LGRAY  0XC618 <span class="comment">//浅灰色(PANNEL),窗体背景色</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LGRAYBLUE        0XA651 <span class="comment">//浅灰蓝色(中间层颜色)</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LBBLUE           0X2B12 <span class="comment">//浅棕蓝色(选择条目的反色)</span></span></span><br><span class="line">      </span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Init</span><span class="params">(<span class="type">void</span>)</span>;   <span class="comment">//初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_DisplayOn</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//开显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_DisplayOff</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//关显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Clear</span><span class="params">(u16 Color)</span>; <span class="comment">//清屏</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_SetCursor</span><span class="params">(u16 Xpos, u16 Ypos)</span>;<span class="comment">//设置光标</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_DrawPoint</span><span class="params">(u16 x,u16 y)</span>;<span class="comment">//画点</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Fast_DrawPoint</span><span class="params">(u16 x,u16 y,u16 color)</span>;<span class="comment">//快速画点</span></span><br><span class="line">u16  <span class="title function_">LCD_ReadPoint</span><span class="params">(u16 x,u16 y)</span>; <span class="comment">//读点 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Draw_Circle</span><span class="params">(u16 x0,u16 y0,u8 r)</span>; <span class="comment">//画圆</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_DrawLine</span><span class="params">(u16 x1, u16 y1, u16 x2, u16 y2)</span>;<span class="comment">//画线</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_DrawRectangle</span><span class="params">(u16 x1, u16 y1, u16 x2, u16 y2)</span>;   <span class="comment">//画矩形</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Fill</span><span class="params">(u16 sx,u16 sy,u16 ex,u16 ey,u16 color)</span>;   <span class="comment">//填充单色</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Color_Fill</span><span class="params">(u16 sx,u16 sy,u16 ex,u16 ey,u16 *color)</span>;<span class="comment">//填充指定颜色</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowChar</span><span class="params">(u16 x,u16 y,u8 num,u8 size,u8 mode)</span>;<span class="comment">//显示一个字符</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowNum</span><span class="params">(u16 x,u16 y,u32 num,u8 len,u8 size)</span>;  <span class="comment">//显示一个数字</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowxNum</span><span class="params">(u16 x,u16 y,u32 num,u8 len,u8 size,u8 mode)</span>;<span class="comment">//显示 数字</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowString</span><span class="params">(u16 x,u16 y,u16 width,u16 height,u8 size,u8 *p)</span>;<span class="comment">//显示一个字符串,12/16字体</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_WriteReg</span><span class="params">(u16 LCD_Reg, u16 LCD_RegValue)</span>;</span><br><span class="line">u16 <span class="title function_">LCD_ReadReg</span><span class="params">(u16 LCD_Reg)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_WriteRAM_Prepare</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_WriteRAM</span><span class="params">(u16 RGB_Code)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_SSD_BackLightSet</span><span class="params">(u8 pwm)</span>;<span class="comment">//SSD1963 背光控制</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Scan_Dir</span><span class="params">(u8 dir)</span>;<span class="comment">//设置屏扫描方向</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Display_Dir</span><span class="params">(u8 dir)</span>;<span class="comment">//设置屏幕显示方向</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Set_Window</span><span class="params">(u16 sx,u16 sy,u16 width,u16 height)</span>;<span class="comment">//设置窗口       </span></span><br><span class="line"><span class="comment">//LCD分辨率设置</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SSD_HOR_RESOLUTION800<span class="comment">//LCD水平分辨率</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SSD_VER_RESOLUTION480<span class="comment">//LCD垂直分辨率</span></span></span><br><span class="line"><span class="comment">//LCD驱动参数设置</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SSD_HOR_PULSE_WIDTH1<span class="comment">//水平脉宽</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SSD_HOR_BACK_PORCH210<span class="comment">//水平前廊</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SSD_HOR_FRONT_PORCH45<span class="comment">//水平后廊</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SSD_VER_PULSE_WIDTH1<span class="comment">//垂直脉宽</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SSD_VER_BACK_PORCH34<span class="comment">//垂直前廊</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SSD_VER_FRONT_PORCH10<span class="comment">//垂直前廊</span></span></span><br><span class="line"><span class="comment">//如下几个参数，自动计算</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SSD_HT(SSD_HOR_RESOLUTION+SSD_HOR_PULSE_WIDTH+SSD_HOR_BACK_PORCH+SSD_HOR_FRONT_PORCH)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SSD_HPS(SSD_HOR_PULSE_WIDTH+SSD_HOR_BACK_PORCH)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SSD_VT (SSD_VER_PULSE_WIDTH+SSD_VER_BACK_PORCH+SSD_VER_FRONT_PORCH+SSD_VER_RESOLUTION)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SSD_VSP (SSD_VER_PULSE_WIDTH+SSD_VER_BACK_PORCH)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  </span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;lcd.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123; </span><br><span class="line"> u8 x=<span class="number">0</span>;</span><br><span class="line">u8 lcd_id[<span class="number">12</span>];<span class="comment">//存放LCD ID字符串</span></span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2); <span class="comment">//设置NVIC中断分组2:2位抢占优先级，2位响应优先级</span></span><br><span class="line">uart_init(<span class="number">115200</span>); <span class="comment">//串口初始化为115200</span></span><br><span class="line"> LED_Init();     <span class="comment">//LED端口初始化</span></span><br><span class="line">LCD_Init();</span><br><span class="line">POINT_COLOR=RED;</span><br><span class="line"><span class="built_in">sprintf</span>((<span class="type">char</span>*)lcd_id,<span class="string">&quot;LCD ID:%04X&quot;</span>,lcddev.id);<span class="comment">//将LCD ID打印到lcd_id数组。 </span></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">switch</span>(x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:LCD_Clear(WHITE);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:LCD_Clear(BLACK);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:LCD_Clear(BLUE);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:LCD_Clear(RED);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:LCD_Clear(MAGENTA);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:LCD_Clear(GREEN);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:LCD_Clear(CYAN);<span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:LCD_Clear(YELLOW);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:LCD_Clear(BRRED);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:LCD_Clear(GRAY);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:LCD_Clear(LGRAY);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:LCD_Clear(BROWN);<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">POINT_COLOR=RED;  </span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">40</span>,<span class="number">210</span>,<span class="number">24</span>,<span class="number">24</span>,<span class="string">&quot;Elite STM32F1 ^_^&quot;</span>); </span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">70</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;TFTLCD TEST&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">90</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;ATOM@ALIENTEK&quot;</span>);</span><br><span class="line"> LCD_ShowString(<span class="number">30</span>,<span class="number">110</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,lcd_id);<span class="comment">//显示LCD ID       </span></span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">130</span>,<span class="number">200</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="string">&quot;2015/1/14&quot;</span>);       </span><br><span class="line">    x++;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">12</span>)x=<span class="number">0</span>;</span><br><span class="line">LED0=!LED0;    </span><br><span class="line">delay_ms(<span class="number">1000</span>);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="代码片段分析"><a class="markdownIt-Anchor" href="#代码片段分析"></a> 代码片段分析</h2><p>略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（12）OLED显示</title>
    <link href="https://sirius-tblog.github.io/posts/3728621497.html"/>
    <id>https://sirius-tblog.github.io/posts/3728621497.html</id>
    <published>2022-11-08T02:59:18.000Z</published>
    <updated>2023-04-05T14:19:45.345Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作，实现跑马灯样式实验。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a001b03c01.jpg" alt="" title="硬件电路连接" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>beep</td><td>output</td><td>PB8</td><td>LED0驱动</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件驱动GPIO口。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="oledc"><a class="markdownIt-Anchor" href="#oledc"></a> oled.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// oled.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdlib.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oledfont.h&quot;</span>   </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//OLED的显存</span></span><br><span class="line"><span class="comment">//存放格式如下.</span></span><br><span class="line"><span class="comment">//[0]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[1]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[2]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[3]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[4]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[5]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[6]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[7]0 1 2 3 ... 127    </span></span><br><span class="line">u8 OLED_GRAM[<span class="number">128</span>][<span class="number">8</span>]; </span><br><span class="line"></span><br><span class="line"><span class="comment">//更新显存到LCD </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Refresh_Gram</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (<span class="number">0xb0</span>+i,OLED_CMD);    <span class="comment">//设置页地址（0~7）</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x00</span>,OLED_CMD);      <span class="comment">//设置显示位置—列低地址</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x10</span>,OLED_CMD);      <span class="comment">//设置显示位置—列高地址   </span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)OLED_WR_Byte(OLED_GRAM[n][i],OLED_DATA); </span><br><span class="line">&#125;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> OLED_MODE==1<span class="comment">//8080并口 </span></span></span><br><span class="line"><span class="comment">//向SSD1306写入一个字节。</span></span><br><span class="line"><span class="comment">//dat:要写入的数据/命令</span></span><br><span class="line"><span class="comment">//cmd:数据/命令标志 0,表示命令;1,表示数据;</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(u8 dat,u8 cmd)</span></span><br><span class="line">&#123;</span><br><span class="line">DATAOUT(dat);    </span><br><span class="line"> OLED_RS=cmd;</span><br><span class="line">OLED_CS=<span class="number">0</span>;   </span><br><span class="line">OLED_WR=<span class="number">0</span>; </span><br><span class="line">OLED_WR=<span class="number">1</span>;</span><br><span class="line">OLED_CS=<span class="number">1</span>;  </span><br><span class="line">OLED_RS=<span class="number">1</span>; </span><br><span class="line">&#125;         </span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="comment">//向SSD1306写入一个字节。</span></span><br><span class="line"><span class="comment">//dat:要写入的数据/命令</span></span><br><span class="line"><span class="comment">//cmd:数据/命令标志 0,表示命令;1,表示数据;</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(u8 dat,u8 cmd)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 i;  </span><br><span class="line">OLED_RS=cmd; <span class="comment">//写命令 </span></span><br><span class="line">OLED_CS=<span class="number">0</span>;  </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">&#123;  </span><br><span class="line">OLED_SCLK=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(dat&amp;<span class="number">0x80</span>)OLED_SDIN=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> OLED_SDIN=<span class="number">0</span>;</span><br><span class="line">OLED_SCLK=<span class="number">1</span>;</span><br><span class="line">dat&lt;&lt;=<span class="number">1</span>;   </span><br><span class="line">&#125; </span><br><span class="line">OLED_CS=<span class="number">1</span>;  </span><br><span class="line">OLED_RS=<span class="number">1</span>;     </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//开启OLED显示    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_On</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X14</span>,OLED_CMD);  <span class="comment">//DCDC ON</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0XAF</span>,OLED_CMD);  <span class="comment">//DISPLAY ON</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关闭OLED显示     </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_Off</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X10</span>,OLED_CMD);  <span class="comment">//DCDC OFF</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0XAE</span>,OLED_CMD);  <span class="comment">//DISPLAY OFF</span></span><br><span class="line">&#125;    </span><br><span class="line"><span class="comment">//清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!  </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;  </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)<span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)OLED_GRAM[n][i]=<span class="number">0X00</span>;  </span><br><span class="line">OLED_Refresh_Gram();<span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//画点 </span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63</span></span><br><span class="line"><span class="comment">//t:1 填充 0,清空   </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawPoint</span><span class="params">(u8 x,u8 y,u8 t)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 pos,bx,temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">127</span>||y&gt;<span class="number">63</span>)<span class="keyword">return</span>;<span class="comment">//超出范围了.</span></span><br><span class="line">pos=<span class="number">7</span>-y/<span class="number">8</span>;</span><br><span class="line">bx=y%<span class="number">8</span>;</span><br><span class="line">temp=<span class="number">1</span>&lt;&lt;(<span class="number">7</span>-bx);</span><br><span class="line"><span class="keyword">if</span>(t)OLED_GRAM[x][pos]|=temp;</span><br><span class="line"><span class="keyword">else</span> OLED_GRAM[x][pos]&amp;=~temp;    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//x1,y1,x2,y2 填充区域的对角坐标</span></span><br><span class="line"><span class="comment">//确保x1&lt;=x2;y1&lt;=y2 0&lt;=x1&lt;=127 0&lt;=y1&lt;=63  </span></span><br><span class="line"><span class="comment">//dot:0,清空;1,填充  </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Fill</span><span class="params">(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">u8 x,y;  </span><br><span class="line"><span class="keyword">for</span>(x=x1;x&lt;=x2;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(y=y1;y&lt;=y2;y++)OLED_DrawPoint(x,y,dot);</span><br><span class="line">&#125;    </span><br><span class="line">OLED_Refresh_Gram();<span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在指定位置显示一个字符,包括部分字符</span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63</span></span><br><span class="line"><span class="comment">//mode:0,反白显示;1,正常显示 </span></span><br><span class="line"><span class="comment">//size:选择字体 12/16/24</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 size,u8 mode)</span></span><br><span class="line">&#123;          </span><br><span class="line">u8 temp,t,t1;</span><br><span class="line">u8 y0=y;</span><br><span class="line">u8 csize=(size/<span class="number">8</span>+((size%<span class="number">8</span>)?<span class="number">1</span>:<span class="number">0</span>))*(size/<span class="number">2</span>);<span class="comment">//得到字体一个字符对应点阵集所占的字节数</span></span><br><span class="line">chr=chr-<span class="string">&#x27; &#x27;</span>;<span class="comment">//得到偏移后的值 </span></span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;csize;t++)</span><br><span class="line">    &#123;   </span><br><span class="line"><span class="keyword">if</span>(size==<span class="number">12</span>)temp=asc2_1206[chr][t];  <span class="comment">//调用1206字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size==<span class="number">16</span>)temp=asc2_1608[chr][t];<span class="comment">//调用1608字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size==<span class="number">24</span>)temp=asc2_2412[chr][t];<span class="comment">//调用2412字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span>;<span class="comment">//没有的字库</span></span><br><span class="line">        <span class="keyword">for</span>(t1=<span class="number">0</span>;t1&lt;<span class="number">8</span>;t1++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp&amp;<span class="number">0x80</span>)OLED_DrawPoint(x,y,mode);</span><br><span class="line"><span class="keyword">else</span> OLED_DrawPoint(x,y,!mode);</span><br><span class="line">temp&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">y++;</span><br><span class="line"><span class="keyword">if</span>((y-y0)==size)</span><br><span class="line">&#123;</span><br><span class="line">y=y0;</span><br><span class="line">x++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;   </span><br><span class="line">    &#125;          </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//m^n函数</span></span><br><span class="line">u32 <span class="title function_">mypow</span><span class="params">(u8 m,u8 n)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 result=<span class="number">1</span>; </span><br><span class="line"><span class="keyword">while</span>(n--)result*=m;    </span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//显示2个数字</span></span><br><span class="line"><span class="comment">//x,y :起点坐标 </span></span><br><span class="line"><span class="comment">//len :数字的位数</span></span><br><span class="line"><span class="comment">//size:字体大小</span></span><br><span class="line"><span class="comment">//mode:模式0,填充模式;1,叠加模式</span></span><br><span class="line"><span class="comment">//num:数值(0~4294967295);   </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size)</span></span><br><span class="line">&#123;         </span><br><span class="line">u8 t,temp;</span><br><span class="line">u8 enshow=<span class="number">0</span>;   </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp=(num/mypow(<span class="number">10</span>,len-t<span class="number">-1</span>))%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(enshow==<span class="number">0</span>&amp;&amp;t&lt;(len<span class="number">-1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(x+(size/<span class="number">2</span>)*t,y,<span class="string">&#x27; &#x27;</span>,size,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> enshow=<span class="number">1</span>; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"> OLED_ShowChar(x+(size/<span class="number">2</span>)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size,<span class="number">1</span>); </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//显示字符串</span></span><br><span class="line"><span class="comment">//x,y:起点坐标  </span></span><br><span class="line"><span class="comment">//size:字体大小 </span></span><br><span class="line"><span class="comment">//*p:字符串起始地址 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y,<span class="type">const</span> u8 *p,u8 size)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>((*p&lt;=<span class="string">&#x27;~&#x27;</span>)&amp;&amp;(*p&gt;=<span class="string">&#x27; &#x27;</span>))<span class="comment">//判断是不是非法字符!</span></span><br><span class="line">    &#123;       </span><br><span class="line">        <span class="keyword">if</span>(x&gt;(<span class="number">128</span>-(size/<span class="number">2</span>)))&#123;x=<span class="number">0</span>;y+=size;&#125;</span><br><span class="line">        <span class="keyword">if</span>(y&gt;(<span class="number">64</span>-size))&#123;y=x=<span class="number">0</span>;OLED_Clear();&#125;</span><br><span class="line">        OLED_ShowChar(x,y,*p,size,<span class="number">1</span>); </span><br><span class="line">        x+=size/<span class="number">2</span>;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">&#125;   </span><br><span class="line"><span class="comment">//初始化SSD1306    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line"> </span><br><span class="line"> GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line"> </span><br><span class="line"> RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC|RCC_APB2Periph_GPIOD|RCC_APB2Periph_GPIOG, ENABLE); <span class="comment">//使能PC,D,G端口时钟</span></span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3|GPIO_Pin_6; <span class="comment">//PD3,PD6推挽输出  </span></span><br><span class="line"> GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;  <span class="comment">//推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<span class="comment">//速度50MHz</span></span><br><span class="line"> GPIO_Init(GPIOD, &amp;GPIO_InitStructure);  <span class="comment">//初始化GPIOD3,6</span></span><br><span class="line"> GPIO_SetBits(GPIOD,GPIO_Pin_3|GPIO_Pin_6);<span class="comment">//PD3,PD6 输出高</span></span><br><span class="line"></span><br><span class="line"> <span class="meta">#<span class="keyword">if</span> OLED_MODE==1</span></span><br><span class="line"> </span><br><span class="line"> GPIO_InitStructure.GPIO_Pin =<span class="number">0xFF</span>; <span class="comment">//PC0~7 OUT推挽输出</span></span><br><span class="line"> GPIO_Init(GPIOC, &amp;GPIO_InitStructure);</span><br><span class="line"> GPIO_SetBits(GPIOC,<span class="number">0xFF</span>); <span class="comment">//PC0~7输出高</span></span><br><span class="line"></span><br><span class="line"> GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13|GPIO_Pin_14|GPIO_Pin_15; <span class="comment">//PG13,14,15 OUT推挽输出</span></span><br><span class="line"> GPIO_Init(GPIOG, &amp;GPIO_InitStructure);</span><br><span class="line"> GPIO_SetBits(GPIOG,GPIO_Pin_13|GPIO_Pin_14|GPIO_Pin_15); <span class="comment">//PG13,14,15 OUT  输出高</span></span><br><span class="line"></span><br><span class="line"> <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"> GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0|GPIO_Pin_1; <span class="comment">//PC0,1 OUT推挽输出</span></span><br><span class="line"> GPIO_Init(GPIOC, &amp;GPIO_InitStructure);</span><br><span class="line"> GPIO_SetBits(GPIOC,GPIO_Pin_0|GPIO_Pin_1); <span class="comment">//PC0,1 OUT  输出高</span></span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_15; <span class="comment">//PG15 OUT推挽输出  RST</span></span><br><span class="line"> GPIO_Init(GPIOG, &amp;GPIO_InitStructure);</span><br><span class="line"> GPIO_SetBits(GPIOG,GPIO_Pin_15); <span class="comment">//PG15 OUT  输出高</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">OLED_CS=<span class="number">1</span>;</span><br><span class="line">OLED_RS=<span class="number">1</span>; </span><br><span class="line"></span><br><span class="line">OLED_RST=<span class="number">0</span>;</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">OLED_RST=<span class="number">1</span>; </span><br><span class="line">  </span><br><span class="line">OLED_WR_Byte(<span class="number">0xAE</span>,OLED_CMD); <span class="comment">//关闭显示</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD5</span>,OLED_CMD); <span class="comment">//设置时钟分频因子,震荡频率</span></span><br><span class="line">OLED_WR_Byte(<span class="number">80</span>,OLED_CMD);   <span class="comment">//[3:0],分频因子;[7:4],震荡频率</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA8</span>,OLED_CMD); <span class="comment">//设置驱动路数</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X3F</span>,OLED_CMD); <span class="comment">//默认0X3F(1/64) </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD3</span>,OLED_CMD); <span class="comment">//设置显示偏移</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X00</span>,OLED_CMD); <span class="comment">//默认为0</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0x40</span>,OLED_CMD); <span class="comment">//设置显示开始行 [5:0],行数.</span></span><br><span class="line">    </span><br><span class="line">OLED_WR_Byte(<span class="number">0x8D</span>,OLED_CMD); <span class="comment">//电荷泵设置</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x14</span>,OLED_CMD); <span class="comment">//bit2，开启/关闭</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x20</span>,OLED_CMD); <span class="comment">//设置内存地址模式</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x02</span>,OLED_CMD); <span class="comment">//[1:0],00，列地址模式;01，行地址模式;10,页地址模式;默认10;</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA1</span>,OLED_CMD); <span class="comment">//段重定义设置,bit0:0,0-&gt;0;1,0-&gt;127;</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xC0</span>,OLED_CMD); <span class="comment">//设置COM扫描方向;bit3:0,普通模式;1,重定义模式 COM[N-1]-&gt;COM0;N:驱动路数</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xDA</span>,OLED_CMD); <span class="comment">//设置COM硬件引脚配置</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x12</span>,OLED_CMD); <span class="comment">//[5:4]配置</span></span><br><span class="line"> </span><br><span class="line">OLED_WR_Byte(<span class="number">0x81</span>,OLED_CMD); <span class="comment">//对比度设置</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xEF</span>,OLED_CMD); <span class="comment">//1~255;默认0X7F (亮度设置,越大越亮)</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD9</span>,OLED_CMD); <span class="comment">//设置预充电周期</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xf1</span>,OLED_CMD); <span class="comment">//[3:0],PHASE 1;[7:4],PHASE 2;</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xDB</span>,OLED_CMD); <span class="comment">//设置VCOMH 电压倍率</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x30</span>,OLED_CMD); <span class="comment">//[6:4] 000,0.65*vcc;001,0.77*vcc;011,0.83*vcc;</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA4</span>,OLED_CMD); <span class="comment">//全局显示开启;bit0:1,开启;0,关闭;(白屏/黑屏)</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD); <span class="comment">//设置显示方式;bit0:1,反相显示;0,正常显示       </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xAF</span>,OLED_CMD); <span class="comment">//开启显示 </span></span><br><span class="line">OLED_Clear();</span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="oledh"><a class="markdownIt-Anchor" href="#oledh"></a> oled.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// oled.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __OLED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __OLED_H   </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdlib.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//OLED模式设置</span></span><br><span class="line"><span class="comment">//0: 4线串行模式  （模块的BS1，BS2均接GND）</span></span><br><span class="line"><span class="comment">//1: 并行8080模式 （模块的BS1，BS2均接VCC）</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_MODE 1 </span></span><br><span class="line">      </span><br><span class="line"><span class="comment">//---------------------------OLED端口定义--------------------------     </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_CS  PDout(6)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_RST PGout(15) </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_RS  PDout(3)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_WR  PGout(14)  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_RD  PGout(13)   </span></span><br><span class="line"><span class="comment">//PC0~7,作为数据线</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DATAOUT(x) GPIO_Write(GPIOC,x);<span class="comment">//输出  </span></span></span><br><span class="line">  </span><br><span class="line"><span class="comment">//使用4线串行接口时使用 </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_SCLK PCout(0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_SDIN PCout(1)</span></span><br><span class="line">     </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_CMD  0<span class="comment">//写命令</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_DATA 1<span class="comment">//写数据</span></span></span><br><span class="line"><span class="comment">//OLED控制用函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(u8 dat,u8 cmd)</span>;    </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_On</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_Off</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Refresh_Gram</span><span class="params">(<span class="type">void</span>)</span>;      </span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawPoint</span><span class="params">(u8 x,u8 y,u8 t)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Fill</span><span class="params">(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 size,u8 mode)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y,<span class="type">const</span> u8 *p,u8 size)</span>; </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  </span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;u8 t;</span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2); <span class="comment">//设置NVIC中断分组2:2位抢占优先级，2位响应优先级</span></span><br><span class="line"> LED_Init();     <span class="comment">//LED端口初始化</span></span><br><span class="line">OLED_Init();<span class="comment">//初始化OLED      </span></span><br><span class="line">  OLED_ShowString(<span class="number">0</span>,<span class="number">0</span>,<span class="string">&quot;ALIENTEK&quot;</span>,<span class="number">24</span>);  </span><br><span class="line">OLED_ShowString(<span class="number">0</span>,<span class="number">24</span>, <span class="string">&quot;0.96&#x27; OLED TEST&quot;</span>,<span class="number">16</span>);  </span><br><span class="line"> OLED_ShowString(<span class="number">0</span>,<span class="number">40</span>,<span class="string">&quot;ATOM 2015/1/14&quot;</span>,<span class="number">12</span>);  </span><br><span class="line"> OLED_ShowString(<span class="number">0</span>,<span class="number">52</span>,<span class="string">&quot;ASCII:&quot;</span>,<span class="number">12</span>);  </span><br><span class="line"> OLED_ShowString(<span class="number">64</span>,<span class="number">52</span>,<span class="string">&quot;CODE:&quot;</span>,<span class="number">12</span>);  </span><br><span class="line">  </span><br><span class="line">OLED_Refresh_Gram();<span class="comment">//更新显示到OLED </span></span><br><span class="line">t=<span class="string">&#x27; &#x27;</span>;  </span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(<span class="number">48</span>,<span class="number">48</span>,t,<span class="number">16</span>,<span class="number">1</span>);<span class="comment">//显示ASCII字符   </span></span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line">t++;</span><br><span class="line"><span class="keyword">if</span>(t&gt;<span class="string">&#x27;~&#x27;</span>)t=<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">OLED_ShowNum(<span class="number">103</span>,<span class="number">48</span>,t,<span class="number">3</span>,<span class="number">16</span>);<span class="comment">//显示ASCII字符的码值 </span></span><br><span class="line">delay_ms(<span class="number">500</span>);</span><br><span class="line">LED0=!LED0;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="代码片段分析"><a class="markdownIt-Anchor" href="#代码片段分析"></a> 代码片段分析</h2><p>略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（11）触摸按键</title>
    <link href="https://sirius-tblog.github.io/posts/2323345083.html"/>
    <id>https://sirius-tblog.github.io/posts/2323345083.html</id>
    <published>2022-11-08T02:39:18.000Z</published>
    <updated>2023-04-05T14:19:36.208Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作，实现跑马灯样式实验。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a001b03c01.jpg" alt="" title="硬件电路连接" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>beep</td><td>output</td><td>PB8</td><td>LED0驱动</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件驱动GPIO口。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="tpadc"><a class="markdownIt-Anchor" href="#tpadc"></a> tpad.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tpad.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tpad.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span>    </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TPAD_ARR_MAX_VAL 0XFFFF<span class="comment">//最大的ARR值</span></span></span><br><span class="line">vu16 tpad_default_val=<span class="number">0</span>;<span class="comment">//空载的时候(没有手按下),计数器需要的时间</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化触摸按键</span></span><br><span class="line"><span class="comment">//获得空载的时候触摸按键的取值.</span></span><br><span class="line"><span class="comment">//返回值:0,初始化成功;1,初始化失败</span></span><br><span class="line">u8 <span class="title function_">TPAD_Init</span><span class="params">(u8 psc)</span></span><br><span class="line">&#123;</span><br><span class="line">u16 buf[<span class="number">10</span>];</span><br><span class="line">u16 temp;</span><br><span class="line">u8 j,i;</span><br><span class="line">TIM5_CH2_Cap_Init(TPAD_ARR_MAX_VAL,psc<span class="number">-1</span>);<span class="comment">//以1Mhz的频率计数 </span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)<span class="comment">//连续读取10次</span></span><br><span class="line">&#123; </span><br><span class="line">buf[i]=TPAD_Get_Val();</span><br><span class="line">delay_ms(<span class="number">10</span>);    </span><br><span class="line">&#125;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)<span class="comment">//排序</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;<span class="number">10</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(buf[i]&gt;buf[j])<span class="comment">//升序排列</span></span><br><span class="line">&#123;</span><br><span class="line">temp=buf[i];</span><br><span class="line">buf[i]=buf[j];</span><br><span class="line">buf[j]=temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;<span class="number">8</span>;i++)temp+=buf[i];<span class="comment">//取中间的6个数据进行平均</span></span><br><span class="line">tpad_default_val=temp/<span class="number">6</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;tpad_default_val:%d\r\n&quot;</span>,tpad_default_val);</span><br><span class="line"><span class="keyword">if</span>(tpad_default_val&gt;TPAD_ARR_MAX_VAL/<span class="number">2</span>)<span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//初始化遇到超过TPAD_ARR_MAX_VAL/2的数值,不正常!</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;            </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//复位一次</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TPAD_Reset</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  GPIO_InitTypeDef  GPIO_InitStructure; </span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE); <span class="comment">//使能PA端口时钟</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置GPIOA.1为推挽使出</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1; <span class="comment">//PA1 端口配置</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;  <span class="comment">//推挽输出</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"> GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"> GPIO_ResetBits(GPIOA,GPIO_Pin_1); <span class="comment">//PA.1输出0,放电</span></span><br><span class="line"></span><br><span class="line">delay_ms(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">TIM_SetCounter(TIM5,<span class="number">0</span>);<span class="comment">//归0</span></span><br><span class="line">TIM_ClearITPendingBit(TIM5, TIM_IT_CC2|TIM_IT_Update); <span class="comment">//清除中断标志</span></span><br><span class="line"><span class="comment">//设置GPIOA.1为浮空输入</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IN_FLOATING; <span class="comment">//浮空输入</span></span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//得到定时器捕获值</span></span><br><span class="line"><span class="comment">//如果超时,则直接返回定时器的计数值.</span></span><br><span class="line">u16 <span class="title function_">TPAD_Get_Val</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;   </span><br><span class="line">TPAD_Reset();</span><br><span class="line"><span class="keyword">while</span>(TIM_GetFlagStatus(TIM5, TIM_IT_CC2) == RESET)<span class="comment">//等待捕获上升沿</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(TIM_GetCounter(TIM5)&gt;TPAD_ARR_MAX_VAL<span class="number">-500</span>)<span class="keyword">return</span> TIM_GetCounter(TIM5);<span class="comment">//超时了,直接返回CNT的值</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">return</span> TIM_GetCapture2(TIM5);  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//读取n次,取最大值</span></span><br><span class="line"><span class="comment">//n：连续获取的次数</span></span><br><span class="line"><span class="comment">//返回值：n次读数里面读到的最大读数值</span></span><br><span class="line">u16 <span class="title function_">TPAD_Get_MaxVal</span><span class="params">(u8 n)</span></span><br><span class="line">&#123;</span><br><span class="line">u16 temp=<span class="number">0</span>;</span><br><span class="line">u16 res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line">&#123;</span><br><span class="line">temp=TPAD_Get_Val();<span class="comment">//得到一次值</span></span><br><span class="line"><span class="keyword">if</span>(temp&gt;res)res=temp;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//扫描触摸按键</span></span><br><span class="line"><span class="comment">//mode:0,不支持连续触发(按下一次必须松开才能按下一次);1,支持连续触发(可以一直按下)</span></span><br><span class="line"><span class="comment">//返回值:0,没有按下;1,有按下;  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TPAD_GATE_VAL 100<span class="comment">//触摸的门限值,也就是必须大于tpad_default_val+TPAD_GATE_VAL,才认为是有效触摸.</span></span></span><br><span class="line">u8 <span class="title function_">TPAD_Scan</span><span class="params">(u8 mode)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> u8 keyen=<span class="number">0</span>;<span class="comment">//0,可以开始检测;&gt;0,还不能开始检测 </span></span><br><span class="line">u8 res=<span class="number">0</span>;</span><br><span class="line">u8 sample=<span class="number">3</span>;<span class="comment">//默认采样次数为3次 </span></span><br><span class="line">u16 rval;</span><br><span class="line"><span class="keyword">if</span>(mode)</span><br><span class="line">&#123;</span><br><span class="line">sample=<span class="number">6</span>;<span class="comment">//支持连按的时候，设置采样次数为6次</span></span><br><span class="line">keyen=<span class="number">0</span>;<span class="comment">//支持连按  </span></span><br><span class="line">&#125;</span><br><span class="line">rval=TPAD_Get_MaxVal(sample); </span><br><span class="line"><span class="keyword">if</span>(rval&gt;(tpad_default_val+TPAD_GATE_VAL))<span class="comment">//大于tpad_default_val+TPAD_GATE_VAL,有效</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span>(keyen==<span class="number">0</span>)res=<span class="number">1</span>;<span class="comment">//keyen==0,有效 </span></span><br><span class="line"><span class="comment">//printf(&quot;r:%d\r\n&quot;,rval);            </span></span><br><span class="line">keyen=<span class="number">3</span>;<span class="comment">//至少要再过3次之后才能按键有效   </span></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(keyen)keyen--;                  </span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定时器2通道2输入捕获配置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM5_CH2_Cap_Init</span><span class="params">(u16 arr,u16 psc)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_InitTypeDef  GPIO_InitStructure; </span><br><span class="line">   TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</span><br><span class="line">TIM_ICInitTypeDef  TIM5_ICInitStructure;</span><br><span class="line"></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM5, ENABLE); <span class="comment">//使能TIM5时钟</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE); <span class="comment">//使能PA端口时钟</span></span><br><span class="line"><span class="comment">//设置GPIOA.1为浮空输入</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1; <span class="comment">//PA1 端口配置</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<span class="comment">//速度50MHz</span></span><br><span class="line">   GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IN_FLOATING; <span class="comment">//浮空输入</span></span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure); <span class="comment">//设置为浮空输入</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//初始化TIM5  </span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Period = arr; <span class="comment">//设定计数器自动重装值   </span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler =psc; <span class="comment">//预分频器    </span></span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; <span class="comment">//设置时钟分割:TDTS = Tck_tim</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  <span class="comment">//TIM向上计数模式</span></span><br><span class="line">TIM_TimeBaseInit(TIM5, &amp;TIM_TimeBaseStructure); <span class="comment">//根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位</span></span><br><span class="line"><span class="comment">//初始化通道2 </span></span><br><span class="line">  TIM5_ICInitStructure.TIM_Channel = TIM_Channel_2; <span class="comment">//CC1S=01 选择输入端 IC2映射到TI5上</span></span><br><span class="line">  TIM5_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;<span class="comment">//上升沿捕获</span></span><br><span class="line">  TIM5_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; </span><br><span class="line">  TIM5_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1; <span class="comment">//配置输入分频,不分频 </span></span><br><span class="line">  TIM5_ICInitStructure.TIM_ICFilter = <span class="number">0x03</span>;<span class="comment">//IC2F=0011 配置输入滤波器 8个定时器时钟周期滤波</span></span><br><span class="line">  TIM_ICInit(TIM5, &amp;TIM5_ICInitStructure);<span class="comment">//初始化I5 IC2</span></span><br><span class="line"></span><br><span class="line">    TIM_Cmd(TIM5,ENABLE ); <span class="comment">//使能定时器5</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="tpadh"><a class="markdownIt-Anchor" href="#tpadh"></a> tpad.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tpad.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __TPAD_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __TPAD_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> vu16 tpad_default_val;</span><br><span class="line">       </span><br><span class="line"><span class="type">void</span> <span class="title function_">TPAD_Reset</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line">u16  <span class="title function_">TPAD_Get_Val</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line">u16 <span class="title function_">TPAD_Get_MaxVal</span><span class="params">(u8 n)</span>;</span><br><span class="line">u8   <span class="title function_">TPAD_Init</span><span class="params">(u8 psc)</span>;</span><br><span class="line">u8   <span class="title function_">TPAD_Scan</span><span class="params">(u8 mode)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM5_CH2_Cap_Init</span><span class="params">(u16 arr,u16 psc)</span>;   </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tpad.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line"> u8 t=<span class="number">0</span>;  </span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//设置NVIC中断分组2:2位抢占优先级，2位响应优先级</span></span><br><span class="line">uart_init(<span class="number">115200</span>); <span class="comment">//串口初始化为115200</span></span><br><span class="line"> LED_Init();     <span class="comment">//LED端口初始化</span></span><br><span class="line">  TPAD_Init(<span class="number">6</span>);<span class="comment">//初始化触摸按键</span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;     </span><br><span class="line"> <span class="keyword">if</span>(TPAD_Scan(<span class="number">0</span>))<span class="comment">//成功捕获到了一次上升沿(此函数执行时间至少15ms)</span></span><br><span class="line">&#123;</span><br><span class="line">LED1=!LED1;<span class="comment">//LED1取反</span></span><br><span class="line">&#125;</span><br><span class="line">t++;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">15</span>) </span><br><span class="line">&#123;</span><br><span class="line">t=<span class="number">0</span>;</span><br><span class="line">LED0=!LED0;<span class="comment">//LED0取反,提示程序正在运行</span></span><br><span class="line">&#125;</span><br><span class="line">delay_ms(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="代码片段分析"><a class="markdownIt-Anchor" href="#代码片段分析"></a> 代码片段分析</h2><p>略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（10）输入捕获</title>
    <link href="https://sirius-tblog.github.io/posts/1244416953.html"/>
    <id>https://sirius-tblog.github.io/posts/1244416953.html</id>
    <published>2022-11-08T02:19:18.000Z</published>
    <updated>2023-04-05T14:19:19.975Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作，实现跑马灯样式实验。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a001b03c01.jpg" alt="" title="硬件电路连接" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>beep</td><td>output</td><td>PB8</td><td>LED0驱动</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件驱动GPIO口。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="timerc"><a class="markdownIt-Anchor" href="#timerc"></a> timer.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// timer.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;timer.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//通用定时器中断初始化</span></span><br><span class="line"><span class="comment">//这里时钟选择为APB1的2倍，而APB1为36M</span></span><br><span class="line"><span class="comment">//arr：自动重装值。</span></span><br><span class="line"><span class="comment">//psc：时钟预分频数</span></span><br><span class="line"><span class="comment">//这里使用的是定时器3!</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_Int_Init</span><span class="params">(u16 arr,u16 psc)</span></span><br><span class="line">&#123;</span><br><span class="line">    TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); <span class="comment">//时钟使能</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseStructure.TIM_Period = arr; <span class="comment">//设置在下一个更新事件装入活动的自动重装载寄存器周期的值 计数到5000为500ms</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler =psc; <span class="comment">//设置用来作为TIMx时钟频率除数的预分频值  10Khz的计数频率  </span></span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>; <span class="comment">//设置时钟分割:TDTS = Tck_tim</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  <span class="comment">//TIM向上计数模式</span></span><br><span class="line">TIM_TimeBaseInit(TIM3, &amp;TIM_TimeBaseStructure); <span class="comment">//根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位</span></span><br><span class="line"> </span><br><span class="line">TIM_ITConfig(  <span class="comment">//使能或者失能指定的TIM中断</span></span><br><span class="line">TIM3, <span class="comment">//TIM2</span></span><br><span class="line">TIM_IT_Update  |  <span class="comment">//TIM 中断源</span></span><br><span class="line">TIM_IT_Trigger,   <span class="comment">//TIM 触发中断源 </span></span><br><span class="line">ENABLE  <span class="comment">//使能</span></span><br><span class="line">);</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;  <span class="comment">//TIM3中断</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0</span>;  <span class="comment">//先占优先级0级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">3</span>;  <span class="comment">//从优先级3级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; <span class="comment">//IRQ通道被使能</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);  <span class="comment">//根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器</span></span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM3, ENABLE);  <span class="comment">//使能TIMx外设</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>   <span class="comment">//TIM3中断</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET) <span class="comment">//检查指定的TIM中断发生与否:TIM 中断源 </span></span><br><span class="line">&#123;</span><br><span class="line">TIM_ClearITPendingBit(TIM3, TIM_IT_Update  );  <span class="comment">//清除TIMx的中断待处理位:TIM 中断源 </span></span><br><span class="line">LED1=!LED1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//PWM输出初始化</span></span><br><span class="line"><span class="comment">//arr：自动重装值</span></span><br><span class="line"><span class="comment">//psc：时钟预分频数</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_PWM_Init</span><span class="params">(u16 arr,u16 psc)</span></span><br><span class="line">&#123;  </span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</span><br><span class="line">TIM_OCInitTypeDef  TIM_OCInitStructure;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);</span><br><span class="line"> RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB  | RCC_APB2Periph_AFIO, ENABLE);  <span class="comment">//使能GPIO外设和AFIO复用功能模块时钟使能</span></span><br><span class="line"></span><br><span class="line">GPIO_PinRemapConfig(GPIO_PartialRemap_TIM3, ENABLE); <span class="comment">//Timer3部分重映射  TIM3_CH2-&gt;PB5                                                                        //用于TIM3的CH2输出的PWM通过该LED显示</span></span><br><span class="line"> </span><br><span class="line">   <span class="comment">//设置该引脚为复用输出功能,输出TIM3 CH2的PWM脉冲波形</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5; <span class="comment">//TIM_CH2</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  <span class="comment">//复用推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class="line"><span class="comment">//GPIO_WriteBit(GPIOA, GPIO_Pin_7,Bit_SET); // PA7上拉</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseStructure.TIM_Period = arr; <span class="comment">//设置在下一个更新事件装入活动的自动重装载寄存器周期的值 80K</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler =psc; <span class="comment">//设置用来作为TIMx时钟频率除数的预分频值  不分频</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>; <span class="comment">//设置时钟分割:TDTS = Tck_tim</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  <span class="comment">//TIM向上计数模式</span></span><br><span class="line">TIM_TimeBaseInit(TIM3, &amp;TIM_TimeBaseStructure); <span class="comment">//根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM2; <span class="comment">//选择定时器模式:TIM脉冲宽度调制模式2</span></span><br><span class="line">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable; <span class="comment">//比较输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>; <span class="comment">//设置待装入捕获比较寄存器的脉冲值</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; <span class="comment">//输出极性:TIM输出比较极性高</span></span><br><span class="line">TIM_OC2Init(TIM3, &amp;TIM_OCInitStructure);  <span class="comment">//根据TIM_OCInitStruct中指定的参数初始化外设TIMx</span></span><br><span class="line">TIM_OC2PreloadConfig(TIM3, TIM_OCPreload_Enable);  <span class="comment">//使能TIMx在CCR2上的预装载寄存器</span></span><br><span class="line"></span><br><span class="line">TIM_ARRPreloadConfig(TIM3, ENABLE); <span class="comment">//使能TIMx在ARR上的预装载寄存器</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">TIM_Cmd(TIM3, ENABLE);  <span class="comment">//使能TIMx外设</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定时器5通道1输入捕获配置</span></span><br><span class="line"></span><br><span class="line">TIM_ICInitTypeDef  TIM5_ICInitStructure;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM5_Cap_Init</span><span class="params">(u16 arr,u16 psc)</span></span><br><span class="line">&#123; </span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</span><br><span class="line">   NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM5, ENABLE);<span class="comment">//使能TIM5时钟</span></span><br><span class="line"> RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);  <span class="comment">//使能GPIOA时钟</span></span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_0;  <span class="comment">//PA0 清除之前设置  </span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; <span class="comment">//PA0 输入  </span></span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line">GPIO_ResetBits(GPIOA,GPIO_Pin_0); <span class="comment">//PA0 下拉</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化定时器5 TIM5 </span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Period = arr; <span class="comment">//设定计数器自动重装值 </span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler =psc; <span class="comment">//预分频器   </span></span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; <span class="comment">//设置时钟分割:TDTS = Tck_tim</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  <span class="comment">//TIM向上计数模式</span></span><br><span class="line">TIM_TimeBaseInit(TIM5, &amp;TIM_TimeBaseStructure); <span class="comment">//根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">//初始化TIM5输入捕获参数</span></span><br><span class="line">TIM5_ICInitStructure.TIM_Channel = TIM_Channel_1; <span class="comment">//CC1S=01 选择输入端 IC1映射到TI1上</span></span><br><span class="line">  TIM5_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;<span class="comment">//上升沿捕获</span></span><br><span class="line">  TIM5_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; <span class="comment">//映射到TI1上</span></span><br><span class="line">  TIM5_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1; <span class="comment">//配置输入分频,不分频 </span></span><br><span class="line">  TIM5_ICInitStructure.TIM_ICFilter = <span class="number">0x00</span>;<span class="comment">//IC1F=0000 配置输入滤波器 不滤波</span></span><br><span class="line">  TIM_ICInit(TIM5, &amp;TIM5_ICInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//中断分组初始化</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM5_IRQn;  <span class="comment">//TIM3中断</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;  <span class="comment">//先占优先级2级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">0</span>;  <span class="comment">//从优先级0级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; <span class="comment">//IRQ通道被使能</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);  <span class="comment">//根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器 </span></span><br><span class="line"></span><br><span class="line">TIM_ITConfig(TIM5,TIM_IT_Update|TIM_IT_CC1,ENABLE);<span class="comment">//允许更新中断 ,允许CC1IE捕获中断</span></span><br><span class="line"></span><br><span class="line">   TIM_Cmd(TIM5,ENABLE ); <span class="comment">//使能定时器5</span></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u8  TIM5CH1_CAPTURE_STA=<span class="number">0</span>;<span class="comment">//输入捕获状态    </span></span><br><span class="line">u16TIM5CH1_CAPTURE_VAL;<span class="comment">//输入捕获值</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//定时器5中断服务程序 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM5_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>((TIM5CH1_CAPTURE_STA&amp;<span class="number">0X80</span>)==<span class="number">0</span>)<span class="comment">//还未成功捕获</span></span><br><span class="line">&#123;  </span><br><span class="line"><span class="keyword">if</span> (TIM_GetITStatus(TIM5, TIM_IT_Update) != RESET)</span><br><span class="line"> </span><br><span class="line">&#123;    </span><br><span class="line"><span class="keyword">if</span>(TIM5CH1_CAPTURE_STA&amp;<span class="number">0X40</span>)<span class="comment">//已经捕获到高电平了</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((TIM5CH1_CAPTURE_STA&amp;<span class="number">0X3F</span>)==<span class="number">0X3F</span>)<span class="comment">//高电平太长了</span></span><br><span class="line">&#123;</span><br><span class="line">TIM5CH1_CAPTURE_STA|=<span class="number">0X80</span>;<span class="comment">//标记成功捕获了一次</span></span><br><span class="line">TIM5CH1_CAPTURE_VAL=<span class="number">0XFFFF</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> TIM5CH1_CAPTURE_STA++;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (TIM_GetITStatus(TIM5, TIM_IT_CC1) != RESET)<span class="comment">//捕获1发生捕获事件</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(TIM5CH1_CAPTURE_STA&amp;<span class="number">0X40</span>)<span class="comment">//捕获到一个下降沿 </span></span><br><span class="line">&#123;  </span><br><span class="line">TIM5CH1_CAPTURE_STA|=<span class="number">0X80</span>;<span class="comment">//标记成功捕获到一次上升沿</span></span><br><span class="line">TIM5CH1_CAPTURE_VAL=TIM_GetCapture1(TIM5);</span><br><span class="line">   TIM_OC1PolarityConfig(TIM5,TIM_ICPolarity_Rising); <span class="comment">//CC1P=0 设置为上升沿捕获</span></span><br><span class="line">&#125;<span class="keyword">else</span>  <span class="comment">//还未开始,第一次捕获上升沿</span></span><br><span class="line">&#123;</span><br><span class="line">TIM5CH1_CAPTURE_STA=<span class="number">0</span>;<span class="comment">//清空</span></span><br><span class="line">TIM5CH1_CAPTURE_VAL=<span class="number">0</span>;</span><br><span class="line"> TIM_SetCounter(TIM5,<span class="number">0</span>);</span><br><span class="line">TIM5CH1_CAPTURE_STA|=<span class="number">0X40</span>;<span class="comment">//标记捕获到了上升沿</span></span><br><span class="line">   TIM_OC1PolarityConfig(TIM5,TIM_ICPolarity_Falling);<span class="comment">//CC1P=1 设置为下降沿捕获</span></span><br><span class="line">&#125;    </span><br><span class="line">&#125;            </span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line">    TIM_ClearITPendingBit(TIM5, TIM_IT_CC1|TIM_IT_Update); <span class="comment">//清除中断标志位</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="timerh"><a class="markdownIt-Anchor" href="#timerh"></a> timer.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// timer.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __TIMER_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __TIMER_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_Int_Init</span><span class="params">(u16 arr,u16 psc)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_PWM_Init</span><span class="params">(u16 arr,u16 psc)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM5_Cap_Init</span><span class="params">(u16 arr,u16 psc)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;timer.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> u8  TIM5CH1_CAPTURE_STA;<span class="comment">//输入捕获状态    </span></span><br><span class="line"><span class="keyword">extern</span> u16TIM5CH1_CAPTURE_VAL;<span class="comment">//输入捕获值</span></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line"> u32 temp=<span class="number">0</span>; </span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2); <span class="comment">//设置NVIC中断分组2:2位抢占优先级，2位响应优先级</span></span><br><span class="line">uart_init(<span class="number">115200</span>); <span class="comment">//串口初始化为115200</span></span><br><span class="line"> LED_Init();     <span class="comment">//LED端口初始化</span></span><br><span class="line"> </span><br><span class="line"> TIM3_PWM_Init(<span class="number">899</span>,<span class="number">0</span>); <span class="comment">//不分频。PWM频率=72000/(899+1)=80Khz</span></span><br><span class="line"> TIM5_Cap_Init(<span class="number">0XFFFF</span>,<span class="number">72</span><span class="number">-1</span>);<span class="comment">//以1Mhz的频率计数 </span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"> delay_ms(<span class="number">10</span>);</span><br><span class="line">TIM_SetCompare2(TIM3,TIM_GetCapture2(TIM3)+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(TIM_GetCapture2(TIM3)==<span class="number">300</span>)TIM_SetCompare2(TIM3,<span class="number">0</span>);</span><br><span class="line">  </span><br><span class="line"> <span class="keyword">if</span>(TIM5CH1_CAPTURE_STA&amp;<span class="number">0X80</span>)<span class="comment">//成功捕获到了一次上升沿</span></span><br><span class="line">&#123;</span><br><span class="line">temp=TIM5CH1_CAPTURE_STA&amp;<span class="number">0X3F</span>;</span><br><span class="line">temp*=<span class="number">65536</span>;<span class="comment">//溢出时间总和</span></span><br><span class="line">temp+=TIM5CH1_CAPTURE_VAL;<span class="comment">//得到总的高电平时间</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;HIGH:%d us\r\n&quot;</span>,temp);<span class="comment">//打印总的高点平时间</span></span><br><span class="line">TIM5CH1_CAPTURE_STA=<span class="number">0</span>;<span class="comment">//开启下一次捕获</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="代码片段分析"><a class="markdownIt-Anchor" href="#代码片段分析"></a> 代码片段分析</h2><p>略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（9）PWM输出</title>
    <link href="https://sirius-tblog.github.io/posts/1529114485.html"/>
    <id>https://sirius-tblog.github.io/posts/1529114485.html</id>
    <published>2022-11-08T01:59:18.000Z</published>
    <updated>2023-04-05T14:19:11.394Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作，实现跑马灯样式实验。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a001b03c01.jpg" alt="" title="硬件电路连接" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>beep</td><td>output</td><td>PB8</td><td>LED0驱动</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件驱动GPIO口。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="timerc"><a class="markdownIt-Anchor" href="#timerc"></a> timer.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// timer.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;timer.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line"><span class="comment">//通用定时器3中断初始化</span></span><br><span class="line"><span class="comment">//这里时钟选择为APB1的2倍，而APB1为36M</span></span><br><span class="line"><span class="comment">//arr：自动重装值。</span></span><br><span class="line"><span class="comment">//psc：时钟预分频数</span></span><br><span class="line"><span class="comment">//这里使用的是定时器3!</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_Int_Init</span><span class="params">(u16 arr,u16 psc)</span></span><br><span class="line">&#123;</span><br><span class="line">  TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); <span class="comment">//时钟使能</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseStructure.TIM_Period = arr; <span class="comment">//设置在下一个更新事件装入活动的自动重装载寄存器周期的值 计数到5000为500ms</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler =psc; <span class="comment">//设置用来作为TIMx时钟频率除数的预分频值  10Khz的计数频率  </span></span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>; <span class="comment">//设置时钟分割:TDTS = Tck_tim</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  <span class="comment">//TIM向上计数模式</span></span><br><span class="line">TIM_TimeBaseInit(TIM3, &amp;TIM_TimeBaseStructure); <span class="comment">//根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位</span></span><br><span class="line"> </span><br><span class="line">TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE ); <span class="comment">//使能指定的TIM3中断,允许更新中断</span></span><br><span class="line"></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;  <span class="comment">//TIM3中断</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0</span>;  <span class="comment">//先占优先级0级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">3</span>;  <span class="comment">//从优先级3级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; <span class="comment">//IRQ通道被使能</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);  <span class="comment">//根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器</span></span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM3, ENABLE);  <span class="comment">//使能TIMx外设</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定时器3中断服务程序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>   <span class="comment">//TIM3中断</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET) <span class="comment">//检查指定的TIM中断发生与否:TIM 中断源 </span></span><br><span class="line">&#123;</span><br><span class="line">TIM_ClearITPendingBit(TIM3, TIM_IT_Update  );  <span class="comment">//清除TIMx的中断待处理位:TIM 中断源 </span></span><br><span class="line">LED1=!LED1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//TIM3 PWM部分初始化 </span></span><br><span class="line"><span class="comment">//PWM输出初始化</span></span><br><span class="line"><span class="comment">//arr：自动重装值</span></span><br><span class="line"><span class="comment">//psc：时钟预分频数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_PWM_Init</span><span class="params">(u16 arr,u16 psc)</span></span><br><span class="line">&#123;  </span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</span><br><span class="line">TIM_OCInitTypeDef  TIM_OCInitStructure;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);<span class="comment">//使能定时器3时钟</span></span><br><span class="line"> RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB  | RCC_APB2Periph_AFIO, ENABLE);  <span class="comment">//使能GPIO外设和AFIO复用功能模块时钟</span></span><br><span class="line"></span><br><span class="line">GPIO_PinRemapConfig(GPIO_PartialRemap_TIM3, ENABLE); <span class="comment">//Timer3部分重映射  TIM3_CH2-&gt;PB5    </span></span><br><span class="line"> </span><br><span class="line">   <span class="comment">//设置该引脚为复用输出功能,输出TIM3 CH2的PWM脉冲波形GPIOB.5</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5; <span class="comment">//TIM_CH2</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  <span class="comment">//复用推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB, &amp;GPIO_InitStructure);<span class="comment">//初始化GPIO</span></span><br><span class="line"> </span><br><span class="line">   <span class="comment">//初始化TIM3</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Period = arr; <span class="comment">//设置在下一个更新事件装入活动的自动重装载寄存器周期的值</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler =psc; <span class="comment">//设置用来作为TIMx时钟频率除数的预分频值 </span></span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>; <span class="comment">//设置时钟分割:TDTS = Tck_tim</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  <span class="comment">//TIM向上计数模式</span></span><br><span class="line">TIM_TimeBaseInit(TIM3, &amp;TIM_TimeBaseStructure); <span class="comment">//根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化TIM3 Channel2 PWM模式 </span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM2; <span class="comment">//选择定时器模式:TIM脉冲宽度调制模式2</span></span><br><span class="line"> TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable; <span class="comment">//比较输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; <span class="comment">//输出极性:TIM输出比较极性高</span></span><br><span class="line">TIM_OC2Init(TIM3, &amp;TIM_OCInitStructure);  <span class="comment">//根据T指定的参数初始化外设TIM3 OC2</span></span><br><span class="line"></span><br><span class="line">TIM_OC2PreloadConfig(TIM3, TIM_OCPreload_Enable);  <span class="comment">//使能TIM3在CCR2上的预装载寄存器</span></span><br><span class="line"> </span><br><span class="line">TIM_Cmd(TIM3, ENABLE);  <span class="comment">//使能TIM3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="timerh"><a class="markdownIt-Anchor" href="#timerh"></a> timer.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// timer.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __TIMER_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __TIMER_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_Int_Init</span><span class="params">(u16 arr,u16 psc)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_PWM_Init</span><span class="params">(u16 arr,u16 psc)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;timer.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line"> u16 led0pwmval=<span class="number">0</span>;</span><br><span class="line">u8 dir=<span class="number">1</span>;</span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);  <span class="comment">//设置NVIC中断分组2:2位抢占优先级，2位响应优先级</span></span><br><span class="line">uart_init(<span class="number">115200</span>); <span class="comment">//串口初始化为115200</span></span><br><span class="line"> LED_Init();     <span class="comment">//LED端口初始化</span></span><br><span class="line"> TIM3_PWM_Init(<span class="number">899</span>,<span class="number">0</span>); <span class="comment">//不分频。PWM频率=72000000/900=80Khz</span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"> delay_ms(<span class="number">10</span>); </span><br><span class="line"><span class="keyword">if</span>(dir)led0pwmval++;</span><br><span class="line"><span class="keyword">else</span> led0pwmval--;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(led0pwmval&gt;<span class="number">300</span>)dir=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(led0pwmval==<span class="number">0</span>)dir=<span class="number">1</span>; </span><br><span class="line">TIM_SetCompare2(TIM3,led0pwmval);   </span><br><span class="line">&#125; </span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="代码片段分析"><a class="markdownIt-Anchor" href="#代码片段分析"></a> 代码片段分析</h2><p>略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（8）定时器中断</title>
    <link href="https://sirius-tblog.github.io/posts/3757997425.html"/>
    <id>https://sirius-tblog.github.io/posts/3757997425.html</id>
    <published>2022-11-08T01:39:18.000Z</published>
    <updated>2023-04-05T14:19:00.567Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作，实现跑马灯样式实验。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a001b03c01.jpg" alt="" title="硬件电路连接" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>beep</td><td>output</td><td>PB8</td><td>LED0驱动</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件驱动GPIO口。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="timerc"><a class="markdownIt-Anchor" href="#timerc"></a> timer.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// timer.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;timer.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//通用定时器3中断初始化</span></span><br><span class="line"><span class="comment">//这里时钟选择为APB1的2倍，而APB1为36M</span></span><br><span class="line"><span class="comment">//arr：自动重装值。</span></span><br><span class="line"><span class="comment">//psc：时钟预分频数</span></span><br><span class="line"><span class="comment">//这里使用的是定时器3!</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_Int_Init</span><span class="params">(u16 arr,u16 psc)</span></span><br><span class="line">&#123;</span><br><span class="line">    TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); <span class="comment">//时钟使能</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定时器TIM3初始化</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Period = arr; <span class="comment">//设置在下一个更新事件装入活动的自动重装载寄存器周期的值</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler =psc; <span class="comment">//设置用来作为TIMx时钟频率除数的预分频值</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; <span class="comment">//设置时钟分割:TDTS = Tck_tim</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  <span class="comment">//TIM向上计数模式</span></span><br><span class="line">TIM_TimeBaseInit(TIM3, &amp;TIM_TimeBaseStructure); <span class="comment">//根据指定的参数初始化TIMx的时间基数单位</span></span><br><span class="line"> </span><br><span class="line">TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE ); <span class="comment">//使能指定的TIM3中断,允许更新中断</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//中断优先级NVIC设置</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;  <span class="comment">//TIM3中断</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0</span>;  <span class="comment">//先占优先级0级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">3</span>;  <span class="comment">//从优先级3级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; <span class="comment">//IRQ通道被使能</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);  <span class="comment">//初始化NVIC寄存器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM3, ENABLE);  <span class="comment">//使能TIMx </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定时器3中断服务程序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>   <span class="comment">//TIM3中断</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)  <span class="comment">//检查TIM3更新中断发生与否</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_ClearITPendingBit(TIM3, TIM_IT_Update  );  <span class="comment">//清除TIMx更新中断标志 </span></span><br><span class="line">LED1=!LED1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="timerh"><a class="markdownIt-Anchor" href="#timerh"></a> timer.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// timer.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __TIMER_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __TIMER_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_Int_Init</span><span class="params">(u16 arr,u16 psc)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;timer.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line"> </span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2); <span class="comment">//设置NVIC中断分组2:2位抢占优先级，2位响应优先级</span></span><br><span class="line">uart_init(<span class="number">115200</span>); <span class="comment">//串口初始化为115200</span></span><br><span class="line"> LED_Init();     <span class="comment">//LED端口初始化</span></span><br><span class="line">TIM3_Int_Init(<span class="number">4999</span>,<span class="number">7199</span>);<span class="comment">//10Khz的计数频率，计数到5000为500ms  </span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED0=!LED0;</span><br><span class="line">delay_ms(<span class="number">200</span>);   </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="代码片段分析"><a class="markdownIt-Anchor" href="#代码片段分析"></a> 代码片段分析</h2><p>略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（7）窗口看门狗</title>
    <link href="https://sirius-tblog.github.io/posts/2692450778.html"/>
    <id>https://sirius-tblog.github.io/posts/2692450778.html</id>
    <published>2022-11-08T01:19:18.000Z</published>
    <updated>2023-04-05T14:18:51.344Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作，实现跑马灯样式实验。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a001b03c01.jpg" alt="" title="硬件电路连接" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>beep</td><td>output</td><td>PB8</td><td>LED0驱动</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件驱动GPIO口。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="wwdgc"><a class="markdownIt-Anchor" href="#wwdgc"></a> wwdg.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wwdg.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;wwdg.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//保存WWDG计数器的设置值,默认为最大. </span></span><br><span class="line">u8 WWDG_CNT=<span class="number">0x7f</span>; </span><br><span class="line"><span class="comment">//初始化窗口看门狗 </span></span><br><span class="line"><span class="comment">//tr   :T[6:0],计数器值 </span></span><br><span class="line"><span class="comment">//wr   :W[6:0],窗口值 </span></span><br><span class="line"><span class="comment">//fprer:分频系数（WDGTB）,仅最低2位有效 </span></span><br><span class="line"><span class="comment">//Fwwdg=PCLK1/(4096*2^fprer). </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">WWDG_Init</span><span class="params">(u8 tr,u8 wr,u32 fprer)</span></span><br><span class="line">&#123; </span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_WWDG, ENABLE);  <span class="comment">//   WWDG时钟使能</span></span><br><span class="line"></span><br><span class="line">WWDG_CNT=tr&amp;WWDG_CNT;   <span class="comment">//初始化WWDG_CNT.   </span></span><br><span class="line">WWDG_SetPrescaler(fprer);<span class="comment">////设置IWDG预分频值</span></span><br><span class="line"></span><br><span class="line">WWDG_SetWindowValue(wr);<span class="comment">//设置窗口值</span></span><br><span class="line"></span><br><span class="line">WWDG_Enable(WWDG_CNT); <span class="comment">//使能看门狗 ,设置 counter .                  </span></span><br><span class="line"></span><br><span class="line">WWDG_ClearFlag();<span class="comment">//清除提前唤醒中断标志位 </span></span><br><span class="line"></span><br><span class="line">WWDG_NVIC_Init();<span class="comment">//初始化窗口看门狗 NVIC</span></span><br><span class="line"></span><br><span class="line">WWDG_EnableIT(); <span class="comment">//开启窗口看门狗中断</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//重设置WWDG计数器的值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">WWDG_Set_Counter</span><span class="params">(u8 cnt)</span></span><br><span class="line">&#123;</span><br><span class="line">    WWDG_Enable(cnt);<span class="comment">//使能看门狗 ,设置 counter . </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//窗口看门狗中断服务程序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">WWDG_NVIC_Init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = WWDG_IRQn;    <span class="comment">//WWDG中断</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;   <span class="comment">//抢占2，子优先级3，组2</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">3</span>; <span class="comment">//抢占2，子优先级3，组2</span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannelCmd=ENABLE; </span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);<span class="comment">//NVIC初始化</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">WWDG_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">WWDG_SetCounter(WWDG_CNT);  <span class="comment">//当禁掉此句后,窗口看门狗将产生复位</span></span><br><span class="line"></span><br><span class="line">WWDG_ClearFlag();  <span class="comment">//清除提前唤醒中断标志位</span></span><br><span class="line"></span><br><span class="line">LED1=!LED1; <span class="comment">//LED状态翻转</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="wwdgh"><a class="markdownIt-Anchor" href="#wwdgh"></a> wwdg.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wwdg.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __WDG_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __WDG_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">WWDG_Init</span><span class="params">(u8 tr,u8 wr,u32 fprer)</span>;<span class="comment">//初始化WWDG</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">WWDG_Set_Counter</span><span class="params">(u8 cnt)</span>;       <span class="comment">//设置WWDG的计数器</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">WWDG_NVIC_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;wwdg.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//设置中断优先级分组为组2：2位抢占优先级，2位响应优先级</span></span><br><span class="line">uart_init(<span class="number">115200</span>); <span class="comment">//串口初始化为115200</span></span><br><span class="line"> LED_Init();</span><br><span class="line">KEY_Init();          <span class="comment">//按键初始化 </span></span><br><span class="line">LED0=<span class="number">0</span>;</span><br><span class="line">delay_ms(<span class="number">300</span>);  </span><br><span class="line">WWDG_Init(<span class="number">0X7F</span>,<span class="number">0X5F</span>,WWDG_Prescaler_8);<span class="comment">//计数器值为7f,窗口寄存器为5f,分频数为8   </span></span><br><span class="line"> <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED0=<span class="number">1</span>;     </span><br><span class="line">&#125;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="代码片段分析"><a class="markdownIt-Anchor" href="#代码片段分析"></a> 代码片段分析</h2><p>略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（6）独立看门狗</title>
    <link href="https://sirius-tblog.github.io/posts/1102504782.html"/>
    <id>https://sirius-tblog.github.io/posts/1102504782.html</id>
    <published>2022-11-08T00:49:18.000Z</published>
    <updated>2023-04-09T14:24:26.743Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>使用按键 WK_UP 操作以及LED闪烁现象认识独立看门狗及其基本应用。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a001b03c01.jpg" alt="" title="硬件电路连接1" /><br /><img src="/assets/article/stm32f1-vlibrary/examples_a003b03c01.jpg" alt="" title="硬件电路连接2" /></p><p>STM32主要应用管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>led0</td><td>output</td><td>PB5</td><td>LED0驱动</td></tr><tr><td>WK_UP</td><td>input</td><td>PA4</td><td>WK_UP状态检测</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件使用独立看门狗资源，通过按键的操作以及LED闪烁结果判断喂狗是否完成。<br />根据电路连接关系以及已知逻辑关系可得如下预期结果：</p><table><thead><tr><th>按键</th><th>状态</th><th>现象</th><th>说明</th></tr></thead><tbody><tr><td>WK_UP</td><td>长时间未检测到被按下</td><td>LED0不停闪烁</td><td>此时MCU重复进入main函数，即被不停地复位</td></tr><tr><td>WK_UP</td><td>极频繁检测到被按下</td><td>LED0常亮</td><td>此时程序在while中停留，即因为及时喂狗而不会被复位</td></tr></tbody></table><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="iwdgc"><a class="markdownIt-Anchor" href="#iwdgc"></a> iwdg.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// iwdg.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iwdg.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化独立看门狗</span></span><br><span class="line"><span class="comment">//prer:分频数:0~7(只有低3位有效!)</span></span><br><span class="line"><span class="comment">//分频因子=4*2^prer.但最大值只能是256!</span></span><br><span class="line"><span class="comment">//rlr:重装载寄存器值:低11位有效.</span></span><br><span class="line"><span class="comment">//时间计算(大概):Tout=((4*2^prer)*rlr)/40 (ms).</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IWDG_Init</span><span class="params">(u8 prer,u16 rlr)</span> </span><br><span class="line">&#123;</span><br><span class="line"> IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);  <span class="comment">//使能对寄存器IWDG_PR和IWDG_RLR的写操作</span></span><br><span class="line"></span><br><span class="line">IWDG_SetPrescaler(prer);  <span class="comment">//设置IWDG预分频值:设置IWDG预分频值为64</span></span><br><span class="line"></span><br><span class="line">IWDG_SetReload(rlr);  <span class="comment">//设置IWDG重装载值</span></span><br><span class="line"></span><br><span class="line">IWDG_ReloadCounter();  <span class="comment">//按照IWDG重装载寄存器的值重装载IWDG计数器</span></span><br><span class="line"></span><br><span class="line">IWDG_Enable();  <span class="comment">//使能IWDG</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//喂独立看门狗</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IWDG_Feed</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;   </span><br><span class="line"> IWDG_ReloadCounter();<span class="comment">//reload   </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="iwdgh"><a class="markdownIt-Anchor" href="#iwdgh"></a> iwdg.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// iwdg.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __IWDG_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __IWDG_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IWDG_Init</span><span class="params">(u8 prer,u16 rlr)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">IWDG_Feed</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iwdg.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);  <span class="comment">//设置NVIC中断分组2:2位抢占优先级，2位响应优先级</span></span><br><span class="line">uart_init(<span class="number">115200</span>); <span class="comment">//串口初始化为115200</span></span><br><span class="line"> LED_Init();   <span class="comment">//初始化与LED连接的硬件接口</span></span><br><span class="line">KEY_Init();          <span class="comment">//按键初始化 </span></span><br><span class="line">delay_ms(<span class="number">500</span>);    <span class="comment">//让人看得到灭</span></span><br><span class="line">IWDG_Init(<span class="number">4</span>,<span class="number">625</span>);    <span class="comment">//与分频数为64,重载值为625,溢出时间为1s   </span></span><br><span class="line">LED0=<span class="number">0</span>; <span class="comment">//点亮LED0</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(KEY_Scan(<span class="number">0</span>)==WKUP_PRES)</span><br><span class="line">&#123;</span><br><span class="line">IWDG_Feed();<span class="comment">//如果WK_UP按下,则喂狗</span></span><br><span class="line">&#125;</span><br><span class="line">delay_ms(<span class="number">10</span>);</span><br><span class="line">&#125;; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2><h3 id="章节目的"><a class="markdownIt-Anchor" href="#章节目的"></a> 章节目的</h3><p>本章主要是熟悉独立看门狗IWDG资源。</p><h3 id="程序段分析"><a class="markdownIt-Anchor" href="#程序段分析"></a> 程序段分析</h3><p>对独立看门狗使用的一般步骤:</p><h3 id="浅知外部中断资源"><a class="markdownIt-Anchor" href="#浅知外部中断资源"></a> 浅知外部中断资源</h3><p><a href="#" title="浅谈独立看门狗是个啥？">STM32 独立看门狗资源</a>小知识。</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（5）外部中断</title>
    <link href="https://sirius-tblog.github.io/posts/730138348.html"/>
    <id>https://sirius-tblog.github.io/posts/730138348.html</id>
    <published>2022-11-08T00:29:18.000Z</published>
    <updated>2023-04-09T14:08:52.187Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作，实现跑马灯样式实验。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a003b03c01.jpg" alt="" title="硬件电路连接" /></p><p>STM32主要应用管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>KEY0</td><td>input</td><td>PE3</td><td>KEY0状态检测</td></tr><tr><td>KEY1</td><td>input</td><td>PE4</td><td>KEY1状态检测</td></tr><tr><td>WK_UP</td><td>input</td><td>PA4</td><td>WK_UP状态检测</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件，通过中断的功能检测端口状态并控制外部LED指示灯、蜂鸣器等电路器件。<br />根据电路连接关系可知如下预期结果：</p><table><thead><tr><th>按键</th><th>状态</th><th>现象</th></tr></thead><tbody><tr><td>KEY0</td><td>检测到被按下</td><td>BEEP发声</td></tr><tr><td>KEY1</td><td>检测到被按下</td><td>LED1暗亮状态翻转</td></tr><tr><td>WK_UP</td><td>检测到被按下</td><td>LED0、LED1暗亮状态同时翻转</td></tr></tbody></table><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="extic"><a class="markdownIt-Anchor" href="#extic"></a> exti.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// exti.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;exti.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;beep.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//外部中断0服务程序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTIX_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">   EXTI_InitTypeDef EXTI_InitStructure;</span><br><span class="line"> NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"></span><br><span class="line"> KEY_Init(); <span class="comment">//按键端口初始化</span></span><br><span class="line"></span><br><span class="line">  RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);<span class="comment">//使能复用功能时钟</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">//GPIOE.3  中断线以及中断初始化配置 下降沿触发   //KEY1</span></span><br><span class="line">  GPIO_EXTILineConfig(GPIO_PortSourceGPIOE,GPIO_PinSource3);</span><br><span class="line">  EXTI_InitStructure.EXTI_Line=EXTI_Line3;</span><br><span class="line">  EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;</span><br><span class="line">  EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;</span><br><span class="line">  EXTI_Init(&amp;EXTI_InitStructure);  <span class="comment">//根据EXTI_InitStruct中指定的参数初始化外设EXTI寄存器</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//GPIOE.4  中断线以及中断初始化配置  下降沿触发//KEY0</span></span><br><span class="line">  GPIO_EXTILineConfig(GPIO_PortSourceGPIOE,GPIO_PinSource4);</span><br><span class="line">  EXTI_InitStructure.EXTI_Line=EXTI_Line4;</span><br><span class="line">  EXTI_Init(&amp;EXTI_InitStructure);  <span class="comment">//根据EXTI_InitStruct中指定的参数初始化外设EXTI寄存器</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//GPIOA.0   中断线以及中断初始化配置 上升沿触发 PA0    //WK_UP</span></span><br><span class="line"> GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource0); </span><br><span class="line">  EXTI_InitStructure.EXTI_Line=EXTI_Line0;</span><br><span class="line">  EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;</span><br><span class="line">  EXTI_Init(&amp;EXTI_InitStructure);<span class="comment">//根据EXTI_InitStruct中指定的参数初始化外设EXTI寄存器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;<span class="comment">//使能按键WK_UP所在的外部中断通道</span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0x02</span>;<span class="comment">//抢占优先级2， </span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">0x03</span>;<span class="comment">//子优先级3</span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;<span class="comment">//使能外部中断通道</span></span><br><span class="line">  NVIC_Init(&amp;NVIC_InitStructure); </span><br><span class="line"></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannel = EXTI3_IRQn;<span class="comment">//使能按键KEY1所在的外部中断通道</span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0x02</span>;<span class="comment">//抢占优先级2 </span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">0x01</span>;<span class="comment">//子优先级1 </span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;<span class="comment">//使能外部中断通道</span></span><br><span class="line">  NVIC_Init(&amp;NVIC_InitStructure);    <span class="comment">//根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器</span></span><br><span class="line"></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannel = EXTI4_IRQn;<span class="comment">//使能按键KEY0所在的外部中断通道</span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0x02</span>;<span class="comment">//抢占优先级2 </span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">0x00</span>;<span class="comment">//子优先级0 </span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;<span class="comment">//使能外部中断通道</span></span><br><span class="line">  NVIC_Init(&amp;NVIC_InitStructure);    <span class="comment">//根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//外部中断0服务程序 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI0_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">delay_ms(<span class="number">10</span>);<span class="comment">//消抖</span></span><br><span class="line"><span class="keyword">if</span>(WK_UP==<span class="number">1</span>)  <span class="comment">//WK_UP按键</span></span><br><span class="line">&#123; </span><br><span class="line">BEEP=!BEEP;</span><br><span class="line">&#125;</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line0); <span class="comment">//清除LINE0上的中断标志位  </span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">//外部中断3服务程序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">delay_ms(<span class="number">10</span>);<span class="comment">//消抖</span></span><br><span class="line"><span class="keyword">if</span>(KEY1==<span class="number">0</span>) <span class="comment">//按键KEY1</span></span><br><span class="line">&#123; </span><br><span class="line">LED1=!LED1;</span><br><span class="line">&#125; </span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line3);  <span class="comment">//清除LINE3上的中断标志位  </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI4_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">delay_ms(<span class="number">10</span>);<span class="comment">//消抖</span></span><br><span class="line"><span class="keyword">if</span>(KEY0==<span class="number">0</span>) <span class="comment">//按键KEY0</span></span><br><span class="line">&#123;</span><br><span class="line">LED0=!LED0;</span><br><span class="line">LED1=!LED1; </span><br><span class="line">&#125; </span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line4);  <span class="comment">//清除LINE4上的中断标志位  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="extih"><a class="markdownIt-Anchor" href="#extih"></a> exti.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// exti.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __EXTI_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __EXIT_H </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTIX_Init</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//外部中断初始化     </span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;exti.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;beep.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line"> </span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2); <span class="comment">//设置NVIC中断分组2:2位抢占优先级，2位响应优先级</span></span><br><span class="line">uart_init(<span class="number">115200</span>); <span class="comment">//串口初始化为115200</span></span><br><span class="line">LED_Init();  <span class="comment">//初始化与LED连接的硬件接口 </span></span><br><span class="line">BEEP_Init(); <span class="comment">//初始化蜂鸣器IO</span></span><br><span class="line">EXTIX_Init();         <span class="comment">//初始化外部中断输入 </span></span><br><span class="line">LED0=<span class="number">0</span>;<span class="comment">//先点亮红灯</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;    </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;OK\r\n&quot;</span>);</span><br><span class="line">delay_ms(<span class="number">1000</span>);  </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2><h3 id="章节目的"><a class="markdownIt-Anchor" href="#章节目的"></a> 章节目的</h3><p>本章主要是熟悉基础 GPIO 端口外部中断资源。</p><h3 id="程序段分析"><a class="markdownIt-Anchor" href="#程序段分析"></a> 程序段分析</h3><p>对IO口外部中断使用的一般步骤:</p><ul><li>初始化 IO 口为输入。</li><li>开启 AFIO 时钟</li><li>设置 IO 口与中断线的映射关系。</li><li>初始化线上中断，设置触发条件等。</li><li>配置中断分组（NVIC），并使能中断。</li><li>编写中断服务函数。</li><li>主函数中对中断资源进行初始化调用，驱动指示灯、蜂鸣器等等。</li></ul><h3 id="浅知外部中断资源"><a class="markdownIt-Anchor" href="#浅知外部中断资源"></a> 浅知外部中断资源</h3><p><a href="#" title="浅谈外部中断是个啥？">STM32 外部中断</a>小知识。</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（4）串口通信</title>
    <link href="https://sirius-tblog.github.io/posts/1103739706.html"/>
    <id>https://sirius-tblog.github.io/posts/1103739706.html</id>
    <published>2022-11-07T23:59:18.000Z</published>
    <updated>2023-04-09T14:08:40.041Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>应用内部串口资源，实现串口通信功能。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a004b03c01.jpg" alt="" title="硬件电路连接" /></p><p>STM32主要应用管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>USART1_TX</td><td>output</td><td>PA9</td><td>MCU端串口USART1信号输出</td></tr><tr><td>USART1_RX</td><td>input</td><td>PA10</td><td>MCU端串口USART1信号输入</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件驱动USART1内部资源，通过USB转串口电路进行与PC端通信。此处使用RS232协议。</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="usartc"><a class="markdownIt-Anchor" href="#usartc"></a> usart.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// usart.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果使用ucos,则包括下面的头文件即可</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> SYSTEM_SUPPORT_OS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;includes.h&quot;</span><span class="comment">//ucos 使用  </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">/加入以下代码,支持<span class="built_in">printf</span>函数,而不需要选择use MicroLIB  </span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> import(__use_no_semihosting)             </span></span><br><span class="line"><span class="comment">//标准库需要的支持函数                 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> __<span class="title">FILE</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line"><span class="type">int</span> handle; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">FILE __stdout;       </span><br><span class="line"><span class="comment">//定义_sys_exit()以避免使用半主机模式    </span></span><br><span class="line"><span class="type">void</span> _sys_exit(<span class="type">int</span> x) </span><br><span class="line">&#123; </span><br><span class="line">x = x; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//重定义fputc函数 </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fputc</span><span class="params">(<span class="type">int</span> ch, FILE *f)</span></span><br><span class="line">&#123;      </span><br><span class="line"><span class="keyword">while</span>((USART1-&gt;SR&amp;<span class="number">0X40</span>)==<span class="number">0</span>);<span class="comment">//循环发送,直到发送完毕   </span></span><br><span class="line">    USART1-&gt;DR = (u8) ch;      </span><br><span class="line"><span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用microLib的方法*/</span></span><br><span class="line"> <span class="comment">/* </span></span><br><span class="line"><span class="comment">int fputc(int ch, FILE *f)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">USART_SendData(USART1, (uint8_t) ch);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">while (USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET) &#123;&#125;</span></span><br><span class="line"><span class="comment">   </span></span><br><span class="line"><span class="comment">    return ch;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">int GetKey (void)  &#123; </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    while (!(USART1-&gt;SR &amp; USART_FLAG_RXNE));</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    return ((int)(USART1-&gt;DR &amp; 0x1FF));</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">if</span> EN_USART1_RX   <span class="comment">//如果使能了接收</span></span></span><br><span class="line"><span class="comment">//串口1中断服务程序</span></span><br><span class="line"><span class="comment">//注意,读取USARTx-&gt;SR能避免莫名其妙的错误   </span></span><br><span class="line">u8 USART_RX_BUF[USART_REC_LEN];     <span class="comment">//接收缓冲,最大USART_REC_LEN个字节.</span></span><br><span class="line"><span class="comment">//接收状态</span></span><br><span class="line"><span class="comment">//bit15，接收完成标志</span></span><br><span class="line"><span class="comment">//bit14，接收到0x0d</span></span><br><span class="line"><span class="comment">//bit13~0，接收到的有效字节数目</span></span><br><span class="line">u16 USART_RX_STA=<span class="number">0</span>;       <span class="comment">//接收状态标记  </span></span><br><span class="line">  </span><br><span class="line"><span class="type">void</span> <span class="title function_">uart_init</span><span class="params">(u32 bound)</span>&#123;</span><br><span class="line">  <span class="comment">//GPIO端口设置</span></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">USART_InitTypeDef USART_InitStructure;</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"> </span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1|RCC_APB2Periph_GPIOA, ENABLE);<span class="comment">//使能USART1，GPIOA时钟</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">//USART1_TX   GPIOA.9</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9; <span class="comment">//PA.9</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;<span class="comment">//复用推挽输出</span></span><br><span class="line">  GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="comment">//初始化GPIOA.9</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">//USART1_RX  GPIOA.10初始化</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;<span class="comment">//PA10</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;<span class="comment">//浮空输入</span></span><br><span class="line">  GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="comment">//初始化GPIOA.10  </span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//Usart1 NVIC 配置</span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=<span class="number">3</span> ;<span class="comment">//抢占优先级3</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">3</span>;<span class="comment">//子优先级3</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;<span class="comment">//IRQ通道使能</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);<span class="comment">//根据指定的参数初始化VIC寄存器</span></span><br><span class="line">  </span><br><span class="line">   <span class="comment">//USART 初始化设置</span></span><br><span class="line"></span><br><span class="line">USART_InitStructure.USART_BaudRate = bound;<span class="comment">//串口波特率</span></span><br><span class="line">USART_InitStructure.USART_WordLength = USART_WordLength_8b;<span class="comment">//字长为8位数据格式</span></span><br><span class="line">USART_InitStructure.USART_StopBits = USART_StopBits_1;<span class="comment">//一个停止位</span></span><br><span class="line">USART_InitStructure.USART_Parity = USART_Parity_No;<span class="comment">//无奇偶校验位</span></span><br><span class="line">USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;<span class="comment">//无硬件数据流控制</span></span><br><span class="line">USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;<span class="comment">//收发模式</span></span><br><span class="line"></span><br><span class="line">  USART_Init(USART1, &amp;USART_InitStructure); <span class="comment">//初始化串口1</span></span><br><span class="line">  USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);<span class="comment">//开启串口接受中断</span></span><br><span class="line">  USART_Cmd(USART1, ENABLE);                    <span class="comment">//使能串口1 </span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">USART1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>                <span class="comment">//串口1中断服务程序</span></span><br><span class="line">&#123;</span><br><span class="line">u8 Res;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> SYSTEM_SUPPORT_OS <span class="comment">//如果SYSTEM_SUPPORT_OS为真，则需要支持OS.</span></span></span><br><span class="line">OSIntEnter();    </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="keyword">if</span>(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET)  <span class="comment">//接收中断(接收到的数据必须是0x0d 0x0a结尾)</span></span><br><span class="line">&#123;</span><br><span class="line">Res =USART_ReceiveData(USART1);<span class="comment">//读取接收到的数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((USART_RX_STA&amp;<span class="number">0x8000</span>)==<span class="number">0</span>)<span class="comment">//接收未完成</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(USART_RX_STA&amp;<span class="number">0x4000</span>)<span class="comment">//接收到了0x0d</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Res!=<span class="number">0x0a</span>)USART_RX_STA=<span class="number">0</span>;<span class="comment">//接收错误,重新开始</span></span><br><span class="line"><span class="keyword">else</span> USART_RX_STA|=<span class="number">0x8000</span>;<span class="comment">//接收完成了 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//还没收到0X0D</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Res==<span class="number">0x0d</span>)USART_RX_STA|=<span class="number">0x4000</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">USART_RX_BUF[USART_RX_STA&amp;<span class="number">0X3FFF</span>]=Res ;</span><br><span class="line">USART_RX_STA++;</span><br><span class="line"><span class="keyword">if</span>(USART_RX_STA&gt;(USART_REC_LEN<span class="number">-1</span>))USART_RX_STA=<span class="number">0</span>;<span class="comment">//接收数据错误,重新开始接收  </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;    </span><br><span class="line">     &#125; </span><br><span class="line"><span class="meta">#<span class="keyword">if</span> SYSTEM_SUPPORT_OS <span class="comment">//如果SYSTEM_SUPPORT_OS为真，则需要支持OS.</span></span></span><br><span class="line">OSIntExit();   </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="usarth"><a class="markdownIt-Anchor" href="#usarth"></a> usart.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// usart.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __USART_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __USART_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USART_REC_LEN  200  <span class="comment">//定义最大接收字节数 200</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EN_USART1_RX 1<span class="comment">//使能（1）/禁止（0）串口1接收</span></span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">extern</span> u8  USART_RX_BUF[USART_REC_LEN]; <span class="comment">//接收缓冲,最大USART_REC_LEN个字节.末字节为换行符 </span></span><br><span class="line"><span class="keyword">extern</span> u16 USART_RX_STA;         <span class="comment">//接收状态标记</span></span><br><span class="line"><span class="comment">//如果想串口中断接收，请不要注释以下宏定义</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">uart_init</span><span class="params">(u32 bound)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line"> u16 t;  </span><br><span class="line">u16 len;</span><br><span class="line">u16 times=<span class="number">0</span>;</span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2); <span class="comment">//设置NVIC中断分组2:2位抢占优先级，2位响应优先级</span></span><br><span class="line">uart_init(<span class="number">115200</span>); <span class="comment">//串口初始化为115200</span></span><br><span class="line"> LED_Init();     <span class="comment">//LED端口初始化</span></span><br><span class="line">KEY_Init();          <span class="comment">//初始化与按键连接的硬件接口</span></span><br><span class="line"> <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(USART_RX_STA&amp;<span class="number">0x8000</span>)</span><br><span class="line">&#123;   </span><br><span class="line">len=USART_RX_STA&amp;<span class="number">0x3fff</span>;<span class="comment">//得到此次接收到的数据长度</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n您发送的消息为:\r\n\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">USART_SendData(USART1, USART_RX_BUF[t]);<span class="comment">//向串口1发送数据</span></span><br><span class="line"><span class="keyword">while</span>(USART_GetFlagStatus(USART1,USART_FLAG_TC)!=SET);<span class="comment">//等待发送结束</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n\r\n&quot;</span>);<span class="comment">//插入换行</span></span><br><span class="line">USART_RX_STA=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">times++;</span><br><span class="line"><span class="keyword">if</span>(times%<span class="number">5000</span>==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n精英STM32开发板 串口实验\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;正点原子@ALIENTEK\r\n\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(times%<span class="number">200</span>==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;请输入数据,以回车键结束\n&quot;</span>);  </span><br><span class="line"><span class="keyword">if</span>(times%<span class="number">30</span>==<span class="number">0</span>)LED0=!LED0;<span class="comment">//闪烁LED,提示系统正在运行.</span></span><br><span class="line">delay_ms(<span class="number">10</span>);   </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2><h3 id="章节目的"><a class="markdownIt-Anchor" href="#章节目的"></a> 章节目的</h3><p>本章主要是熟悉 GPIO 复用端口资源USART1的通信。</p><h3 id="程序段分析"><a class="markdownIt-Anchor" href="#程序段分析"></a> 程序段分析</h3><p>对端口的驱动，这里主要进行如下设置（见 usart.c ）:</p><ul><li>启动相应端口时钟 Clock 以及复用资源USART1 时钟 Clock;</li><li>串口 USART1 复位;</li><li>初始化端配置，包括“具体引脚 PIN_x ”、“端口模式 Mode ”、“速度配置 Speed ”;</li><li>将上述配置使用官方库函数进行对对应端口引脚初始化(函数 GPIO_Init() );</li><li>初始化 USART1 资源参数配置，包括“波特率 BaudRate”、“字节长度 WordLength ”、“停止位 StopBits ”、“奇偶校验位 Parity ”、“硬件数据流控制 HFC ”、“收发模式 Mode ”;</li><li>将上述配置使用官方库函数进行对对应资源初始化(函数 USART_Init() );</li><li>初始化优先级 NVIC 参数配置，包括“中断请求通道 IRQChannel”、“抢占优先级 ”、“子优先级”、“中断请求通道使能 ”;</li><li>将上述配置使用官方库函数进行对对应 NVIC 初始化(函数 NVIC_Init() );</li><li>开启中断;</li><li>使能串口 USART1;</li><li>主函数中对自定义函数进行调用并执行，驱动指示灯、蜂鸣器等等。</li></ul><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（3）按键输入</title>
    <link href="https://sirius-tblog.github.io/posts/1977272759.html"/>
    <id>https://sirius-tblog.github.io/posts/1977272759.html</id>
    <published>2022-11-07T23:39:18.000Z</published>
    <updated>2023-04-09T14:08:23.852Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作，实现外部端口状态（按键状态）检测。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a003b03c01.jpg" alt="" title="硬件电路连接" /></p><p>STM32主要应用管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>KEY0</td><td>input</td><td>PE3</td><td>KEY0状态检测</td></tr><tr><td>KEY1</td><td>input</td><td>PE4</td><td>KEY1状态检测</td></tr><tr><td>WK_UP</td><td>input</td><td>PA4</td><td>WK_UP状态检测</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件检测GPIO口的状态，并控制外部LED指示灯、蜂鸣器等电路器件。<br />根据电路连接关系可知如下预期结果：</p><table><thead><tr><th>端口</th><th>电平状态</th><th>现象</th><th>说明</th></tr></thead><tbody><tr><td>PE3</td><td>检测到低电平</td><td>KEY0被按下</td><td>此时该端口外部被接GND</td></tr><tr><td>PE4</td><td>检测到低电平</td><td>KEY1被按下</td><td>同上</td></tr><tr><td>PA4</td><td>检测到高电平</td><td>WK_UP被按下</td><td>此时该端口外部被接VCC3.3</td></tr><tr><td>PE3</td><td>检测到高电平</td><td>KEY0被放开</td><td>此时该端口外部悬空</td></tr><tr><td>PE4</td><td>检测到高电平</td><td>KEY1被放开</td><td>同上</td></tr><tr><td>PA4</td><td>检测到低电平</td><td>WK_UP被放开</td><td>同上</td></tr></tbody></table><p>通过以上预期状态，可以设计控制外部LED指示灯、蜂鸣器等电路器件的逻辑，如“一控一”、“一控多”、“多控一”、“长按短按控制”等等。此处试验设计逻辑关系预期如下：</p><table><thead><tr><th>按键</th><th>状态</th><th>现象</th></tr></thead><tbody><tr><td>KEY0</td><td>检测到被按下</td><td>BEEP发声</td></tr><tr><td>KEY1</td><td>检测到被按下</td><td>LED1暗亮状态翻转</td></tr><tr><td>WK_UP</td><td>检测到被按下</td><td>LED0、LED1暗亮状态同时翻转</td></tr></tbody></table><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="keyc"><a class="markdownIt-Anchor" href="#keyc"></a> key.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// key.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//按键初始化函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">KEY_Init</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">//IO初始化</span></span><br><span class="line">&#123; </span><br><span class="line"> GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line"> </span><br><span class="line"> RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOE,ENABLE);     <span class="comment">//使能PORTA,PORTE时钟</span></span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_4|GPIO_Pin_3;           <span class="comment">//KEY0-KEY1</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;                   <span class="comment">//设置成上拉输入（因为外部置低为有效操作，此处应上拉）</span></span><br><span class="line"> GPIO_Init(GPIOE, &amp;GPIO_InitStructure);                                     <span class="comment">//初始化GPIOE4,3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化 WK_UP--&gt;GPIOA.0  下拉输入（因为外部置高为有效操作，此处应下拉）</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_0;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; <span class="comment">//PA0设置成输入，默认下拉  </span></span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="comment">//初始化GPIOA.0</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按键处理函数</span></span><br><span class="line"><span class="comment">//返回按键值</span></span><br><span class="line"><span class="comment">//mode:0,不支持连续按;1,支持连续按;</span></span><br><span class="line"><span class="comment">//0，没有任何按键按下</span></span><br><span class="line"><span class="comment">//1，KEY0按下</span></span><br><span class="line"><span class="comment">//2，KEY1按下</span></span><br><span class="line"><span class="comment">//3，KEY3按下 WK_UP</span></span><br><span class="line"><span class="comment">//注意此函数有响应优先级,KEY0&gt;KEY1&gt;KEY_UP!!</span></span><br><span class="line">u8 <span class="title function_">KEY_Scan</span><span class="params">(u8 mode)</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="type">static</span> u8 key_up=<span class="number">1</span>;<span class="comment">//按键按松开标志</span></span><br><span class="line"><span class="keyword">if</span>(mode)key_up=<span class="number">1</span>;  <span class="comment">//支持连按  </span></span><br><span class="line"><span class="keyword">if</span>(key_up&amp;&amp;(KEY0==<span class="number">0</span>||KEY1==<span class="number">0</span>||WK_UP==<span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line">delay_ms(<span class="number">10</span>);<span class="comment">//去抖动 </span></span><br><span class="line">key_up=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY0==<span class="number">0</span>)<span class="keyword">return</span> KEY0_PRES;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(KEY1==<span class="number">0</span>)<span class="keyword">return</span> KEY1_PRES;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(WK_UP==<span class="number">1</span>)<span class="keyword">return</span> WKUP_PRES;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(KEY0==<span class="number">1</span>&amp;&amp;KEY1==<span class="number">1</span>&amp;&amp;WK_UP==<span class="number">0</span>)key_up=<span class="number">1</span>;     </span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">// 无按键按下</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="keyh"><a class="markdownIt-Anchor" href="#keyh"></a> key.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// key.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __KEY_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __KEY_H </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY0  GPIO_ReadInputDataBit(GPIOE,GPIO_Pin_4)<span class="comment">//读取按键0(KEY0) </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY1  GPIO_ReadInputDataBit(GPIOE,GPIO_Pin_3)<span class="comment">//读取按键1(KEY1) </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WK_UP   GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_0)<span class="comment">//读取按键3(WK_UP) </span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY0_PRES 1<span class="comment">//KEY0按下</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY1_PRES  2<span class="comment">//KEY1按下</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WKUP_PRES   3<span class="comment">//KEY_UP按下(即WK_UP/KEY_UP)</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">KEY_Init</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//IO初始化</span></span><br><span class="line">u8 <span class="title function_">KEY_Scan</span><span class="params">(u8)</span>;  <span class="comment">//按键扫描函数    </span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;beep.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line"> vu8 key=<span class="number">0</span>;</span><br><span class="line">delay_init();     <span class="comment">//延时函数初始化  </span></span><br><span class="line">LED_Init();  <span class="comment">//初始化与LED连接的硬件接口</span></span><br><span class="line">BEEP_Init();         <span class="comment">//初始化蜂鸣器端口</span></span><br><span class="line">KEY_Init();         <span class="comment">//初始化与按键连接的硬件接口</span></span><br><span class="line">LED0=<span class="number">0</span>;<span class="comment">//先点亮红灯</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"> key=KEY_Scan(<span class="number">0</span>);<span class="comment">//得到键值</span></span><br><span class="line">   <span class="keyword">if</span>(key)</span><br><span class="line">&#123;   </span><br><span class="line"><span class="keyword">switch</span>(key)</span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">case</span> WKUP_PRES:<span class="comment">//控制蜂鸣器</span></span><br><span class="line">BEEP=!BEEP;</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">case</span> KEY1_PRES:<span class="comment">//控制LED1翻转 </span></span><br><span class="line">LED1=!LED1;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KEY0_PRES:<span class="comment">//同时控制LED0,LED1翻转 </span></span><br><span class="line">LED0=!LED0;</span><br><span class="line">LED1=!LED1;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> delay_ms(<span class="number">10</span>); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2><h3 id="章节目的"><a class="markdownIt-Anchor" href="#章节目的"></a> 章节目的</h3><p>本章主要是熟悉基础 GPIO 端口状态的检测，即端口的输入。</p><h3 id="程序段分析"><a class="markdownIt-Anchor" href="#程序段分析"></a> 程序段分析</h3><p>对端口的驱动，这里主要进行如下设置（见 key.c ）:</p><ul><li>启动相应端口时钟 Clock;</li><li>初始化端配置，包括“具体引脚 PIN_x ”、“端口模式 Mode ”、“速度配置 Speed ”;</li><li>将上述配置使用官方库函数进行对对应端口引脚进行初始化(函数 GPIO_Init() );</li><li>因为是输入检测，不需要配置初始状态值，自定义可执行函数是实现按键检测结果与外部电路驱动的捆绑关系;</li><li>主函数中对自定义函数进行调用并执行，驱动指示灯、蜂鸣器等等。</li></ul><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（2）蜂鸣器</title>
    <link href="https://sirius-tblog.github.io/posts/3238499939.html"/>
    <id>https://sirius-tblog.github.io/posts/3238499939.html</id>
    <published>2022-11-07T23:29:18.000Z</published>
    <updated>2023-05-14T15:43:25.936Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作，实现<a href="#" title="自带震荡电路的蜂鸣器，即通电即响">有源蜂鸣器</a>鸣叫。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a002b03c01.jpg" alt="" title="硬件电路连接" /></p><p>STM32主要应用管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>beep</td><td>output</td><td>PB8</td><td>BEEP 驱动</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件驱动GPIO口，此处端口通过间接方式实现控制，即通过小电流改变某一器件的工作状态，继而实现受控器件对目标的控制。<br />此处的受控器件为<a href="#" title="数字电路主要使用的是三极管的开关特性，只用到了截止与饱和两种状态，其关键点在于 b 极（基极）和 e 级（发射极）之间的电压情况，NPN 型三极管的导通条件是 b 极比 e 极电压高 0.7V，这个三极管 e 级和 c 级之间就可以顺利导通。">NPN型三极管</a>（S8050），根据电路连接关系可知如下预期结果：</p><table><thead><tr><th>端口</th><th>电平状态</th><th>现象</th><th>说明</th></tr></thead><tbody><tr><td>PB8</td><td>输出高电平</td><td>BEEP发声</td><td>三极管满足饱和条件，电路导通</td></tr><tr><td>PB8</td><td>输出低电平</td><td>BEEP静默</td><td>三极管满足截止条件，电路不通</td></tr></tbody></table><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="beepc"><a class="markdownIt-Anchor" href="#beepc"></a> beep.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// beep.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;beep.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化PB8为输出口.并使能这个IO口的时钟    </span></span><br><span class="line"><span class="comment">//蜂鸣器初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">BEEP_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line"> GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line"> </span><br><span class="line"> RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);       <span class="comment">//使能GPIOB端口时钟</span></span><br><span class="line"> </span><br><span class="line"> GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;                                    <span class="comment">//BEEP--&gt;PB.8 端口配置</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;                  <span class="comment">//推挽输出</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;                 <span class="comment">//速度为50MHz</span></span><br><span class="line"> GPIO_Init(GPIOB, &amp;GPIO_InitStructure);                                         <span class="comment">//根据参数初始化GPIOB.8</span></span><br><span class="line"> </span><br><span class="line"> GPIO_ResetBits(GPIOB,GPIO_Pin_8);                                              <span class="comment">//输出置低，即关闭蜂鸣器</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="beeph"><a class="markdownIt-Anchor" href="#beeph"></a> beep.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// beep.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __BEEP_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __BEEP_H </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//蜂鸣器端口定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BEEP PBout(8)            <span class="comment">// BEEP,蜂鸣器接口   </span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">BEEP_Init</span><span class="params">(<span class="type">void</span>)</span>;                <span class="comment">//初始化</span></span><br><span class="line">     </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//main.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;beep.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line">delay_init();<span class="comment">//延时函数初始化  </span></span><br><span class="line">BEEP_Init();         <span class="comment">//初始化蜂鸣器端口</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">BEEP=<span class="number">0</span>;  </span><br><span class="line">delay_ms(<span class="number">300</span>);<span class="comment">//延时300ms</span></span><br><span class="line">BEEP=<span class="number">1</span>;  </span><br><span class="line">delay_ms(<span class="number">300</span>);<span class="comment">//延时300ms</span></span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2><h3 id="章节目的"><a class="markdownIt-Anchor" href="#章节目的"></a> 章节目的</h3><p>本章主要是熟悉基础 GPIO 端口的驱动，依旧是端口输出。</p><h3 id="程序段分析"><a class="markdownIt-Anchor" href="#程序段分析"></a> 程序段分析</h3><p>对端口的驱动，这里也是一般IO的输出，相对于<a href="/posts/2499769614.html" title="STM32F1 库函数例程（1）跑马灯">上一章节</a> ，在逻辑控制上基本无差异。</p><h3 id="关于三极管的小知识"><a class="markdownIt-Anchor" href="#关于三极管的小知识"></a> 关于三极管的小知识</h3><p>详情可见<a href="/posts/#.html" title="浅知S8050器件">S8050三极管器件</a> 知识点所述。</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>EP4CE10 Verilog例程（11）接口UART RS485驱动</title>
    <link href="https://sirius-tblog.github.io/posts/3798164979.html"/>
    <id>https://sirius-tblog.github.io/posts/3798164979.html</id>
    <published>2022-11-07T22:59:18.000Z</published>
    <updated>2023-04-05T04:12:35.860Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Altera EP4CE10F17C8 。<br />目标器件：SP3485 （电平类型转换芯片，TTL电平与RS485电平的转换）</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现串口通信RS485电平的传输效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p><img src="/assets/article/ep4ce10-verilog/examples_a011b03c01.jpg" alt="" title="硬件连接关系" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>PIN_E1</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>PIN_M1</td><td>此处复位低有效</td></tr><tr><td>uart_rxd</td><td>input</td><td>PIN_A12</td><td>串口收</td></tr><tr><td>uart_txd</td><td>output</td><td>PIN_B12</td><td>串口发</td></tr><tr><td>tx_rde</td><td>output</td><td>PIN_A11</td><td>串口发使能端，高电平发送，低电平接收</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/ep4ce10-verilog/examples_a011b04c01.jpg" alt="" title="设计思路" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a011b04c02.jpg" alt="" title="通信时序" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>           sys_clk,            </span><br><span class="line">    <span class="keyword">input</span>           sys_rst_n,  </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">input</span>           uart_rxd,         </span><br><span class="line">    <span class="keyword">output</span>          uart_txd ,         </span><br><span class="line">    <span class="keyword">output</span>          txd_rde           </span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;        </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;        </span><br><span class="line">  </span><br><span class="line"><span class="keyword">wire</span>       uart_en_w;               </span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] uart_data_w;                            </span><br><span class="line"></span><br><span class="line">uart_recv #(                          </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_recv(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk), </span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">    </span><br><span class="line">    <span class="variable">.uart_rxd</span>       (uart_rxd),</span><br><span class="line">    <span class="variable">.uart_done</span>      (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_dout</span>      (uart_data_w)</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">uart_send #(                           </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_send(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk),</span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">     </span><br><span class="line">    <span class="variable">.uart_en</span>        (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_din</span>       (uart_data_w),</span><br><span class="line">    <span class="variable">.tx_flag</span>        (txd_rde),</span><br><span class="line">    <span class="variable">.uart_txd</span>       (uart_txd)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_send.v</span></span><br><span class="line"><span class="keyword">module</span> uart_send</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>      sys_clk,                  </span><br><span class="line">    <span class="keyword">input</span>         sys_rst_n,                 </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>         uart_en,      </span><br><span class="line">    <span class="keyword">input</span>  [<span class="number">7</span>:<span class="number">0</span>]  uart_din,   </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   tx_flag, </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   uart_txd           </span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;    <span class="comment">//Source Clock</span></span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        <span class="comment">//Buad Rate</span></span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">//</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d0; </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d1;  </span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;          </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;  </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] tx_data; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">wire</span>       en_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> en_flag = (~uart_en_d1) &amp; uart_en_d0;</span><br><span class="line">                                                 </span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_en_d0 &lt;= <span class="number">1&#x27;b0</span>;                                  </span><br><span class="line">        uart_en_d1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                                               </span><br><span class="line">        uart_en_d0 &lt;= uart_en;                               </span><br><span class="line">        uart_en_d1 &lt;= uart_en_d0;                            </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (en_flag)    <span class="comment">//start of process</span></span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b1</span>;      </span><br><span class="line">        tx_data &lt;= uart_din;  <span class="comment">//Load Data</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))    <span class="comment">//end of process</span></span><br><span class="line">    <span class="keyword">begin</span>                 </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;  </span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        tx_flag &lt;= tx_flag;</span><br><span class="line">        tx_data &lt;= tx_data;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag) </span><br><span class="line">    <span class="keyword">begin</span>                </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;       </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>; </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)  </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//IDEL</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag)</span><br><span class="line">        <span class="keyword">case</span>(bit_cnt)</span><br><span class="line">            <span class="number">4&#x27;d0</span>: uart_txd &lt;= <span class="number">1&#x27;b0</span>;        <span class="comment">//start</span></span><br><span class="line">            <span class="number">4&#x27;d1</span>: uart_txd &lt;= tx_data[<span class="number">0</span>];  <span class="comment">//LSB</span></span><br><span class="line">            <span class="number">4&#x27;d2</span>: uart_txd &lt;= tx_data[<span class="number">1</span>];</span><br><span class="line">            <span class="number">4&#x27;d3</span>: uart_txd &lt;= tx_data[<span class="number">2</span>];</span><br><span class="line">            <span class="number">4&#x27;d4</span>: uart_txd &lt;= tx_data[<span class="number">3</span>];</span><br><span class="line">            <span class="number">4&#x27;d5</span>: uart_txd &lt;= tx_data[<span class="number">4</span>];</span><br><span class="line">            <span class="number">4&#x27;d6</span>: uart_txd &lt;= tx_data[<span class="number">5</span>];</span><br><span class="line">            <span class="number">4&#x27;d7</span>: uart_txd &lt;= tx_data[<span class="number">6</span>];</span><br><span class="line">            <span class="number">4&#x27;d8</span>: uart_txd &lt;= tx_data[<span class="number">7</span>];  <span class="comment">//MSB</span></span><br><span class="line">            <span class="number">4&#x27;d9</span>: uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//stop</span></span><br><span class="line">            <span class="keyword">default</span>: ;</span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;   <span class="comment">//IDEL</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span>          </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_recv.v</span></span><br><span class="line"><span class="keyword">module</span> uart_recv</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>  sys_clk,                </span><br><span class="line">    <span class="keyword">input</span>             sys_rst_n,   </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>             uart_rxd,      </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>       uart_done,    </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] uart_dout     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;   </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        </span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d0;</span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d1;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;         </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;        </span><br><span class="line"><span class="keyword">reg</span>        rx_flag;    </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] rxdata;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span>       start_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span>  start_flag = uart_rxd_d1 &amp; (~uart_rxd_d0);    </span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span> </span><br><span class="line">        uart_rxd_d0 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        uart_rxd_d1 &lt;= <span class="number">1&#x27;b0</span>;          </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_rxd_d0  &lt;= uart_rxd;                   </span><br><span class="line">        uart_rxd_d1  &lt;= uart_rxd_d0;</span><br><span class="line">    <span class="keyword">end</span>   </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)                                  </span><br><span class="line">        rx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(start_flag)                          </span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b1</span>;          </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))</span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rx_flag &lt;= rx_flag;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( rx_flag ) </span><br><span class="line">    <span class="keyword">begin</span>                  </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;            </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>;   </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> ( !sys_rst_n)  </span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;                                     </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(rx_flag)   </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt == BPS_CNT/<span class="number">2</span>) </span><br><span class="line">        <span class="keyword">begin</span>   </span><br><span class="line">            <span class="keyword">case</span> ( bit_cnt )</span><br><span class="line">             <span class="number">4&#x27;d1</span> : rxdata[<span class="number">0</span>] &lt;= uart_rxd_d1;   <span class="comment">//LSB</span></span><br><span class="line">             <span class="number">4&#x27;d2</span> : rxdata[<span class="number">1</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d3</span> : rxdata[<span class="number">2</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d4</span> : rxdata[<span class="number">3</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d5</span> : rxdata[<span class="number">4</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d6</span> : rxdata[<span class="number">5</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d7</span> : rxdata[<span class="number">6</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d8</span> : rxdata[<span class="number">7</span>] &lt;= uart_rxd_d1;   <span class="comment">//MSB</span></span><br><span class="line">             <span class="keyword">default</span>:;                                    </span><br><span class="line">            <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            rxdata &lt;= rxdata;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                               </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(bit_cnt == <span class="number">4&#x27;d9</span>) </span><br><span class="line">    <span class="keyword">begin</span>                      </span><br><span class="line">        uart_dout &lt;= rxdata;        <span class="comment">//collect Data </span></span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b1</span>;          <span class="comment">//valid  </span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                                   </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>; </span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.txt</span></span><br><span class="line"></span><br><span class="line">To,  Location</span><br><span class="line">sys_clk,    PIN_E1</span><br><span class="line">sys_rst_n,    PIN_M1</span><br><span class="line">uart_txd,    PIN_M7</span><br><span class="line">uart_rxd,    PIN_N5</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns / 1ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">reg</span> uart_rxd;</span><br><span class="line">  <span class="keyword">wire</span> uart_txd;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;       <span class="comment">// 驱动时钟 50MHz ，20ns</span></span><br><span class="line">  <span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;         <span class="comment">// 波特率 115200 bps</span></span><br><span class="line">  <span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">// 单bit传输耗时 BPS_CNT 个驱动时钟周期</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;    <span class="comment">//IDEL</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//START</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit0</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit1</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit2</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit3</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit4</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit5</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit6</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit7</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//STOP and IDEL</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo </span><br><span class="line">  <span class="variable">#(.CLK_FREQ (CLK_FREQ)</span>,</span><br><span class="line">  <span class="variable">.UART_BPS</span> (UART_BPS))</span><br><span class="line">  inst_uart</span><br><span class="line">   (</span><br><span class="line">    <span class="variable">.sys_rst_n</span>(sys_rst_n), </span><br><span class="line">    <span class="variable">.sys_clk</span>(sys_clk),</span><br><span class="line">    <span class="variable">.uart_txd</span>(uart_txd),</span><br><span class="line">    <span class="variable">.uart_rxd</span>(uart_rxd)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br />收发数据（数据为’h5A）<br /><img src="/assets/article/ep4ce10-verilog/examples_a011b06c01.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Altera-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="EP4CE10 型" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/EP4CE10-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="Altera" scheme="https://sirius-tblog.github.io/tags/Altera/"/>
    
    <category term="EP4CE10" scheme="https://sirius-tblog.github.io/tags/EP4CE10/"/>
    
  </entry>
  
  <entry>
    <title>EP4CE10 Verilog例程（10）接口UART RS232驱动</title>
    <link href="https://sirius-tblog.github.io/posts/4004091958.html"/>
    <id>https://sirius-tblog.github.io/posts/4004091958.html</id>
    <published>2022-11-07T22:39:18.000Z</published>
    <updated>2023-04-05T04:12:34.266Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Altera EP4CE10F17C8 。<br />目标器件：CH340 （串口转USB,电平类型转换芯片，TTL电平与USB差分电平的转换）<br />目标器件：SP3232 （电平类型转换芯片，TTL电平与RS232电平的转换）</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现串口通信协议的传输效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p><img src="/assets/article/ep4ce10-verilog/examples_a010b03c01.jpg" alt="" title="硬件连接关系" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>PIN_E1</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>PIN_M1</td><td>此处复位低有效</td></tr><tr><td>uart_rxd</td><td>input</td><td>PIN_N5</td><td>串口收</td></tr><tr><td>uart_txd</td><td>output</td><td>PIN_M7</td><td>串口发</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/ep4ce10-verilog/examples_a010b04c01.jpg" alt="" title="设计思路" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a010b04c02.jpg" alt="" title="通信时序" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>           sys_clk,            </span><br><span class="line">    <span class="keyword">input</span>           sys_rst_n,  </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">input</span>           uart_rxd,         </span><br><span class="line">    <span class="keyword">output</span>          uart_txd           </span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;        </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;        </span><br><span class="line">  </span><br><span class="line"><span class="keyword">wire</span>       uart_en_w;               </span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] uart_data_w;                            </span><br><span class="line"></span><br><span class="line">uart_recv #(                          </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_recv(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk), </span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">    </span><br><span class="line">    <span class="variable">.uart_rxd</span>       (uart_rxd),</span><br><span class="line">    <span class="variable">.uart_done</span>      (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_dout</span>      (uart_data_w)</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">uart_send #(                           </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_send(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk),</span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">     </span><br><span class="line">    <span class="variable">.uart_en</span>        (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_din</span>       (uart_data_w),</span><br><span class="line"> <span class="variable">.tx_flag</span>        (tx_flag),</span><br><span class="line">    <span class="variable">.uart_txd</span>       (uart_txd)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_send.v</span></span><br><span class="line"><span class="keyword">module</span> uart_send</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>      sys_clk,                  </span><br><span class="line">    <span class="keyword">input</span>         sys_rst_n,                 </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>         uart_en,      </span><br><span class="line">    <span class="keyword">input</span>  [<span class="number">7</span>:<span class="number">0</span>]  uart_din,   </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>        tx_flag, </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   uart_txd           </span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;    <span class="comment">//Source Clock</span></span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        <span class="comment">//Buad Rate</span></span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">//</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d0; </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d1;  </span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;          </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;  </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] tx_data; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">wire</span>       en_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> en_flag = (~uart_en_d1) &amp; uart_en_d0;</span><br><span class="line">                                                 </span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line">        uart_en_d0 &lt;= <span class="number">1&#x27;b0</span>;                                  </span><br><span class="line">        uart_en_d1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line"> <span class="keyword">begin</span>                                               </span><br><span class="line">        uart_en_d0 &lt;= uart_en;                               </span><br><span class="line">        uart_en_d1 &lt;= uart_en_d0;                            </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (en_flag)    <span class="comment">//start of process</span></span><br><span class="line"> <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b1</span>;      </span><br><span class="line">        tx_data &lt;= uart_din;  <span class="comment">//Load Data</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))    <span class="comment">//end of process</span></span><br><span class="line">    <span class="keyword">begin</span>                 </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;  </span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line">        tx_flag &lt;= tx_flag;</span><br><span class="line">        tx_data &lt;= tx_data;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag) </span><br><span class="line"> <span class="keyword">begin</span>                </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;       </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>; </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line"> <span class="keyword">begin</span>   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)  </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//IDEL</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag)</span><br><span class="line">        <span class="keyword">case</span>(bit_cnt)</span><br><span class="line">            <span class="number">4&#x27;d0</span>: uart_txd &lt;= <span class="number">1&#x27;b0</span>;        <span class="comment">//start</span></span><br><span class="line">            <span class="number">4&#x27;d1</span>: uart_txd &lt;= tx_data[<span class="number">0</span>];  <span class="comment">//LSB</span></span><br><span class="line">            <span class="number">4&#x27;d2</span>: uart_txd &lt;= tx_data[<span class="number">1</span>];</span><br><span class="line">            <span class="number">4&#x27;d3</span>: uart_txd &lt;= tx_data[<span class="number">2</span>];</span><br><span class="line">            <span class="number">4&#x27;d4</span>: uart_txd &lt;= tx_data[<span class="number">3</span>];</span><br><span class="line">            <span class="number">4&#x27;d5</span>: uart_txd &lt;= tx_data[<span class="number">4</span>];</span><br><span class="line">            <span class="number">4&#x27;d6</span>: uart_txd &lt;= tx_data[<span class="number">5</span>];</span><br><span class="line">            <span class="number">4&#x27;d7</span>: uart_txd &lt;= tx_data[<span class="number">6</span>];</span><br><span class="line">            <span class="number">4&#x27;d8</span>: uart_txd &lt;= tx_data[<span class="number">7</span>];  <span class="comment">//MSB</span></span><br><span class="line">            <span class="number">4&#x27;d9</span>: uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//stop</span></span><br><span class="line">            <span class="keyword">default</span>: ;</span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;   <span class="comment">//IDEL</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span>          </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_recv.v</span></span><br><span class="line"><span class="keyword">module</span> uart_recv</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>  sys_clk,                </span><br><span class="line">    <span class="keyword">input</span>             sys_rst_n,   </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>             uart_rxd,      </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>       uart_done,    </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] uart_dout     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;   </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        </span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d0;</span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d1;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;         </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;        </span><br><span class="line"><span class="keyword">reg</span>        rx_flag;    </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] rxdata;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span>       start_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span>  start_flag = uart_rxd_d1 &amp; (~uart_rxd_d0);    </span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span> </span><br><span class="line">        uart_rxd_d0 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        uart_rxd_d1 &lt;= <span class="number">1&#x27;b0</span>;          </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line">        uart_rxd_d0  &lt;= uart_rxd;                   </span><br><span class="line">        uart_rxd_d1  &lt;= uart_rxd_d0;</span><br><span class="line">    <span class="keyword">end</span>   </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)                                  </span><br><span class="line">        rx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(start_flag)                          </span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b1</span>;          </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))</span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rx_flag &lt;= rx_flag;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( rx_flag ) </span><br><span class="line"> <span class="keyword">begin</span>                  </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;            </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>;   </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> ( !sys_rst_n)  </span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;                                     </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(rx_flag)   </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt == BPS_CNT/<span class="number">2</span>) </span><br><span class="line">  <span class="keyword">begin</span>   </span><br><span class="line">            <span class="keyword">case</span> ( bit_cnt )</span><br><span class="line">             <span class="number">4&#x27;d1</span> : rxdata[<span class="number">0</span>] &lt;= uart_rxd_d1;   <span class="comment">//LSB</span></span><br><span class="line">             <span class="number">4&#x27;d2</span> : rxdata[<span class="number">1</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d3</span> : rxdata[<span class="number">2</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d4</span> : rxdata[<span class="number">3</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d5</span> : rxdata[<span class="number">4</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d6</span> : rxdata[<span class="number">5</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d7</span> : rxdata[<span class="number">6</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d8</span> : rxdata[<span class="number">7</span>] &lt;= uart_rxd_d1;   <span class="comment">//MSB</span></span><br><span class="line">             <span class="keyword">default</span>:;                                    </span><br><span class="line">            <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            rxdata &lt;= rxdata;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                               </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(bit_cnt == <span class="number">4&#x27;d9</span>) </span><br><span class="line"> <span class="keyword">begin</span>                      </span><br><span class="line">        uart_dout &lt;= rxdata;        <span class="comment">//collect Data </span></span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b1</span>;          <span class="comment">//valid  </span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line"> <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                                   </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>; </span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.txt</span></span><br><span class="line"></span><br><span class="line">To,  Location</span><br><span class="line">sys_clk,    PIN_E1</span><br><span class="line">sys_rst_n,    PIN_M1</span><br><span class="line">uart_txd,    PIN_M7</span><br><span class="line">uart_rxd,    PIN_N5</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns / 1ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">reg</span> uart_rxd;</span><br><span class="line">  <span class="keyword">wire</span> uart_txd;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;       <span class="comment">// 驱动时钟 50MHz ，20ns</span></span><br><span class="line">  <span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;         <span class="comment">// 波特率 115200 bps</span></span><br><span class="line">  <span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">// 单bit传输耗时 BPS_CNT 个驱动时钟周期</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;    <span class="comment">//IDEL</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//START</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit0</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit1</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit2</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit3</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit4</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit5</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit6</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit7</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//STOP and IDEL</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo </span><br><span class="line">  <span class="variable">#(.CLK_FREQ (CLK_FREQ)</span>,</span><br><span class="line">  <span class="variable">.UART_BPS</span> (UART_BPS))</span><br><span class="line">  inst_uart</span><br><span class="line">   (</span><br><span class="line">    <span class="variable">.sys_rst_n</span>(sys_rst_n), </span><br><span class="line">    <span class="variable">.sys_clk</span>(sys_clk),</span><br><span class="line">    <span class="variable">.uart_txd</span>(uart_txd),</span><br><span class="line">    <span class="variable">.uart_rxd</span>(uart_rxd)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br />收发数据（数据为’h5A）<br /><img src="/assets/article/ep4ce10-verilog/examples_a010b06c01.jpg" alt="" title="仿真结果" /><br />细节（BPS_CNT = CLK_FREQ/UART_BPS = 50000000/115200 = 434）<br /><img src="/assets/article/ep4ce10-verilog/examples_a010b06c02.jpg" alt="" title="仿真结果细节" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Altera-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="EP4CE10 型" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/EP4CE10-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="Altera" scheme="https://sirius-tblog.github.io/tags/Altera/"/>
    
    <category term="EP4CE10" scheme="https://sirius-tblog.github.io/tags/EP4CE10/"/>
    
  </entry>
  
  <entry>
    <title>EP4CE10 Verilog例程（9）Altera  FIFO核应用</title>
    <link href="https://sirius-tblog.github.io/posts/1307021646.html"/>
    <id>https://sirius-tblog.github.io/posts/1307021646.html</id>
    <published>2022-11-07T22:19:18.000Z</published>
    <updated>2023-04-05T04:12:32.655Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Altera EP4CE10F17C8 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要通过FIFO核熟悉FIFO的读写及IP核使用。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>略</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>E1</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>M1</td><td>此处复位低有效</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>配置位宽<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b04c01.jpg" alt="" title="设计思路" />{width=“400px”}</p><h2 id="ip配置"><a class="markdownIt-Anchor" href="#ip配置"></a> IP配置</h2><p><img src="/assets/article/ep4ce10-verilog/examples_a009b05c01.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b05c02.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b05c03.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b05c04.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b05c05.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b05c06.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b05c07.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b05c08.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b05c09.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b05c10.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b05c11.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b05c12.jpg" alt="" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>    sys_clk    ,        </span><br><span class="line">    <span class="keyword">input</span>    sys_rst_n           </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span>            wrreq   ;         </span><br><span class="line"><span class="keyword">wire</span>    [<span class="number">7</span>:<span class="number">0</span>]   data    ;        </span><br><span class="line"><span class="keyword">wire</span>            wrempty ;       </span><br><span class="line"><span class="keyword">wire</span>            wrfull  ;        </span><br><span class="line"><span class="keyword">wire</span>    [<span class="number">7</span>:<span class="number">0</span>]   wrusedw ;        </span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span>            rdreq   ;        </span><br><span class="line"><span class="keyword">wire</span>    [<span class="number">7</span>:<span class="number">0</span>]   q       ;         </span><br><span class="line"><span class="keyword">wire</span>            rdempty ;        </span><br><span class="line"><span class="keyword">wire</span>            rdfull  ;        </span><br><span class="line"><span class="keyword">wire</span>    [<span class="number">7</span>:<span class="number">0</span>]   rdusedw ;        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fifo u_fifo(</span><br><span class="line">    <span class="variable">.wrclk</span>   ( sys_clk ),        </span><br><span class="line">    <span class="variable">.wrreq</span>   ( wrreq   ),        </span><br><span class="line">    <span class="variable">.data</span>    ( data    ),        </span><br><span class="line">    <span class="variable">.wrempty</span> ( wrempty ),       </span><br><span class="line">    <span class="variable">.wrfull</span>  ( wrfull  ),      </span><br><span class="line">    <span class="variable">.wrusedw</span> ( wrusedw ),       </span><br><span class="line">    </span><br><span class="line">    <span class="variable">.rdclk</span>   ( sys_clk ),       </span><br><span class="line">    <span class="variable">.rdreq</span>   ( rdreq   ),       </span><br><span class="line">    <span class="variable">.q</span>       ( q       ),       </span><br><span class="line">    <span class="variable">.rdempty</span> ( rdempty ),        </span><br><span class="line">    <span class="variable">.rdfull</span>  ( rdfull  ),        </span><br><span class="line">    <span class="variable">.rdusedw</span> ( rdusedw )        </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fifo_write u_fifo_wr(</span><br><span class="line">    <span class="variable">.clk</span>     (sys_clk ),       </span><br><span class="line">    <span class="variable">.rst_n</span>   (sys_rst_n),      </span><br><span class="line"></span><br><span class="line">    <span class="variable">.wrreq</span>   (wrreq   ),        </span><br><span class="line">    <span class="variable">.data</span>    (data    ),        </span><br><span class="line">    <span class="variable">.wrempty</span> (wrempty ),       </span><br><span class="line">    <span class="variable">.wrfull</span>  (wrfull  )        </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fifo_read u_fifo_rd(</span><br><span class="line">    <span class="variable">.clk</span>     (sys_clk ),         </span><br><span class="line">    <span class="variable">.rst_n</span>   (sys_rst_n),      </span><br><span class="line"></span><br><span class="line">    <span class="variable">.rdreq</span>   (rdreq   ),         </span><br><span class="line">    <span class="variable">.data</span>    (q       ),         </span><br><span class="line">    <span class="variable">.rdempty</span> (rdempty ),       </span><br><span class="line">    <span class="variable">.rdfull</span>  (rdfull  )          </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//fifo_write.v</span></span><br><span class="line"><span class="keyword">module</span> fifo_write</span><br><span class="line">(</span><br><span class="line"></span><br><span class="line">    <span class="keyword">input</span>                   clk    ,     </span><br><span class="line">    <span class="keyword">input</span>                   rst_n  ,       </span><br><span class="line"></span><br><span class="line">    <span class="keyword">input</span>                   wrempty,     </span><br><span class="line">    <span class="keyword">input</span>                   wrfull ,      </span><br><span class="line">    <span class="keyword">output</span>    <span class="keyword">reg</span>  [<span class="number">7</span>:<span class="number">0</span>]    data   ,     </span><br><span class="line">    <span class="keyword">output</span>    <span class="keyword">reg</span>           wrreq       </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>   [<span class="number">1</span>:<span class="number">0</span>]         state;             </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n) <span class="keyword">begin</span></span><br><span class="line">        wrreq &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        data  &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">        state &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">case</span>(state)</span><br><span class="line">            <span class="number">2&#x27;d0</span>: <span class="keyword">begin</span> </span><br><span class="line">                <span class="keyword">if</span>(wrempty) <span class="keyword">begin</span>    </span><br><span class="line">                    wrreq &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    state &lt;= <span class="number">2&#x27;d1</span>;</span><br><span class="line">                <span class="keyword">end</span> </span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    state &lt;= state;</span><br><span class="line">            <span class="keyword">end</span> </span><br><span class="line">            <span class="number">2&#x27;d1</span>: <span class="keyword">begin</span>              </span><br><span class="line">                <span class="keyword">if</span>(wrfull) <span class="keyword">begin</span></span><br><span class="line">                    wrreq &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    data  &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">                    state &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">begin</span>            </span><br><span class="line">                    wrreq &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    data  &lt;= data + <span class="number">1&#x27;d1</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span> </span><br><span class="line">            <span class="keyword">default</span>: state &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//fifo_read.v</span></span><br><span class="line"><span class="keyword">module</span> fifo_read</span><br><span class="line">(</span><br><span class="line"></span><br><span class="line">    <span class="keyword">input</span>                    clk    ,       </span><br><span class="line">    <span class="keyword">input</span>                    rst_n  ,    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">input</span>           [<span class="number">7</span>:<span class="number">0</span>]    data   ,      </span><br><span class="line">    <span class="keyword">input</span>                    rdfull ,     </span><br><span class="line">    <span class="keyword">input</span>                    rdempty,     </span><br><span class="line">    <span class="keyword">output</span>   <span class="keyword">reg</span>             rdreq      </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>   [<span class="number">7</span>:<span class="number">0</span>]                  data_fifo;   </span><br><span class="line"><span class="keyword">reg</span>   [<span class="number">1</span>:<span class="number">0</span>]                  state ;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n) <span class="keyword">begin</span></span><br><span class="line">        rdreq &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        data_fifo &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">case</span>(state)</span><br><span class="line">            <span class="number">2&#x27;d0</span>: <span class="keyword">begin</span></span><br><span class="line">                <span class="keyword">if</span>(rdfull) <span class="keyword">begin</span></span><br><span class="line">                    rdreq &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    state &lt;= <span class="number">2&#x27;d1</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    state &lt;= state;</span><br><span class="line">            <span class="keyword">end</span> </span><br><span class="line">            <span class="number">2&#x27;d1</span>: <span class="keyword">begin</span></span><br><span class="line">                <span class="keyword">if</span>(rdempty) <span class="keyword">begin</span></span><br><span class="line">                    rdreq &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    data_fifo &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">                    state  &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                    rdreq &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    data_fifo &lt;= data;</span><br><span class="line">                <span class="keyword">end</span> </span><br><span class="line">            <span class="keyword">end</span> </span><br><span class="line">            <span class="keyword">default</span>: state &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.txt</span></span><br><span class="line"></span><br><span class="line">To,  Location</span><br><span class="line">sys_clk,    PIN_E1</span><br><span class="line">sys_rst_n,    PIN_M1</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns / 1ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo inst_fifo_rw</span><br><span class="line">   (</span><br><span class="line">    <span class="variable">.sys_rst_n</span>(sys_rst_n), </span><br><span class="line">    <span class="variable">.sys_clk</span>(sys_clk)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br />“启动-复位释放-写状态机IDEL-写状态机WRITE”过程,可以看到由空到非空状态 data、wrempty、wrfull、q、rdempty、rdfull与rdusedw、wrusedw的关系<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b07c01.jpg" alt="" title="仿真结果" /><br />“写状态机WRITE”阶段的FIFO核的状态变化，可以看到由非满到满状态 data、wrfull、rdfull、q与rdusedw、wrusedw的关系<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b07c02.jpg" alt="" title="仿真结果" /><br />“写状态机-读状态机”过程的FIFO核的状态变化，可以看到由满到非满状态 data、wrfull、rdfull、q与rdusedw、wrusedw的关系<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b07c03.jpg" alt="" title="仿真结果" /><br />“读状态机READ”阶段的FIFO核的状态变化，可以看到由非空到空状态 din、almost_empty、empty与rd_count、wr_count的关系<br /><img src="/assets/article/ep4ce10-verilog/examples_a009b07c04.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Altera-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="EP4CE10 型" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/EP4CE10-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="Altera" scheme="https://sirius-tblog.github.io/tags/Altera/"/>
    
    <category term="EP4CE10" scheme="https://sirius-tblog.github.io/tags/EP4CE10/"/>
    
  </entry>
  
  <entry>
    <title>EP4CE10 Verilog例程（8）Altera  RAM核应用</title>
    <link href="https://sirius-tblog.github.io/posts/1379072265.html"/>
    <id>https://sirius-tblog.github.io/posts/1379072265.html</id>
    <published>2022-11-07T21:49:18.000Z</published>
    <updated>2023-04-05T04:12:30.113Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Altera EP4CE10F17C8 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要通过RAM核熟悉RAM的读写及IP核使用。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br />略</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>E1</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>M1</td><td>此处复位低有效</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>使用IP核构建位宽为8，深度为32的单端口RAM，并进行读写测试。</p><h2 id="ip配置"><a class="markdownIt-Anchor" href="#ip配置"></a> IP配置</h2><p><img src="/assets/article/ep4ce10-verilog/examples_a008b05c01.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b05c02.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b05c03.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b05c04.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b05c05.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b05c06.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b05c07.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b05c08.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b05c09.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b05c10.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b05c11.jpg" alt="" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n</span><br><span class="line">);</span><br><span class="line">  <span class="keyword">wire</span> ram_en;</span><br><span class="line">  <span class="keyword">wire</span> ram_wea;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">4</span>:<span class="number">0</span>] ram_addr ;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] ram_wr_data ;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] ram_rd_data ;</span><br><span class="line"></span><br><span class="line">ram_rw inst_rw_ram (</span><br><span class="line">  <span class="variable">.clk</span>(sys_clk),     </span><br><span class="line">  <span class="variable">.rst_n</span>(sys_rst_n),     </span><br><span class="line">  <span class="variable">.ram_en</span>(ram_en),       </span><br><span class="line">  <span class="variable">.ram_wea</span>(ram_wea),      </span><br><span class="line">  <span class="variable">.ram_addr</span>(ram_addr), </span><br><span class="line">  <span class="variable">.ram_wr_data</span>(ram_wr_data),    </span><br><span class="line">  <span class="variable">.ram_rd_data</span>(ram_rd_data)   </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">ram_1portinst_IP_ram (</span><br><span class="line"><span class="variable">.address</span> ( ram_addr ),</span><br><span class="line"><span class="variable">.clock</span> ( sys_clk ),</span><br><span class="line"><span class="variable">.data</span> ( ram_wr_data ),</span><br><span class="line"><span class="variable">.rden</span> ( ram_en ),</span><br><span class="line"><span class="variable">.wren</span> ( ram_wea ),</span><br><span class="line"><span class="variable">.q</span> ( ram_rd_data )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ram_rw.v</span></span><br><span class="line"><span class="keyword">module</span> ram_rw(</span><br><span class="line">  <span class="keyword">input</span> clk ,</span><br><span class="line">  <span class="keyword">input</span> rst_n ,</span><br><span class="line">  <span class="keyword">output</span> ram_en ,</span><br><span class="line">  <span class="keyword">output</span> ram_wea ,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">4</span>:<span class="number">0</span>] ram_addr ,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] ram_wr_data,</span><br><span class="line">  <span class="keyword">input</span> [<span class="number">7</span>:<span class="number">0</span>] ram_rd_data</span><br><span class="line">);</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">0</span>] rw_cnt ;</span><br><span class="line"><span class="keyword">assign</span> ram_en = rst_n;</span><br><span class="line"><span class="keyword">assign</span> ram_wea = (rw_cnt &lt;= <span class="number">6&#x27;d31</span> &amp;&amp; ram_en == <span class="number">1&#x27;b1</span>) ? <span class="number">1&#x27;b1</span> : <span class="number">1&#x27;b0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(rst_n == <span class="number">1&#x27;b0</span>)</span><br><span class="line">    rw_cnt &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(rw_cnt == <span class="number">6&#x27;d63</span>)</span><br><span class="line">    rw_cnt &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    rw_cnt &lt;= rw_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(rst_n == <span class="number">1&#x27;b0</span>)</span><br><span class="line">    ram_wr_data &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(rw_cnt &lt;= <span class="number">6&#x27;d31</span>)</span><br><span class="line">    ram_wr_data &lt;= ram_wr_data + <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    ram_wr_data &lt;= <span class="number">1&#x27;b0</span> ;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(rst_n == <span class="number">1&#x27;b0</span>)</span><br><span class="line">    ram_addr &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(ram_addr == <span class="number">5&#x27;d31</span>)</span><br><span class="line">    ram_addr &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    ram_addr &lt;= ram_addr + <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.txt</span></span><br><span class="line"></span><br><span class="line">To,  Location</span><br><span class="line">sys_clk,    PIN_E1</span><br><span class="line">sys_rst_n,    PIN_M1</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns / 1ps</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo inst_ram_rw</span><br><span class="line">   (</span><br><span class="line">    <span class="variable">.sys_rst_n</span>(sys_rst_n), </span><br><span class="line">    <span class="variable">.sys_clk</span>(sys_clk)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br />写RAM过程<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b07c01.jpg" alt="" title="仿真结果" /><br />读RAM过程<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b07c02.jpg" alt="" title="仿真结果" /><br />[测试]只启用RAM写使能<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b07c03.jpg" alt="" title="仿真结果" /><br />[测试]只启用RAM读使能<br /><img src="/assets/article/ep4ce10-verilog/examples_a008b07c04.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Altera-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="EP4CE10 型" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/EP4CE10-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="Altera" scheme="https://sirius-tblog.github.io/tags/Altera/"/>
    
    <category term="EP4CE10" scheme="https://sirius-tblog.github.io/tags/EP4CE10/"/>
    
  </entry>
  
  <entry>
    <title>EP4CE10 Verilog例程（6）动态数码管显示</title>
    <link href="https://sirius-tblog.github.io/posts/1907837786.html"/>
    <id>https://sirius-tblog.github.io/posts/1907837786.html</id>
    <published>2022-11-07T20:59:18.000Z</published>
    <updated>2023-04-05T04:11:43.006Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。</li></ul></blockquote><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
</summary>
      
    
    
    
    <category term="Altera-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="EP4CE10 型" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/EP4CE10-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="Altera" scheme="https://sirius-tblog.github.io/tags/Altera/"/>
    
    <category term="EP4CE10" scheme="https://sirius-tblog.github.io/tags/EP4CE10/"/>
    
  </entry>
  
  <entry>
    <title>EP4CE10 Verilog例程（5）静态数码管显示</title>
    <link href="https://sirius-tblog.github.io/posts/2432118836.html"/>
    <id>https://sirius-tblog.github.io/posts/2432118836.html</id>
    <published>2022-11-07T20:49:18.000Z</published>
    <updated>2023-04-08T10:00:59.150Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Altera EP4CE10F17C8 。<br />控制对象：8段数码管。<br /><img src="/assets/article/ep4ce10-verilog/examples_a005b01c01.jpg" alt="" title="常见8段数码管实物" /></p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现8段数码管显示的效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/ep4ce10-verilog/examples_a005b03c01.jpg" alt="" title="数码管内部连接" /><br /><img src="/assets/article/ep4ce10-verilog/examples_a005b03c02.jpg" alt="" title="硬件电路连接" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>E1</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>M1</td><td>此处复位低有效</td></tr><tr><td>seg_led[0]</td><td>output</td><td>M11</td><td>数码管段选a</td></tr><tr><td>seg_led[1]</td><td>output</td><td>N12</td><td>数码管段选b</td></tr><tr><td>seg_led[2]</td><td>output</td><td>C9</td><td>数码管段选c</td></tr><tr><td>seg_led[3]</td><td>output</td><td>N13</td><td>数码管段选d</td></tr><tr><td>seg_led[4]</td><td>output</td><td>M10</td><td>数码管段选e</td></tr><tr><td>seg_led[5]</td><td>output</td><td>N11</td><td>数码管段选f</td></tr><tr><td>seg_led[6]</td><td>output</td><td>P11</td><td>数码管段选g</td></tr><tr><td>seg_led[7]</td><td>output</td><td>D9</td><td>数码管段选h</td></tr><tr><td>seg_sel[0]</td><td>output</td><td>N16</td><td>数码管位选0</td></tr><tr><td>seg_sel[1]</td><td>output</td><td>N15</td><td>数码管位选1</td></tr><tr><td>seg_sel[2]</td><td>output</td><td>P16</td><td>数码管位选2</td></tr><tr><td>seg_sel[3]</td><td>output</td><td>P15</td><td>数码管位选3</td></tr><tr><td>seg_sel[4]</td><td>output</td><td>R16</td><td>数码管位选4</td></tr><tr><td>seg_sel[5]</td><td>output</td><td>T15</td><td>数码管位选5</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/ep4ce10-verilog/examples_a005b04c01.jpg" alt="" title="设计思路" /></p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">5</span>:<span class="number">0</span>] seg_sel,</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">7</span>:<span class="number">0</span>] seg_led</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">parameter</span> TIME_SHOW = <span class="number">25&#x27;d25000000</span>; <span class="comment">//驻留时间</span></span><br><span class="line"><span class="keyword">wire</span> increase_flag;</span><br><span class="line"></span><br><span class="line">seg_display_static inst_seg_display_static</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.seg_sel</span>(seg_sel),</span><br><span class="line">  <span class="variable">.seg_led</span>(seg_led),</span><br><span class="line">  <span class="variable">.increase_flag</span>(increase_flag)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">time_count </span><br><span class="line">#(</span><br><span class="line"><span class="variable">.MAX_NUM</span>(TIME_SHOW )</span><br><span class="line">)</span><br><span class="line">inst_time_count</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.flag</span>(increase_flag)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>数码管静态驱动及显示样式</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//seg_display_static.v</span></span><br><span class="line"><span class="keyword">module</span> seg_display_static</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">input</span> increase_flag,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">0</span>] seg_sel,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] seg_led</span><br><span class="line">);</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] num;</span><br><span class="line"></span><br><span class="line"><span class="comment">//位选驱动，硬件连接中低电平驱动PNP三极管导通</span></span><br><span class="line"><span class="keyword">always</span> @ (<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (!rstn)</span><br><span class="line">    seg_sel &lt;= <span class="number">6&#x27;b111111</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    seg_sel &lt;= <span class="number">6&#x27;b000000</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @ (<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (!rstn)</span><br><span class="line">    num &lt;= <span class="number">4&#x27;h0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(increase_flag)</span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(num &lt; <span class="number">4&#x27;hf</span>)</span><br><span class="line">        num &lt;= num + <span class="number">1&#x27;b1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      num &lt;= <span class="number">4&#x27;h0</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    num &lt;= num;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @ (<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (!rstn)  <span class="comment">//全点亮</span></span><br><span class="line">    seg_led &lt;= <span class="number">8&#x27;b0000_0000</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">case</span>(num)  <span class="comment">//共阳极型驱动，低电平点亮</span></span><br><span class="line">      <span class="number">4&#x27;h0</span> : seg_led &lt;= <span class="number">8&#x27;b1100_0000</span>;<span class="comment">//&#x27;hC0</span></span><br><span class="line">      <span class="number">4&#x27;h1</span> : seg_led &lt;= <span class="number">8&#x27;b1111_1001</span>;<span class="comment">//&#x27;hF9</span></span><br><span class="line">      <span class="number">4&#x27;h2</span> : seg_led &lt;= <span class="number">8&#x27;b1010_0100</span>;<span class="comment">//&#x27;hA4</span></span><br><span class="line">      <span class="number">4&#x27;h3</span> : seg_led &lt;= <span class="number">8&#x27;b1011_0000</span>;<span class="comment">//&#x27;hB0</span></span><br><span class="line">      <span class="number">4&#x27;h4</span> : seg_led &lt;= <span class="number">8&#x27;b1001_1001</span>;<span class="comment">//&#x27;h99</span></span><br><span class="line">      <span class="number">4&#x27;h5</span> : seg_led &lt;= <span class="number">8&#x27;b1001_0010</span>;<span class="comment">//&#x27;h92</span></span><br><span class="line">      <span class="number">4&#x27;h6</span> : seg_led &lt;= <span class="number">8&#x27;b1000_0010</span>;<span class="comment">//&#x27;h82</span></span><br><span class="line">      <span class="number">4&#x27;h7</span> : seg_led &lt;= <span class="number">8&#x27;b1111_1000</span>;<span class="comment">//&#x27;hF8</span></span><br><span class="line">      <span class="number">4&#x27;h8</span> : seg_led &lt;= <span class="number">8&#x27;b1000_0000</span>;<span class="comment">//&#x27;h80</span></span><br><span class="line">      <span class="number">4&#x27;h9</span> : seg_led &lt;= <span class="number">8&#x27;b1001_0000</span>;<span class="comment">//&#x27;h90</span></span><br><span class="line">      <span class="number">4&#x27;ha</span> : seg_led &lt;= <span class="number">8&#x27;b1000_1000</span>;<span class="comment">//&#x27;h88</span></span><br><span class="line">      <span class="number">4&#x27;hb</span> : seg_led &lt;= <span class="number">8&#x27;b1000_0011</span>;<span class="comment">//&#x27;h83</span></span><br><span class="line">      <span class="number">4&#x27;hc</span> : seg_led &lt;= <span class="number">8&#x27;b1100_0110</span>;<span class="comment">//&#x27;hC6</span></span><br><span class="line">      <span class="number">4&#x27;hd</span> : seg_led &lt;= <span class="number">8&#x27;b1010_0001</span>;<span class="comment">//&#x27;hA1</span></span><br><span class="line">      <span class="number">4&#x27;he</span> : seg_led &lt;= <span class="number">8&#x27;b1000_0110</span>;<span class="comment">//&#x27;h86</span></span><br><span class="line">      <span class="number">4&#x27;hf</span> : seg_led &lt;= <span class="number">8&#x27;b1000_1110</span>;<span class="comment">//&#x27;h8E</span></span><br><span class="line">      <span class="keyword">default</span> : seg_led &lt;= <span class="number">8&#x27;b1100_0000</span>;<span class="comment">//&#x27;hC0</span></span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>单个样式显示驻留时长</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//time_count.v</span></span><br><span class="line"><span class="keyword">module</span> time_count</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> flag</span><br><span class="line">);</span><br><span class="line"><span class="keyword">parameter</span> MAX_NUM = <span class="number">25000000</span>;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">24</span>:<span class="number">0</span>] cnt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (!rstn) </span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    cnt &lt;= <span class="number">24&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(cnt &lt; MAX_NUM - <span class="number">1&#x27;b1</span>) </span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    cnt &lt;= cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    flag &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">    cnt &lt;= <span class="number">24&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># demo.txt</span></span><br><span class="line"></span><br><span class="line">To,  Location</span><br><span class="line">sys_clk,    PIN_E1</span><br><span class="line">sys_rst_n,    PIN_M1</span><br><span class="line">seg_sel[0],    PIN_N16</span><br><span class="line">seg_sel[1],    PIN_N15</span><br><span class="line">seg_sel[2],    PIN_P16</span><br><span class="line">seg_sel[3],    PIN_P15</span><br><span class="line">seg_sel[4],    PIN_R16</span><br><span class="line">seg_sel[5],    PIN_T15</span><br><span class="line"></span><br><span class="line">seg_led[0],    PIN_M11</span><br><span class="line">seg_led[1],    PIN_N12</span><br><span class="line">seg_led[2],    PIN_C9</span><br><span class="line">seg_led[3],    PIN_N13</span><br><span class="line">seg_led[4],    PIN_M10</span><br><span class="line">seg_led[5],    PIN_N11</span><br><span class="line">seg_led[6],    PIN_P11</span><br><span class="line">seg_led[7],    PIN_D9</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] seg_led;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">5</span>:<span class="number">0</span>] seg_sel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  #<span class="number">20</span></span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>#<span class="number">10</span> sys_clk = ~sys_clk; </span><br><span class="line"></span><br><span class="line">demo </span><br><span class="line">#(</span><br><span class="line">  <span class="variable">.TIME_SHOW</span> (<span class="number">25&#x27;d250</span>)  <span class="comment">//驻留时间</span></span><br><span class="line">)</span><br><span class="line">inst_seg_display_static</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.sys_clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.sys_rst_n</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.seg_led</span> (seg_led),</span><br><span class="line">  <span class="variable">.seg_sel</span>(seg_sel)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br /><img src="/assets/article/ep4ce10-verilog/examples_a005b06c01.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Altera-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="EP4CE10 型" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/EP4CE10-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="Altera" scheme="https://sirius-tblog.github.io/tags/Altera/"/>
    
    <category term="EP4CE10" scheme="https://sirius-tblog.github.io/tags/EP4CE10/"/>
    
  </entry>
  
  <entry>
    <title>EP4CE10 Verilog例程（7）Altera PLL核应用</title>
    <link href="https://sirius-tblog.github.io/posts/3825430347.html"/>
    <id>https://sirius-tblog.github.io/posts/3825430347.html</id>
    <published>2022-11-07T20:49:18.000Z</published>
    <updated>2023-04-05T04:12:28.309Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Altera EP4CE10F17C8 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要通过PLL这一时钟IP核实现对官方IP应用的认知。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b03c02.jpg" alt="" title="硬件端口" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>E1</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>M1</td><td>此处复位低有效</td></tr><tr><td>clk_100M</td><td>output</td><td>D1</td><td>100MHz时钟</td></tr><tr><td>clk_100M_pd</td><td>output</td><td>F3</td><td>100MHz时钟,反相</td></tr><tr><td>clk_50M</td><td>output</td><td>F1</td><td>50MHz时钟</td></tr><tr><td>clk_25M</td><td>output</td><td>F2</td><td>25MHz时钟</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>通过参数配置PLL核，实现分频和倍频以及相位偏移。</p><h2 id="ip配置"><a class="markdownIt-Anchor" href="#ip配置"></a> IP配置</h2><p>参数：单端输入50MHz,从4输出端口分别输出100MHz倍频钟、反相100MHz、50MHz、25MHz分频。<br />IP集路径<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c01.jpg" alt="" />{width=“400px”}<br />搜索并选用IP核<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c02.jpg" alt="" />{width=“400px”}<br />命名及选用类型<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c03.jpg" alt="" />{width=“400px”}<br />设置输入时钟及模式<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c04.jpg" alt="" />{width=“400px”}<br />启用复位端口及锁定状态标志<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c05.jpg" alt="" />{width=“400px”}<br />无关参量，默认<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c06.jpg" alt="" />{width=“400px”}<br />是否增加输入时钟，默认单端输入<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c07.jpg" alt="" />{width=“400px”}<br />无关参量，默认<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c08.jpg" alt="" />{width=“400px”}<br />第一路输出时钟参数设置<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c09.jpg" alt="" />{width=“400px”}<br />第二路输出时钟参数设置<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c10.jpg" alt="" />{width=“400px”}<br />第三路输出时钟参数设置<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c11.jpg" alt="" />{width=“400px”}<br />第四路输出时钟参数设置<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c12.jpg" alt="" />{width=“400px”}<br />第五路输出时钟参数设置，不需要就不启用<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c13.jpg" alt="" />{width=“400px”}<br />添加mif仿真库,默认<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c14.jpg" alt="" />{width=“400px”}<br />产生的文件，根据需要选择<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c15.jpg" alt="" />{width=“400px”}<br />将设置的IP核生成后加入到当前工程中<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c16.jpg" alt="" />{width=“400px”}<br />IP加入到工程中，查看路径<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c17.jpg" alt="" />{width=“400px”}<br />已添加IP核特性概况以及重配置路径（双击进入参数配置界面）<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b05c18.jpg" alt="" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> clk_100M,</span><br><span class="line">  <span class="keyword">output</span> clk_100M_pd,</span><br><span class="line">  <span class="keyword">output</span> clk_50M,</span><br><span class="line">  <span class="keyword">output</span> clk_25M</span><br><span class="line">);</span><br><span class="line">  <span class="keyword">wire</span> locked;</span><br><span class="line"></span><br><span class="line">  clk_wiz_0 inst_IP_clock</span><br><span class="line">   (</span><br><span class="line">    <span class="comment">// Clock out ports</span></span><br><span class="line">    <span class="variable">.clk_out1</span>(clk_100M),     <span class="comment">// output clk_out1</span></span><br><span class="line">    <span class="variable">.clk_out2</span>(clk_100M_pd),     <span class="comment">// output clk_out2</span></span><br><span class="line">    <span class="variable">.clk_out3</span>(clk_50M),     <span class="comment">// output clk_out3</span></span><br><span class="line">    <span class="variable">.clk_out4</span>(clk_25M),     <span class="comment">// output clk_out4</span></span><br><span class="line">    <span class="comment">// Status and control signals</span></span><br><span class="line">    <span class="variable">.reset</span>(!sys_rst_n), <span class="comment">// input reset</span></span><br><span class="line">    <span class="variable">.locked</span>(locked),       <span class="comment">// output locked</span></span><br><span class="line">   <span class="comment">// Clock in ports</span></span><br><span class="line">    <span class="variable">.clk_in1</span>(sys_clk));      <span class="comment">// input clk_in1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.txt</span></span><br><span class="line"></span><br><span class="line">To,  Location</span><br><span class="line">sys_clk,    PIN_E1</span><br><span class="line">sys_rst_n,    PIN_M1</span><br><span class="line">clk_100M,    PIN_D1</span><br><span class="line">clk_100M_pd,    PIN_F3</span><br><span class="line">clk_50M,    PIN_F1</span><br><span class="line">clk_25M,    PIN_F2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns/1ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">wire</span> clk_100M;</span><br><span class="line">  <span class="keyword">wire</span> clk_100M_pd;</span><br><span class="line">  <span class="keyword">wire</span> clk_50M;</span><br><span class="line">  <span class="keyword">wire</span> clk_25M;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo inst_clock_gen</span><br><span class="line">   (</span><br><span class="line">    <span class="comment">// Clock out ports</span></span><br><span class="line">    <span class="variable">.clk_100M</span>(clk_100M),     <span class="comment">// output clk_out1</span></span><br><span class="line">    <span class="variable">.clk_100M_pd</span>(clk_100M_pd),     <span class="comment">// output clk_out2</span></span><br><span class="line">    <span class="variable">.clk_50M</span>(clk_50M),     <span class="comment">// output clk_out3</span></span><br><span class="line">    <span class="variable">.clk_25M</span>(clk_25M),     <span class="comment">// output clk_out4</span></span><br><span class="line">    <span class="comment">// Status and control signals</span></span><br><span class="line">    <span class="variable">.sys_rst_n</span>(sys_rst_n), <span class="comment">// input reset</span></span><br><span class="line">   <span class="comment">// Clock in ports</span></span><br><span class="line">    <span class="variable">.sys_clk</span>(sys_clk));      <span class="comment">// input clk_in1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br />从仿真结果上看，Locked拉高后输出时钟才稳定，使用时钟IP时，应注意这一特征，待locked拉起时使用输出的时钟。<br /><img src="/assets/article/ep4ce10-verilog/examples_a007b07c01.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Altera-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="EP4CE10 型" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/EP4CE10-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="Altera" scheme="https://sirius-tblog.github.io/tags/Altera/"/>
    
    <category term="EP4CE10" scheme="https://sirius-tblog.github.io/tags/EP4CE10/"/>
    
  </entry>
  
  <entry>
    <title>EP4CE10 Verilog例程（4）触摸键控灯</title>
    <link href="https://sirius-tblog.github.io/posts/3070638990.html"/>
    <id>https://sirius-tblog.github.io/posts/3070638990.html</id>
    <published>2022-11-07T20:29:18.000Z</published>
    <updated>2023-04-08T10:00:36.087Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Altera EP4CE10F17C8 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现触摸式电容按键控制灯的开关效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/ep4ce10-verilog/examples_a004b03c01.jpg" alt="" title="硬件电路连接" /><br />FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>E1</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>M1</td><td>此处复位低有效</td></tr><tr><td>led</td><td>output</td><td>D11</td><td>LED0，高电平点亮</td></tr><tr><td>touch_key</td><td>input</td><td>F8</td><td>触摸键信号</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/ep4ce10-verilog/examples_a004b04c01.jpg" alt="" title="设计思路" /></p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line"><span class="keyword">input</span> sys_clk,</span><br><span class="line"><span class="keyword">input</span> sys_rst_n,</span><br><span class="line"><span class="keyword">output</span> led,</span><br><span class="line"><span class="keyword">input</span> touch_key</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">touch_led inst_touch_led</span><br><span class="line">(</span><br><span class="line"><span class="variable">.clk</span> (sys_clk),</span><br><span class="line"><span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line"><span class="variable">.touch_key</span> (touch_key),</span><br><span class="line"><span class="variable">.led</span>(led)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//touch_led.v</span></span><br><span class="line"><span class="keyword">module</span> touch_led</span><br><span class="line">(</span><br><span class="line"><span class="keyword">input</span> clk,</span><br><span class="line"><span class="keyword">input</span> rstn,</span><br><span class="line"><span class="keyword">input</span> touch_key,</span><br><span class="line"><span class="keyword">output</span> <span class="keyword">reg</span> led</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] touch_key_r;</span><br><span class="line"><span class="keyword">wire</span> touch_en;</span><br><span class="line"></span><br><span class="line"><span class="comment">//check posedge</span></span><br><span class="line"><span class="keyword">assign</span> touch_en = (~touch_key_r[<span class="number">1</span>]) &amp; touch_key_r[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!rstn)</span><br><span class="line">touch_key_r &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">touch_key_r &lt;= &#123;touch_key_r[<span class="number">0</span>],touch_key&#125;;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//output value</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!rstn)</span><br><span class="line">led &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(touch_en)</span><br><span class="line">led &lt;= ~led;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">led &lt;= led;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># demo.txt</span></span><br><span class="line"></span><br><span class="line">To,  Location</span><br><span class="line">sys_clk,    PIN_E1</span><br><span class="line">sys_rst_n,    PIN_M1</span><br><span class="line">touch_key,    PIN_F8</span><br><span class="line">led,    PIN_D11</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line"><span class="keyword">reg</span> sys_clk;</span><br><span class="line"><span class="keyword">reg</span> sys_rst_n;</span><br><span class="line"><span class="keyword">wire</span> led;</span><br><span class="line"><span class="keyword">reg</span> key;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">#<span class="number">20</span></span><br><span class="line">sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">#<span class="number">30</span> <span class="comment">//50ms down</span></span><br><span class="line">key = <span class="number">1&#x27;b1</span>;</span><br><span class="line">#<span class="number">200</span> <span class="comment">//250ms up</span></span><br><span class="line">key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">#<span class="number">30</span> <span class="comment">//280ms down</span></span><br><span class="line">key = <span class="number">1&#x27;b1</span>;</span><br><span class="line">#<span class="number">200</span> <span class="comment">//480ms up</span></span><br><span class="line">key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">#<span class="number">30</span> <span class="comment">//510ms down</span></span><br><span class="line">key = <span class="number">1&#x27;b1</span>;</span><br><span class="line">#<span class="number">200</span> <span class="comment">//710ms up</span></span><br><span class="line">key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">#<span class="number">30</span> <span class="comment">//740ms down</span></span><br><span class="line">key = <span class="number">1&#x27;b1</span>;</span><br><span class="line">#<span class="number">200</span> <span class="comment">//940ms up</span></span><br><span class="line">key = <span class="number">1&#x27;b0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>#<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line"></span><br><span class="line">demo inst_touch_led</span><br><span class="line">(</span><br><span class="line"><span class="variable">.sys_clk</span> (sys_clk),</span><br><span class="line"><span class="variable">.sys_rst_n</span> (sys_rst_n),</span><br><span class="line"><span class="variable">.touch_key</span> (key),</span><br><span class="line"><span class="variable">.led</span>(led)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br /><img src="/assets/article/ep4ce10-verilog/examples_a004b06c01.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Altera-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="EP4CE10 型" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/EP4CE10-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="Altera" scheme="https://sirius-tblog.github.io/tags/Altera/"/>
    
    <category term="EP4CE10" scheme="https://sirius-tblog.github.io/tags/EP4CE10/"/>
    
  </entry>
  
  <entry>
    <title>EP4CE10 Verilog例程（3）按键控蜂鸣器</title>
    <link href="https://sirius-tblog.github.io/posts/3652302925.html"/>
    <id>https://sirius-tblog.github.io/posts/3652302925.html</id>
    <published>2022-11-07T19:59:18.000Z</published>
    <updated>2023-04-08T10:00:21.618Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Altera EP4CE10F17C8 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现点触式按键控制有源蜂鸣器发声效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/ep4ce10-verilog/examples_a003b03c01.jpg" alt="" title="硬件电路连接1" /><br /><img src="/assets/article/ep4ce10-verilog/examples_a003b03c02.jpg" alt="" title="硬件电路连接2" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>E1</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>M1</td><td>此处复位低有效</td></tr><tr><td>beep</td><td>output</td><td>D12</td><td>BEEP，高电平驱动</td></tr><tr><td>key[0]</td><td>input</td><td>E16</td><td>KEY0，低电平按下</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/ep4ce10-verilog/examples_a003b04c01.jpg" alt="" title="设计思路" /><br /><img src="/assets/article/ep4ce10-verilog/examples_a003b04c02.jpg" alt="" title="消抖思路" /></p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> beep,</span><br><span class="line">  <span class="keyword">input</span> key</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span> key_value;</span><br><span class="line"><span class="keyword">wire</span> key_flag;</span><br><span class="line"></span><br><span class="line">key_debounce inst_key_debounce</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.key</span> (key),</span><br><span class="line">  <span class="variable">.key_flag</span> (key_flag),</span><br><span class="line">  <span class="variable">.key_value</span> (key_value)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">beep_ctrl inst_beep_ctrl</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.key_flag</span> (key_flag),</span><br><span class="line">  <span class="variable">.key_value</span> (key_value),</span><br><span class="line">  <span class="variable">.beep</span> (beep)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//key_debounce.v</span></span><br><span class="line"><span class="keyword">module</span> key_debounce</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">input</span> key,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> key_value,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> key_flag</span><br><span class="line">);</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] delay_cnt;</span><br><span class="line"><span class="keyword">reg</span> key_reg;</span><br><span class="line"></span><br><span class="line"><span class="comment">//delay time</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">key_reg &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">delay_cnt &lt;= <span class="number">32&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">key_reg &lt;= key;</span><br><span class="line"><span class="keyword">if</span>(key_reg!=key)<span class="comment">//in shaked</span></span><br><span class="line">delay_cnt &lt;= <span class="number">32&#x27;d1000000</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(key_reg==key)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(delay_cnt &gt; <span class="number">32&#x27;d0</span>)</span><br><span class="line">delay_cnt &lt;= delay_cnt-<span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">delay_cnt &lt;= delay_cnt;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//output value</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">key_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">key_value &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(delay_cnt == <span class="number">32&#x27;d1</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">key_flag &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">key_value &lt;= key;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">key_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">key_value &lt;= key;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">//beep_ctrl.v</span><br><span class="line">module beep_ctrl</span><br><span class="line">(</span><br><span class="line">  input clk,</span><br><span class="line">  input rstn,</span><br><span class="line">  output reg beep,</span><br><span class="line">  input key_value,</span><br><span class="line">  input key_flag</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">always@(posedge clk or negedge rstn)</span><br><span class="line">begin</span><br><span class="line">if(!rstn)</span><br><span class="line">beep &lt;= 1&#x27;b1;</span><br><span class="line">else</span><br><span class="line">begin</span><br><span class="line">if(key_flag&amp;&amp;(~key_value))</span><br><span class="line">beep &lt;= ~beep;</span><br><span class="line">else</span><br><span class="line">beep &lt;= beep;</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>管脚约束(表头列出项中，默认default值应在之后的列中留空，如下)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># demo.txt</span></span><br><span class="line"></span><br><span class="line">To,  Location,  Current Strength</span><br><span class="line">sys_clk,    PIN_E1,</span><br><span class="line">sys_rst_n,    PIN_M1,</span><br><span class="line">beep,    PIN_D12,  12mA</span><br><span class="line">key,    PIN_E16,</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">wire</span> beep;</span><br><span class="line">  <span class="keyword">reg</span> key;</span><br><span class="line">  <span class="keyword">parameter</span> T=<span class="number">1000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  key = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  #<span class="number">20</span></span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="variable">#(30*T)</span>  <span class="comment">//30ms down</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>; </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>; </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>; </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(170*T)</span>  <span class="comment">//240ms  up</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>;  </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>; </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>; </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="variable">#(170*T)</span>  <span class="comment">//450ms  down</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>;  </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>; </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>; </span><br><span class="line">  <span class="variable">#(30*T)</span>  <span class="comment">//520ms  up</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>#<span class="number">10</span> sys_clk = ~sys_clk; </span><br><span class="line"></span><br><span class="line">demo inst_key_beep</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.sys_clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.sys_rst_n</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.beep</span> (beep),</span><br><span class="line">  <span class="variable">.key</span> (key)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果(联合Modelsim工具)：<br /><img src="/assets/article/ep4ce10-verilog/examples_a003b06c01.jpg" alt="" title="仿真结果" /><br /><img src="/assets/article/ep4ce10-verilog/examples_a003b06c02.jpg" alt="" title="仿真细节" /><br /><img src="/assets/article/ep4ce10-verilog/examples_a003b06c03.jpg" alt="" title="仿真细节" /><br /><img src="/assets/article/ep4ce10-verilog/examples_a003b06c04.jpg" alt="" title="仿真细节" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Altera-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="EP4CE10 型" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/EP4CE10-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="Altera" scheme="https://sirius-tblog.github.io/tags/Altera/"/>
    
    <category term="EP4CE10" scheme="https://sirius-tblog.github.io/tags/EP4CE10/"/>
    
  </entry>
  
  <entry>
    <title>EP4CE10 Verilog例程（2）按键控灯</title>
    <link href="https://sirius-tblog.github.io/posts/3020230158.html"/>
    <id>https://sirius-tblog.github.io/posts/3020230158.html</id>
    <published>2022-11-07T19:29:18.000Z</published>
    <updated>2023-04-08T09:59:57.731Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Altera EP4CE10F17C8 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现点触式按键控制LED灯点亮的效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/ep4ce10-verilog/examples_a002b03c01.jpg" alt="" title="硬件电路连接" /><br /><img src="/assets/article/ep4ce10-verilog/examples_a002b03c02.jpg" alt="" title="硬件电路连接" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>E1</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>M1</td><td>此处复位低有效</td></tr><tr><td>led[0]</td><td>output</td><td>D11</td><td>LED0，高电平点亮</td></tr><tr><td>led[1]</td><td>output</td><td>C11</td><td>LED1，高电平点亮</td></tr><tr><td>led[2]</td><td>output</td><td>E10</td><td>LED2，高电平点亮</td></tr><tr><td>led[3]</td><td>output</td><td>F9</td><td>LED3，高电平点亮</td></tr><tr><td>key[0]</td><td>input</td><td>E16</td><td>KEY0，低电平按下</td></tr><tr><td>key[1]</td><td>input</td><td>E15</td><td>KEY1，低电平按下</td></tr><tr><td>key[2]</td><td>input</td><td>M2</td><td>KEY2，低电平按下</td></tr><tr><td>key[3]</td><td>input</td><td>M16</td><td>KEY3，低电平按下</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/ep4ce10-verilog/examples_a002b04c01.jpg" alt="" title="设计思路" /></p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] led,</span><br><span class="line">  <span class="keyword">input</span> [<span class="number">3</span>:<span class="number">0</span>] key</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">key_led inst_key_led</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.led</span> (led),</span><br><span class="line">  <span class="variable">.key</span> (key)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//key_led.v</span></span><br><span class="line"><span class="keyword">module</span> key_led</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] led,</span><br><span class="line">  <span class="keyword">input</span> [<span class="number">3</span>:<span class="number">0</span>] key</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">23</span>:<span class="number">0</span>] cnt;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] led_ctrl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//delay</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    cnt &lt;= <span class="number">24&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(cnt&lt;<span class="number">24&#x27;d10000000</span>)</span><br><span class="line">    cnt &lt;= cnt+<span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    cnt&lt;=<span class="number">24&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//control</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    led_ctrl &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(cnt==(<span class="number">24&#x27;d10000000</span>-<span class="number">1&#x27;b1</span>))</span><br><span class="line">    led_ctrl &lt;= led_ctrl+<span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    led_ctrl&lt;= led_ctrl;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//key</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">0</span>]==<span class="number">1&#x27;b0</span>)</span><br><span class="line">    <span class="keyword">case</span>(led_ctrl)</span><br><span class="line">      <span class="number">2&#x27;d0</span> : led &lt;= <span class="number">4&#x27;b1000</span>;</span><br><span class="line">      <span class="number">2&#x27;d1</span> : led &lt;= <span class="number">4&#x27;b0100</span>;</span><br><span class="line">      <span class="number">2&#x27;d2</span> : led &lt;= <span class="number">4&#x27;b0010</span>;</span><br><span class="line">      <span class="number">2&#x27;d3</span> : led &lt;= <span class="number">4&#x27;b0001</span>;</span><br><span class="line">      <span class="keyword">default</span> : led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">1</span>]==<span class="number">1&#x27;b0</span>)</span><br><span class="line">    <span class="keyword">case</span>(led_ctrl)</span><br><span class="line">      <span class="number">2&#x27;d0</span> : led &lt;= <span class="number">4&#x27;b0001</span>;</span><br><span class="line">      <span class="number">2&#x27;d1</span> : led &lt;= <span class="number">4&#x27;b0010</span>;</span><br><span class="line">      <span class="number">2&#x27;d2</span> : led &lt;= <span class="number">4&#x27;b0100</span>;</span><br><span class="line">      <span class="number">2&#x27;d3</span> : led &lt;= <span class="number">4&#x27;b1000</span>;</span><br><span class="line">      <span class="keyword">default</span> : led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">2</span>]==<span class="number">1&#x27;b0</span>)</span><br><span class="line">    <span class="keyword">case</span>(led_ctrl)</span><br><span class="line">      <span class="number">2&#x27;d0</span> : led &lt;= <span class="number">4&#x27;b1111</span>;</span><br><span class="line">      <span class="number">2&#x27;d1</span> : led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">      <span class="number">2&#x27;d2</span> : led &lt;= <span class="number">4&#x27;b1111</span>;</span><br><span class="line">      <span class="number">2&#x27;d3</span> : led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">      <span class="keyword">default</span> : led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">3</span>]==<span class="number">1&#x27;b0</span>)</span><br><span class="line">      led &lt;= <span class="number">4&#x27;b1111</span>;</span><br><span class="line">  <span class="keyword">else</span>  </span><br><span class="line">    led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.txt</span></span><br><span class="line"></span><br><span class="line">To,  Location</span><br><span class="line">sys_clk,    PIN_E1</span><br><span class="line">sys_rst_n,    PIN_M1</span><br><span class="line">led[0],    PIN_F9</span><br><span class="line">led[1],    PIN_E10</span><br><span class="line">led[2],    PIN_C11</span><br><span class="line">led[3],    PIN_D11</span><br><span class="line"></span><br><span class="line">key[0],    PIN_E16</span><br><span class="line">key[1],    PIN_E15</span><br><span class="line">key[2],    PIN_M2</span><br><span class="line">key[3],    PIN_M16</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns/1ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">parameter</span> T=<span class="number">20</span>;</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">3</span>:<span class="number">0</span>] led;</span><br><span class="line">  <span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] key;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  key = <span class="number">4&#x27;b1111</span>;</span><br><span class="line">  #T</span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  key[<span class="number">0</span>] = <span class="number">1&#x27;b0</span>;  <span class="comment">//down</span></span><br><span class="line">  <span class="variable">#(40000000*T)</span>  <span class="comment">//800</span></span><br><span class="line">  key[<span class="number">0</span>] = <span class="number">1&#x27;b1</span>;  <span class="comment">//up</span></span><br><span class="line">  key[<span class="number">1</span>] = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(40000000*T)</span></span><br><span class="line">  key[<span class="number">1</span>] = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  key[<span class="number">2</span>] = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(40000000*T)</span></span><br><span class="line">  key[<span class="number">2</span>] = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  key[<span class="number">3</span>] = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(40000000*T)</span></span><br><span class="line">  key[<span class="number">3</span>] = <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span><span class="variable">#(T/2)</span> sys_clk = ~sys_clk; </span><br><span class="line"></span><br><span class="line">demo inst_key_led</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.sys_clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.sys_rst_n</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.led</span> (led),</span><br><span class="line">  <span class="variable">.key</span> (key)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果(联合Modelsim工具)：<br /><img src="/assets/article/ep4ce10-verilog/examples_a002b06c01.jpg" alt="" title="仿真结果" /><br /><img src="/assets/article/ep4ce10-verilog/examples_a002b06c02.jpg" alt="" title="仿真细节" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Altera-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="EP4CE10 型" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/EP4CE10-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="Altera" scheme="https://sirius-tblog.github.io/tags/Altera/"/>
    
    <category term="EP4CE10" scheme="https://sirius-tblog.github.io/tags/EP4CE10/"/>
    
  </entry>
  
  <entry>
    <title>EP4CE10 Verilog例程（1）流水灯</title>
    <link href="https://sirius-tblog.github.io/posts/3765746710.html"/>
    <id>https://sirius-tblog.github.io/posts/3765746710.html</id>
    <published>2022-11-07T18:29:18.000Z</published>
    <updated>2023-04-08T09:59:26.836Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Altera EP4CE10F17C8 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现LED灯按顺序以一定时间间隔逐个点亮及熄灭的效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/ep4ce10-verilog/examples_a001b03c01.jpg" alt="" title="硬件电路连接" /></p><p><img src="../../../../../assets/article/ep4ce10-verilog/examples_a001b03c01.jpg" alt="硬件电路连接" /></p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>E1</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>M1</td><td>此处复位低有效</td></tr><tr><td>led[0]</td><td>output</td><td>D11</td><td>LED0，高电平点亮</td></tr><tr><td>led[1]</td><td>output</td><td>C11</td><td>LED1，高电平点亮</td></tr><tr><td>led[2]</td><td>output</td><td>E10</td><td>LED2，高电平点亮</td></tr><tr><td>led[3]</td><td>output</td><td>F9</td><td>LED3，高电平点亮</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/ep4ce10-verilog/examples_a001b04c01.jpg" alt="" title="设计思路" /></p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] led</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">flow_led inst_flow_led</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.led</span> (led)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//flow_led.v</span></span><br><span class="line"><span class="keyword">module</span> flow_led</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] led</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">25</span>:<span class="number">0</span>] cnt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)<span class="comment">//50MHz clk</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    cnt &lt;= <span class="number">26&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(cnt&lt;<span class="number">26&#x27;d10000000</span>)<span class="comment">//200ms</span></span><br><span class="line">    cnt &lt;= cnt+<span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    cnt = <span class="number">26&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)<span class="comment">//50MHz clk</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    led &lt;= <span class="number">4&#x27;b0001</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(cnt==(<span class="number">26&#x27;d10000000</span>-<span class="number">1&#x27;b1</span>))<span class="comment">//200ms</span></span><br><span class="line">    led &lt;= &#123;led[<span class="number">2</span>:<span class="number">0</span>],led[<span class="number">3</span>]&#125;;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    led &lt;= led;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.txt</span></span><br><span class="line"></span><br><span class="line">To,  Location</span><br><span class="line">sys_clk,    PIN_E1</span><br><span class="line">sys_rst_n,    PIN_M1</span><br><span class="line">led[0],    PIN_F9</span><br><span class="line">led[1],    PIN_E10</span><br><span class="line">led[2],    PIN_C11</span><br><span class="line">led[3],    PIN_D11</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns/1ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">3</span>:<span class="number">0</span>] led;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  #<span class="number">200</span></span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>#<span class="number">10</span> sys_clk = ~sys_clk; </span><br><span class="line"></span><br><span class="line">demo inst_flow_led</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.sys_clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.sys_rst_n</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.led</span> (led)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果(联合Modelsim工具)：<br /><img src="/assets/article/ep4ce10-verilog/examples_a001b06c01.jpg" alt="" title="仿真结果" /><br /><img src="/assets/article/ep4ce10-verilog/examples_a001b06c02.jpg" alt="" title="仿真细节" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子开拓者开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Altera-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="EP4CE10 型" scheme="https://sirius-tblog.github.io/categories/Altera-FPGA-%E4%BE%8B%E7%A8%8B/EP4CE10-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="Altera" scheme="https://sirius-tblog.github.io/tags/Altera/"/>
    
    <category term="EP4CE10" scheme="https://sirius-tblog.github.io/tags/EP4CE10/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 库函数例程（1）跑马灯</title>
    <link href="https://sirius-tblog.github.io/posts/2499769614.html"/>
    <id>https://sirius-tblog.github.io/posts/2499769614.html</id>
    <published>2022-11-07T18:29:18.000Z</published>
    <updated>2023-05-14T15:39:41.652Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>对通用IO的基础操作——控制电平输出，实现跑马灯样式实验。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p><img src="/assets/article/stm32f1-vlibrary/examples_a001b03c01.jpg" alt="" title="硬件电路连接" /></p><p>STM32主要应用管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>led0</td><td>output</td><td>PB5</td><td>LED0驱动</td></tr><tr><td>led1</td><td>output</td><td>PE5</td><td>LED1驱动</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>调用官方库文件驱动GPIO口电平，根据电路连接关系可知如下预期结果：</p><table><thead><tr><th>端口</th><th>电平状态</th><th>现象</th><th>说明</th></tr></thead><tbody><tr><td>PB5</td><td>输出低电平</td><td>LED0点亮</td><td>LED两端存在正向压降，满足点亮条件</td></tr><tr><td>PE5</td><td>输出低电平</td><td>LED1点亮</td><td>同上</td></tr><tr><td>PB5</td><td>输出高电平</td><td>LED0熄灭</td><td>LED两端无正向压降，不满足点亮条件</td></tr><tr><td>PE5</td><td>输出高电平</td><td>LED1熄灭</td><td>同上</td></tr></tbody></table><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><h3 id="ledc"><a class="markdownIt-Anchor" href="#ledc"></a> led.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// led.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化PB5和PE5为输出口.并使能这两个口的时钟    </span></span><br><span class="line"><span class="comment">//LED IO初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="comment">// 定义初始化结构体变量</span></span><br><span class="line"> GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 使能PB,PE端口时钟</span></span><br><span class="line"> RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB|RCC_APB2Periph_GPIOE, ENABLE);</span><br><span class="line"></span><br><span class="line"> <span class="comment">// PB.5 PE.5 端口配置（结构体变量配值）</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;</span><br><span class="line"> GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;       <span class="comment">//推挽输出</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;      <span class="comment">//IO口速度为50MHz</span></span><br><span class="line"> GPIO_Init(GPIOB, &amp;GPIO_InitStructure);                              <span class="comment">//结构体变量初始化GPIOB.5</span></span><br><span class="line"> GPIO_SetBits(GPIOB,GPIO_Pin_5);                                       <span class="comment">//PB.5 初始化输出置高</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;</span><br><span class="line"> GPIO_Init(GPIOE, &amp;GPIO_InitStructure);                             <span class="comment">//结构体变量初始化GPIOE.5</span></span><br><span class="line"> GPIO_SetBits(GPIOE,GPIO_Pin_5);                                      <span class="comment">//PE.5 初始化输出置高 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="ledh"><a class="markdownIt-Anchor" href="#ledh"></a> led.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// led.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LED_H </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//LED端口定义（位带操作）</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED0 PBout(5)<span class="comment">// PB5</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED1 PEout(5)<span class="comment">// PE5</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//端口初始化函数定义声明</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line">     </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h3 id="mainc"><a class="markdownIt-Anchor" href="#mainc"></a> main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span>      <span class="comment">//引入自定义的函数</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//main.c</span></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line">delay_init();    <span class="comment">//延时函数初始化  </span></span><br><span class="line">LED_Init();  <span class="comment">//初始化与LED连接的硬件接口</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED0=<span class="number">0</span>;</span><br><span class="line">LED1=<span class="number">1</span>;</span><br><span class="line">delay_ms(<span class="number">300</span>); <span class="comment">//延时300ms</span></span><br><span class="line">LED0=<span class="number">1</span>;</span><br><span class="line">LED1=<span class="number">0</span>;</span><br><span class="line">delay_ms(<span class="number">300</span>);<span class="comment">//延时300ms</span></span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/******************* END OF FILE *********/</span></span><br></pre></td></tr></table></figure><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><h2 id="闲谈"><a class="markdownIt-Anchor" href="#闲谈"></a> 闲谈</h2><h3 id="章节目的"><a class="markdownIt-Anchor" href="#章节目的"></a> 章节目的</h3><p>本章主要是熟悉基础 GPIO 端口的驱动，涉及器件物理引脚电平变化以及驱动方向、方式。以有形的指示灯变化来表现端口电平的变化，表现逻辑程序对器件引脚的捆绑关系。</p><h3 id="程序段分析"><a class="markdownIt-Anchor" href="#程序段分析"></a> 程序段分析</h3><p>对端口的驱动，这里主要进行如下设置（见 led.c ）:</p><ul><li>启动相应端口时钟 Clock;</li><li>初始化端配置，包括“具体引脚 PIN_x ”、“端口模式 Mode ”、“速度配置 Speed ”;</li><li>将上述配置使用官方库函数进行对对应端口引脚进行初始化(函数 GPIO_Init() );</li><li>对相应端口引脚进行初始状态定义，如输出高电平（函数 GPIO_SetBits() ）或低电压（函数 GPIO_ResetBits() ），自定义函数需要进行声明处理方可跨文件调用;</li><li>主函数中对端口进行配置驱动，如常亮、常暗、闪烁等等。</li></ul><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 库函数版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%BA%93%E5%87%BD%E6%95%B0%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>STM32F1 寄存器例程（1）跑马灯</title>
    <link href="https://sirius-tblog.github.io/posts/861685022.html"/>
    <id>https://sirius-tblog.github.io/posts/861685022.html</id>
    <published>2022-11-07T18:29:18.000Z</published>
    <updated>2023-04-05T04:21:12.620Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：ST STM32F103 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>E1</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>M1</td><td>此处复位低有效</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.c</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果(联合Modelsim工具)：</p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子精英开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器件</summary>
      
    
    
    
    <category term="MCU 例程" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STM32F1 寄存器版" scheme="https://sirius-tblog.github.io/categories/MCU-%E4%BE%8B%E7%A8%8B/STM32F1-%E5%AF%84%E5%AD%98%E5%99%A8%E7%89%88/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="STMicroelectronics(ST)" scheme="https://sirius-tblog.github.io/tags/STMicroelectronics-ST/"/>
    
    <category term="MCU" scheme="https://sirius-tblog.github.io/tags/MCU/"/>
    
    <category term="STM32F1" scheme="https://sirius-tblog.github.io/tags/STM32F1/"/>
    
  </entry>
  
  <entry>
    <title>【未完】XC7A35T Verilog 例程（25）DDR3读写测试</title>
    <link href="https://sirius-tblog.github.io/posts/1351360347.html"/>
    <id>https://sirius-tblog.github.io/posts/1351360347.html</id>
    <published>2022-10-29T07:35:18.000Z</published>
    <updated>2023-04-05T04:17:01.966Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。<br />目标器件：CH340 （串口转USB,电平类型转换芯片，TTL电平与USB差分电平的转换）<br />目标器件：SP3232 （电平类型转换芯片，TTL电平与RS232电平的转换）</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现串口通信协议的传输效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a012b03c01.jpg" alt="" title="硬件连接关系" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr><tr><td>uart_rxd</td><td>input</td><td>U5</td><td>串口收</td></tr><tr><td>uart_txd</td><td>output</td><td>T6</td><td>串口发</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a012b04c01.jpg" alt="" title="设计思路" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a012b04c02.jpg" alt="" title="通信时序" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>           sys_clk,            </span><br><span class="line">    <span class="keyword">input</span>           sys_rst_n,  </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">input</span>           uart_rxd,         </span><br><span class="line">    <span class="keyword">output</span>          uart_txd           </span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;        </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;        </span><br><span class="line">  </span><br><span class="line"><span class="keyword">wire</span>       uart_en_w;               </span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] uart_data_w;                            </span><br><span class="line"></span><br><span class="line">uart_recv #(                          </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_recv(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk), </span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">    </span><br><span class="line">    <span class="variable">.uart_rxd</span>       (uart_rxd),</span><br><span class="line">    <span class="variable">.uart_done</span>      (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_dout</span>      (uart_data_w)</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">uart_send #(                           </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_send(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk),</span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">     </span><br><span class="line">    <span class="variable">.uart_en</span>        (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_din</span>       (uart_data_w),</span><br><span class="line">    <span class="variable">.tx_flag</span>        (tx_flag),</span><br><span class="line">    <span class="variable">.uart_txd</span>       (uart_txd)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_send.v</span></span><br><span class="line"><span class="keyword">module</span> uart_send</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>      sys_clk,                  </span><br><span class="line">    <span class="keyword">input</span>         sys_rst_n,                 </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>         uart_en,      </span><br><span class="line">    <span class="keyword">input</span>  [<span class="number">7</span>:<span class="number">0</span>]  uart_din,   </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   tx_flag, </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   uart_txd           </span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;    <span class="comment">//Source Clock</span></span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        <span class="comment">//Buad Rate</span></span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">//</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d0; </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d1;  </span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;          </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;  </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] tx_data; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">wire</span>       en_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> en_flag = (~uart_en_d1) &amp; uart_en_d0;</span><br><span class="line">                                                 </span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_en_d0 &lt;= <span class="number">1&#x27;b0</span>;                                  </span><br><span class="line">        uart_en_d1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                                               </span><br><span class="line">        uart_en_d0 &lt;= uart_en;                               </span><br><span class="line">        uart_en_d1 &lt;= uart_en_d0;                            </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (en_flag)    <span class="comment">//start of process</span></span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b1</span>;      </span><br><span class="line">        tx_data &lt;= uart_din;  <span class="comment">//Load Data</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))    <span class="comment">//end of process</span></span><br><span class="line">    <span class="keyword">begin</span>                 </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;  </span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        tx_flag &lt;= tx_flag;</span><br><span class="line">        tx_data &lt;= tx_data;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag) </span><br><span class="line">    <span class="keyword">begin</span>                </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;       </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>; </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)  </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//IDEL</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag)</span><br><span class="line">        <span class="keyword">case</span>(bit_cnt)</span><br><span class="line">            <span class="number">4&#x27;d0</span>: uart_txd &lt;= <span class="number">1&#x27;b0</span>;        <span class="comment">//start</span></span><br><span class="line">            <span class="number">4&#x27;d1</span>: uart_txd &lt;= tx_data[<span class="number">0</span>];  <span class="comment">//LSB</span></span><br><span class="line">            <span class="number">4&#x27;d2</span>: uart_txd &lt;= tx_data[<span class="number">1</span>];</span><br><span class="line">            <span class="number">4&#x27;d3</span>: uart_txd &lt;= tx_data[<span class="number">2</span>];</span><br><span class="line">            <span class="number">4&#x27;d4</span>: uart_txd &lt;= tx_data[<span class="number">3</span>];</span><br><span class="line">            <span class="number">4&#x27;d5</span>: uart_txd &lt;= tx_data[<span class="number">4</span>];</span><br><span class="line">            <span class="number">4&#x27;d6</span>: uart_txd &lt;= tx_data[<span class="number">5</span>];</span><br><span class="line">            <span class="number">4&#x27;d7</span>: uart_txd &lt;= tx_data[<span class="number">6</span>];</span><br><span class="line">            <span class="number">4&#x27;d8</span>: uart_txd &lt;= tx_data[<span class="number">7</span>];  <span class="comment">//MSB</span></span><br><span class="line">            <span class="number">4&#x27;d9</span>: uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//stop</span></span><br><span class="line">            <span class="keyword">default</span>: ;</span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;   <span class="comment">//IDEL</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span>          </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_recv.v</span></span><br><span class="line"><span class="keyword">module</span> uart_recv</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>  sys_clk,                </span><br><span class="line">    <span class="keyword">input</span>             sys_rst_n,   </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>             uart_rxd,      </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>       uart_done,    </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] uart_dout     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;   </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        </span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d0;</span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d1;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;         </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;        </span><br><span class="line"><span class="keyword">reg</span>        rx_flag;    </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] rxdata;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span>       start_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span>  start_flag = uart_rxd_d1 &amp; (~uart_rxd_d0);    </span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span> </span><br><span class="line">        uart_rxd_d0 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        uart_rxd_d1 &lt;= <span class="number">1&#x27;b0</span>;          </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_rxd_d0  &lt;= uart_rxd;                   </span><br><span class="line">        uart_rxd_d1  &lt;= uart_rxd_d0;</span><br><span class="line">    <span class="keyword">end</span>   </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)                                  </span><br><span class="line">        rx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(start_flag)                          </span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b1</span>;          </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))</span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rx_flag &lt;= rx_flag;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( rx_flag ) </span><br><span class="line">    <span class="keyword">begin</span>                  </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;            </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>;   </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> ( !sys_rst_n)  </span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;                                     </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(rx_flag)   </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt == BPS_CNT/<span class="number">2</span>) </span><br><span class="line">        <span class="keyword">begin</span>   </span><br><span class="line">            <span class="keyword">case</span> ( bit_cnt )</span><br><span class="line">             <span class="number">4&#x27;d1</span> : rxdata[<span class="number">0</span>] &lt;= uart_rxd_d1;   <span class="comment">//LSB</span></span><br><span class="line">             <span class="number">4&#x27;d2</span> : rxdata[<span class="number">1</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d3</span> : rxdata[<span class="number">2</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d4</span> : rxdata[<span class="number">3</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d5</span> : rxdata[<span class="number">4</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d6</span> : rxdata[<span class="number">5</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d7</span> : rxdata[<span class="number">6</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d8</span> : rxdata[<span class="number">7</span>] &lt;= uart_rxd_d1;   <span class="comment">//MSB</span></span><br><span class="line">             <span class="keyword">default</span>:;                                    </span><br><span class="line">            <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            rxdata &lt;= rxdata;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                               </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(bit_cnt == <span class="number">4&#x27;d9</span>) </span><br><span class="line">    <span class="keyword">begin</span>                      </span><br><span class="line">        uart_dout &lt;= rxdata;        <span class="comment">//collect Data </span></span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b1</span>;          <span class="comment">//valid  </span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                                   </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>; </span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">create_clock -period 20.000 -name clk [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS33&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U2 IOSTANDARD LVCMOS33&#125; [get_ports sys_rst_n] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U5 IOSTANDARD LVCMOS33&#125; [get_ports uart_rxd] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN T6 IOSTANDARD LVCMOS33&#125; [get_ports uart_txd]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">reg</span> uart_rxd;</span><br><span class="line">  <span class="keyword">wire</span> uart_txd;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;       <span class="comment">// 驱动时钟 50MHz ，20ns</span></span><br><span class="line">  <span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;         <span class="comment">// 波特率 115200 bps</span></span><br><span class="line">  <span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">// 单bit传输耗时 BPS_CNT 个驱动时钟周期</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;    <span class="comment">//IDEL</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//START</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit0</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit1</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit2</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit3</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit4</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit5</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit6</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit7</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//STOP and IDEL</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo </span><br><span class="line">  <span class="variable">#(.CLK_FREQ (CLK_FREQ)</span>,</span><br><span class="line">  <span class="variable">.UART_BPS</span> (UART_BPS))</span><br><span class="line">  inst_uart</span><br><span class="line">   (</span><br><span class="line">    <span class="variable">.sys_rst_n</span>(sys_rst_n), </span><br><span class="line">    <span class="variable">.sys_clk</span>(sys_clk),</span><br><span class="line">    <span class="variable">.uart_txd</span>(uart_txd),</span><br><span class="line">    <span class="variable">.uart_rxd</span>(uart_rxd)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br />略</p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>【未完】XC7A35T Verilog 例程（24）USB通信实验</title>
    <link href="https://sirius-tblog.github.io/posts/3799897035.html"/>
    <id>https://sirius-tblog.github.io/posts/3799897035.html</id>
    <published>2022-10-29T06:35:18.000Z</published>
    <updated>2023-04-05T04:16:58.349Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。<br />目标器件：CH340 （串口转USB,电平类型转换芯片，TTL电平与USB差分电平的转换）<br />目标器件：SP3232 （电平类型转换芯片，TTL电平与RS232电平的转换）</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现串口通信协议的传输效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a012b03c01.jpg" alt="" title="硬件连接关系" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr><tr><td>uart_rxd</td><td>input</td><td>U5</td><td>串口收</td></tr><tr><td>uart_txd</td><td>output</td><td>T6</td><td>串口发</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a012b04c01.jpg" alt="" title="设计思路" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a012b04c02.jpg" alt="" title="通信时序" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>           sys_clk,            </span><br><span class="line">    <span class="keyword">input</span>           sys_rst_n,  </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">input</span>           uart_rxd,         </span><br><span class="line">    <span class="keyword">output</span>          uart_txd           </span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;        </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;        </span><br><span class="line">  </span><br><span class="line"><span class="keyword">wire</span>       uart_en_w;               </span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] uart_data_w;                            </span><br><span class="line"></span><br><span class="line">uart_recv #(                          </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_recv(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk), </span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">    </span><br><span class="line">    <span class="variable">.uart_rxd</span>       (uart_rxd),</span><br><span class="line">    <span class="variable">.uart_done</span>      (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_dout</span>      (uart_data_w)</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">uart_send #(                           </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_send(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk),</span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">     </span><br><span class="line">    <span class="variable">.uart_en</span>        (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_din</span>       (uart_data_w),</span><br><span class="line">    <span class="variable">.tx_flag</span>        (tx_flag),</span><br><span class="line">    <span class="variable">.uart_txd</span>       (uart_txd)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_send.v</span></span><br><span class="line"><span class="keyword">module</span> uart_send</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>      sys_clk,                  </span><br><span class="line">    <span class="keyword">input</span>         sys_rst_n,                 </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>         uart_en,      </span><br><span class="line">    <span class="keyword">input</span>  [<span class="number">7</span>:<span class="number">0</span>]  uart_din,   </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   tx_flag, </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   uart_txd           </span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;    <span class="comment">//Source Clock</span></span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        <span class="comment">//Buad Rate</span></span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">//</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d0; </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d1;  </span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;          </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;  </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] tx_data; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">wire</span>       en_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> en_flag = (~uart_en_d1) &amp; uart_en_d0;</span><br><span class="line">                                                 </span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_en_d0 &lt;= <span class="number">1&#x27;b0</span>;                                  </span><br><span class="line">        uart_en_d1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                                               </span><br><span class="line">        uart_en_d0 &lt;= uart_en;                               </span><br><span class="line">        uart_en_d1 &lt;= uart_en_d0;                            </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (en_flag)    <span class="comment">//start of process</span></span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b1</span>;      </span><br><span class="line">        tx_data &lt;= uart_din;  <span class="comment">//Load Data</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))    <span class="comment">//end of process</span></span><br><span class="line">    <span class="keyword">begin</span>                 </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;  </span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        tx_flag &lt;= tx_flag;</span><br><span class="line">        tx_data &lt;= tx_data;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag) </span><br><span class="line">    <span class="keyword">begin</span>                </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;       </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>; </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)  </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//IDEL</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag)</span><br><span class="line">        <span class="keyword">case</span>(bit_cnt)</span><br><span class="line">            <span class="number">4&#x27;d0</span>: uart_txd &lt;= <span class="number">1&#x27;b0</span>;        <span class="comment">//start</span></span><br><span class="line">            <span class="number">4&#x27;d1</span>: uart_txd &lt;= tx_data[<span class="number">0</span>];  <span class="comment">//LSB</span></span><br><span class="line">            <span class="number">4&#x27;d2</span>: uart_txd &lt;= tx_data[<span class="number">1</span>];</span><br><span class="line">            <span class="number">4&#x27;d3</span>: uart_txd &lt;= tx_data[<span class="number">2</span>];</span><br><span class="line">            <span class="number">4&#x27;d4</span>: uart_txd &lt;= tx_data[<span class="number">3</span>];</span><br><span class="line">            <span class="number">4&#x27;d5</span>: uart_txd &lt;= tx_data[<span class="number">4</span>];</span><br><span class="line">            <span class="number">4&#x27;d6</span>: uart_txd &lt;= tx_data[<span class="number">5</span>];</span><br><span class="line">            <span class="number">4&#x27;d7</span>: uart_txd &lt;= tx_data[<span class="number">6</span>];</span><br><span class="line">            <span class="number">4&#x27;d8</span>: uart_txd &lt;= tx_data[<span class="number">7</span>];  <span class="comment">//MSB</span></span><br><span class="line">            <span class="number">4&#x27;d9</span>: uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//stop</span></span><br><span class="line">            <span class="keyword">default</span>: ;</span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;   <span class="comment">//IDEL</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span>          </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_recv.v</span></span><br><span class="line"><span class="keyword">module</span> uart_recv</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>  sys_clk,                </span><br><span class="line">    <span class="keyword">input</span>             sys_rst_n,   </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>             uart_rxd,      </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>       uart_done,    </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] uart_dout     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;   </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        </span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d0;</span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d1;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;         </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;        </span><br><span class="line"><span class="keyword">reg</span>        rx_flag;    </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] rxdata;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span>       start_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span>  start_flag = uart_rxd_d1 &amp; (~uart_rxd_d0);    </span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span> </span><br><span class="line">        uart_rxd_d0 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        uart_rxd_d1 &lt;= <span class="number">1&#x27;b0</span>;          </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_rxd_d0  &lt;= uart_rxd;                   </span><br><span class="line">        uart_rxd_d1  &lt;= uart_rxd_d0;</span><br><span class="line">    <span class="keyword">end</span>   </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)                                  </span><br><span class="line">        rx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(start_flag)                          </span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b1</span>;          </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))</span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rx_flag &lt;= rx_flag;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( rx_flag ) </span><br><span class="line">    <span class="keyword">begin</span>                  </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;            </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>;   </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> ( !sys_rst_n)  </span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;                                     </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(rx_flag)   </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt == BPS_CNT/<span class="number">2</span>) </span><br><span class="line">        <span class="keyword">begin</span>   </span><br><span class="line">            <span class="keyword">case</span> ( bit_cnt )</span><br><span class="line">             <span class="number">4&#x27;d1</span> : rxdata[<span class="number">0</span>] &lt;= uart_rxd_d1;   <span class="comment">//LSB</span></span><br><span class="line">             <span class="number">4&#x27;d2</span> : rxdata[<span class="number">1</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d3</span> : rxdata[<span class="number">2</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d4</span> : rxdata[<span class="number">3</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d5</span> : rxdata[<span class="number">4</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d6</span> : rxdata[<span class="number">5</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d7</span> : rxdata[<span class="number">6</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d8</span> : rxdata[<span class="number">7</span>] &lt;= uart_rxd_d1;   <span class="comment">//MSB</span></span><br><span class="line">             <span class="keyword">default</span>:;                                    </span><br><span class="line">            <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            rxdata &lt;= rxdata;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                               </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(bit_cnt == <span class="number">4&#x27;d9</span>) </span><br><span class="line">    <span class="keyword">begin</span>                      </span><br><span class="line">        uart_dout &lt;= rxdata;        <span class="comment">//collect Data </span></span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b1</span>;          <span class="comment">//valid  </span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                                   </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>; </span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">create_clock -period 20.000 -name clk [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS33&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U2 IOSTANDARD LVCMOS33&#125; [get_ports sys_rst_n] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U5 IOSTANDARD LVCMOS33&#125; [get_ports uart_rxd] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN T6 IOSTANDARD LVCMOS33&#125; [get_ports uart_txd]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">reg</span> uart_rxd;</span><br><span class="line">  <span class="keyword">wire</span> uart_txd;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;       <span class="comment">// 驱动时钟 50MHz ，20ns</span></span><br><span class="line">  <span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;         <span class="comment">// 波特率 115200 bps</span></span><br><span class="line">  <span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">// 单bit传输耗时 BPS_CNT 个驱动时钟周期</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;    <span class="comment">//IDEL</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//START</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit0</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit1</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit2</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit3</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit4</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit5</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit6</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit7</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//STOP and IDEL</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo </span><br><span class="line">  <span class="variable">#(.CLK_FREQ (CLK_FREQ)</span>,</span><br><span class="line">  <span class="variable">.UART_BPS</span> (UART_BPS))</span><br><span class="line">  inst_uart</span><br><span class="line">   (</span><br><span class="line">    <span class="variable">.sys_rst_n</span>(sys_rst_n), </span><br><span class="line">    <span class="variable">.sys_clk</span>(sys_clk),</span><br><span class="line">    <span class="variable">.uart_txd</span>(uart_txd),</span><br><span class="line">    <span class="variable">.uart_rxd</span>(uart_rxd)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br />略</p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>【未完】XC7A35T Verilog 例程（23）双路高速AD实验</title>
    <link href="https://sirius-tblog.github.io/posts/640324073.html"/>
    <id>https://sirius-tblog.github.io/posts/640324073.html</id>
    <published>2022-10-29T05:35:18.000Z</published>
    <updated>2023-04-05T04:16:55.252Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。<br />目标器件：CH340 （串口转USB,电平类型转换芯片，TTL电平与USB差分电平的转换）<br />目标器件：SP3232 （电平类型转换芯片，TTL电平与RS232电平的转换）</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现串口通信协议的传输效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a012b03c01.jpg" alt="" title="硬件连接关系" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr><tr><td>uart_rxd</td><td>input</td><td>U5</td><td>串口收</td></tr><tr><td>uart_txd</td><td>output</td><td>T6</td><td>串口发</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a012b04c01.jpg" alt="" title="设计思路" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a012b04c02.jpg" alt="" title="通信时序" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>           sys_clk,            </span><br><span class="line">    <span class="keyword">input</span>           sys_rst_n,  </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">input</span>           uart_rxd,         </span><br><span class="line">    <span class="keyword">output</span>          uart_txd           </span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;        </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;        </span><br><span class="line">  </span><br><span class="line"><span class="keyword">wire</span>       uart_en_w;               </span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] uart_data_w;                            </span><br><span class="line"></span><br><span class="line">uart_recv #(                          </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_recv(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk), </span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">    </span><br><span class="line">    <span class="variable">.uart_rxd</span>       (uart_rxd),</span><br><span class="line">    <span class="variable">.uart_done</span>      (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_dout</span>      (uart_data_w)</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">uart_send #(                           </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_send(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk),</span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">     </span><br><span class="line">    <span class="variable">.uart_en</span>        (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_din</span>       (uart_data_w),</span><br><span class="line">    <span class="variable">.tx_flag</span>        (tx_flag),</span><br><span class="line">    <span class="variable">.uart_txd</span>       (uart_txd)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_send.v</span></span><br><span class="line"><span class="keyword">module</span> uart_send</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>      sys_clk,                  </span><br><span class="line">    <span class="keyword">input</span>         sys_rst_n,                 </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>         uart_en,      </span><br><span class="line">    <span class="keyword">input</span>  [<span class="number">7</span>:<span class="number">0</span>]  uart_din,   </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   tx_flag, </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   uart_txd           </span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;    <span class="comment">//Source Clock</span></span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        <span class="comment">//Buad Rate</span></span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">//</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d0; </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d1;  </span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;          </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;  </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] tx_data; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">wire</span>       en_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> en_flag = (~uart_en_d1) &amp; uart_en_d0;</span><br><span class="line">                                                 </span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_en_d0 &lt;= <span class="number">1&#x27;b0</span>;                                  </span><br><span class="line">        uart_en_d1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                                               </span><br><span class="line">        uart_en_d0 &lt;= uart_en;                               </span><br><span class="line">        uart_en_d1 &lt;= uart_en_d0;                            </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (en_flag)    <span class="comment">//start of process</span></span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b1</span>;      </span><br><span class="line">        tx_data &lt;= uart_din;  <span class="comment">//Load Data</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))    <span class="comment">//end of process</span></span><br><span class="line">    <span class="keyword">begin</span>                 </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;  </span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        tx_flag &lt;= tx_flag;</span><br><span class="line">        tx_data &lt;= tx_data;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag) </span><br><span class="line">    <span class="keyword">begin</span>                </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;       </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>; </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)  </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//IDEL</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag)</span><br><span class="line">        <span class="keyword">case</span>(bit_cnt)</span><br><span class="line">            <span class="number">4&#x27;d0</span>: uart_txd &lt;= <span class="number">1&#x27;b0</span>;        <span class="comment">//start</span></span><br><span class="line">            <span class="number">4&#x27;d1</span>: uart_txd &lt;= tx_data[<span class="number">0</span>];  <span class="comment">//LSB</span></span><br><span class="line">            <span class="number">4&#x27;d2</span>: uart_txd &lt;= tx_data[<span class="number">1</span>];</span><br><span class="line">            <span class="number">4&#x27;d3</span>: uart_txd &lt;= tx_data[<span class="number">2</span>];</span><br><span class="line">            <span class="number">4&#x27;d4</span>: uart_txd &lt;= tx_data[<span class="number">3</span>];</span><br><span class="line">            <span class="number">4&#x27;d5</span>: uart_txd &lt;= tx_data[<span class="number">4</span>];</span><br><span class="line">            <span class="number">4&#x27;d6</span>: uart_txd &lt;= tx_data[<span class="number">5</span>];</span><br><span class="line">            <span class="number">4&#x27;d7</span>: uart_txd &lt;= tx_data[<span class="number">6</span>];</span><br><span class="line">            <span class="number">4&#x27;d8</span>: uart_txd &lt;= tx_data[<span class="number">7</span>];  <span class="comment">//MSB</span></span><br><span class="line">            <span class="number">4&#x27;d9</span>: uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//stop</span></span><br><span class="line">            <span class="keyword">default</span>: ;</span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;   <span class="comment">//IDEL</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span>          </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_recv.v</span></span><br><span class="line"><span class="keyword">module</span> uart_recv</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>  sys_clk,                </span><br><span class="line">    <span class="keyword">input</span>             sys_rst_n,   </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>             uart_rxd,      </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>       uart_done,    </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] uart_dout     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;   </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        </span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d0;</span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d1;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;         </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;        </span><br><span class="line"><span class="keyword">reg</span>        rx_flag;    </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] rxdata;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span>       start_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span>  start_flag = uart_rxd_d1 &amp; (~uart_rxd_d0);    </span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span> </span><br><span class="line">        uart_rxd_d0 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        uart_rxd_d1 &lt;= <span class="number">1&#x27;b0</span>;          </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_rxd_d0  &lt;= uart_rxd;                   </span><br><span class="line">        uart_rxd_d1  &lt;= uart_rxd_d0;</span><br><span class="line">    <span class="keyword">end</span>   </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)                                  </span><br><span class="line">        rx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(start_flag)                          </span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b1</span>;          </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))</span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rx_flag &lt;= rx_flag;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( rx_flag ) </span><br><span class="line">    <span class="keyword">begin</span>                  </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;            </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>;   </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> ( !sys_rst_n)  </span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;                                     </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(rx_flag)   </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt == BPS_CNT/<span class="number">2</span>) </span><br><span class="line">        <span class="keyword">begin</span>   </span><br><span class="line">            <span class="keyword">case</span> ( bit_cnt )</span><br><span class="line">             <span class="number">4&#x27;d1</span> : rxdata[<span class="number">0</span>] &lt;= uart_rxd_d1;   <span class="comment">//LSB</span></span><br><span class="line">             <span class="number">4&#x27;d2</span> : rxdata[<span class="number">1</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d3</span> : rxdata[<span class="number">2</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d4</span> : rxdata[<span class="number">3</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d5</span> : rxdata[<span class="number">4</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d6</span> : rxdata[<span class="number">5</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d7</span> : rxdata[<span class="number">6</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d8</span> : rxdata[<span class="number">7</span>] &lt;= uart_rxd_d1;   <span class="comment">//MSB</span></span><br><span class="line">             <span class="keyword">default</span>:;                                    </span><br><span class="line">            <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            rxdata &lt;= rxdata;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                               </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(bit_cnt == <span class="number">4&#x27;d9</span>) </span><br><span class="line">    <span class="keyword">begin</span>                      </span><br><span class="line">        uart_dout &lt;= rxdata;        <span class="comment">//collect Data </span></span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b1</span>;          <span class="comment">//valid  </span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                                   </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>; </span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">create_clock -period 20.000 -name clk [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS33&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U2 IOSTANDARD LVCMOS33&#125; [get_ports sys_rst_n] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U5 IOSTANDARD LVCMOS33&#125; [get_ports uart_rxd] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN T6 IOSTANDARD LVCMOS33&#125; [get_ports uart_txd]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">reg</span> uart_rxd;</span><br><span class="line">  <span class="keyword">wire</span> uart_txd;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;       <span class="comment">// 驱动时钟 50MHz ，20ns</span></span><br><span class="line">  <span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;         <span class="comment">// 波特率 115200 bps</span></span><br><span class="line">  <span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">// 单bit传输耗时 BPS_CNT 个驱动时钟周期</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;    <span class="comment">//IDEL</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//START</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit0</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit1</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit2</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit3</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit4</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit5</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit6</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit7</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//STOP and IDEL</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo </span><br><span class="line">  <span class="variable">#(.CLK_FREQ (CLK_FREQ)</span>,</span><br><span class="line">  <span class="variable">.UART_BPS</span> (UART_BPS))</span><br><span class="line">  inst_uart</span><br><span class="line">   (</span><br><span class="line">    <span class="variable">.sys_rst_n</span>(sys_rst_n), </span><br><span class="line">    <span class="variable">.sys_clk</span>(sys_clk),</span><br><span class="line">    <span class="variable">.uart_txd</span>(uart_txd),</span><br><span class="line">    <span class="variable">.uart_rxd</span>(uart_rxd)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br />略</p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>【未完】XC7A35T Verilog 例程（22）双路高速DA实验</title>
    <link href="https://sirius-tblog.github.io/posts/3185038605.html"/>
    <id>https://sirius-tblog.github.io/posts/3185038605.html</id>
    <published>2022-10-29T04:35:18.000Z</published>
    <updated>2023-04-05T04:16:52.418Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。<br />目标器件：CH340 （串口转USB,电平类型转换芯片，TTL电平与USB差分电平的转换）<br />目标器件：SP3232 （电平类型转换芯片，TTL电平与RS232电平的转换）</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现串口通信协议的传输效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a012b03c01.jpg" alt="" title="硬件连接关系" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr><tr><td>uart_rxd</td><td>input</td><td>U5</td><td>串口收</td></tr><tr><td>uart_txd</td><td>output</td><td>T6</td><td>串口发</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a012b04c01.jpg" alt="" title="设计思路" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a012b04c02.jpg" alt="" title="通信时序" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>           sys_clk,            </span><br><span class="line">    <span class="keyword">input</span>           sys_rst_n,  </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">input</span>           uart_rxd,         </span><br><span class="line">    <span class="keyword">output</span>          uart_txd           </span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;        </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;        </span><br><span class="line">  </span><br><span class="line"><span class="keyword">wire</span>       uart_en_w;               </span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] uart_data_w;                            </span><br><span class="line"></span><br><span class="line">uart_recv #(                          </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_recv(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk), </span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">    </span><br><span class="line">    <span class="variable">.uart_rxd</span>       (uart_rxd),</span><br><span class="line">    <span class="variable">.uart_done</span>      (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_dout</span>      (uart_data_w)</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">uart_send #(                           </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_send(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk),</span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">     </span><br><span class="line">    <span class="variable">.uart_en</span>        (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_din</span>       (uart_data_w),</span><br><span class="line">    <span class="variable">.tx_flag</span>        (tx_flag),</span><br><span class="line">    <span class="variable">.uart_txd</span>       (uart_txd)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_send.v</span></span><br><span class="line"><span class="keyword">module</span> uart_send</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>      sys_clk,                  </span><br><span class="line">    <span class="keyword">input</span>         sys_rst_n,                 </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>         uart_en,      </span><br><span class="line">    <span class="keyword">input</span>  [<span class="number">7</span>:<span class="number">0</span>]  uart_din,   </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   tx_flag, </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   uart_txd           </span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;    <span class="comment">//Source Clock</span></span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        <span class="comment">//Buad Rate</span></span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">//</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d0; </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d1;  </span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;          </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;  </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] tx_data; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">wire</span>       en_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> en_flag = (~uart_en_d1) &amp; uart_en_d0;</span><br><span class="line">                                                 </span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_en_d0 &lt;= <span class="number">1&#x27;b0</span>;                                  </span><br><span class="line">        uart_en_d1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                                               </span><br><span class="line">        uart_en_d0 &lt;= uart_en;                               </span><br><span class="line">        uart_en_d1 &lt;= uart_en_d0;                            </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (en_flag)    <span class="comment">//start of process</span></span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b1</span>;      </span><br><span class="line">        tx_data &lt;= uart_din;  <span class="comment">//Load Data</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))    <span class="comment">//end of process</span></span><br><span class="line">    <span class="keyword">begin</span>                 </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;  </span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        tx_flag &lt;= tx_flag;</span><br><span class="line">        tx_data &lt;= tx_data;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag) </span><br><span class="line">    <span class="keyword">begin</span>                </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;       </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>; </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)  </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//IDEL</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag)</span><br><span class="line">        <span class="keyword">case</span>(bit_cnt)</span><br><span class="line">            <span class="number">4&#x27;d0</span>: uart_txd &lt;= <span class="number">1&#x27;b0</span>;        <span class="comment">//start</span></span><br><span class="line">            <span class="number">4&#x27;d1</span>: uart_txd &lt;= tx_data[<span class="number">0</span>];  <span class="comment">//LSB</span></span><br><span class="line">            <span class="number">4&#x27;d2</span>: uart_txd &lt;= tx_data[<span class="number">1</span>];</span><br><span class="line">            <span class="number">4&#x27;d3</span>: uart_txd &lt;= tx_data[<span class="number">2</span>];</span><br><span class="line">            <span class="number">4&#x27;d4</span>: uart_txd &lt;= tx_data[<span class="number">3</span>];</span><br><span class="line">            <span class="number">4&#x27;d5</span>: uart_txd &lt;= tx_data[<span class="number">4</span>];</span><br><span class="line">            <span class="number">4&#x27;d6</span>: uart_txd &lt;= tx_data[<span class="number">5</span>];</span><br><span class="line">            <span class="number">4&#x27;d7</span>: uart_txd &lt;= tx_data[<span class="number">6</span>];</span><br><span class="line">            <span class="number">4&#x27;d8</span>: uart_txd &lt;= tx_data[<span class="number">7</span>];  <span class="comment">//MSB</span></span><br><span class="line">            <span class="number">4&#x27;d9</span>: uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//stop</span></span><br><span class="line">            <span class="keyword">default</span>: ;</span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;   <span class="comment">//IDEL</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span>          </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_recv.v</span></span><br><span class="line"><span class="keyword">module</span> uart_recv</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>  sys_clk,                </span><br><span class="line">    <span class="keyword">input</span>             sys_rst_n,   </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>             uart_rxd,      </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>       uart_done,    </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] uart_dout     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;   </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        </span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d0;</span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d1;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;         </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;        </span><br><span class="line"><span class="keyword">reg</span>        rx_flag;    </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] rxdata;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span>       start_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span>  start_flag = uart_rxd_d1 &amp; (~uart_rxd_d0);    </span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span> </span><br><span class="line">        uart_rxd_d0 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        uart_rxd_d1 &lt;= <span class="number">1&#x27;b0</span>;          </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_rxd_d0  &lt;= uart_rxd;                   </span><br><span class="line">        uart_rxd_d1  &lt;= uart_rxd_d0;</span><br><span class="line">    <span class="keyword">end</span>   </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)                                  </span><br><span class="line">        rx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(start_flag)                          </span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b1</span>;          </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))</span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rx_flag &lt;= rx_flag;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( rx_flag ) </span><br><span class="line">    <span class="keyword">begin</span>                  </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;            </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>;   </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> ( !sys_rst_n)  </span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;                                     </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(rx_flag)   </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt == BPS_CNT/<span class="number">2</span>) </span><br><span class="line">        <span class="keyword">begin</span>   </span><br><span class="line">            <span class="keyword">case</span> ( bit_cnt )</span><br><span class="line">             <span class="number">4&#x27;d1</span> : rxdata[<span class="number">0</span>] &lt;= uart_rxd_d1;   <span class="comment">//LSB</span></span><br><span class="line">             <span class="number">4&#x27;d2</span> : rxdata[<span class="number">1</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d3</span> : rxdata[<span class="number">2</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d4</span> : rxdata[<span class="number">3</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d5</span> : rxdata[<span class="number">4</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d6</span> : rxdata[<span class="number">5</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d7</span> : rxdata[<span class="number">6</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d8</span> : rxdata[<span class="number">7</span>] &lt;= uart_rxd_d1;   <span class="comment">//MSB</span></span><br><span class="line">             <span class="keyword">default</span>:;                                    </span><br><span class="line">            <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            rxdata &lt;= rxdata;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                               </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(bit_cnt == <span class="number">4&#x27;d9</span>) </span><br><span class="line">    <span class="keyword">begin</span>                      </span><br><span class="line">        uart_dout &lt;= rxdata;        <span class="comment">//collect Data </span></span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b1</span>;          <span class="comment">//valid  </span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                                   </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>; </span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">create_clock -period 20.000 -name clk [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS33&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U2 IOSTANDARD LVCMOS33&#125; [get_ports sys_rst_n] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U5 IOSTANDARD LVCMOS33&#125; [get_ports uart_rxd] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN T6 IOSTANDARD LVCMOS33&#125; [get_ports uart_txd]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">reg</span> uart_rxd;</span><br><span class="line">  <span class="keyword">wire</span> uart_txd;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;       <span class="comment">// 驱动时钟 50MHz ，20ns</span></span><br><span class="line">  <span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;         <span class="comment">// 波特率 115200 bps</span></span><br><span class="line">  <span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">// 单bit传输耗时 BPS_CNT 个驱动时钟周期</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;    <span class="comment">//IDEL</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//START</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit0</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit1</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit2</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit3</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit4</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit5</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit6</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit7</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//STOP and IDEL</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo </span><br><span class="line">  <span class="variable">#(.CLK_FREQ (CLK_FREQ)</span>,</span><br><span class="line">  <span class="variable">.UART_BPS</span> (UART_BPS))</span><br><span class="line">  inst_uart</span><br><span class="line">   (</span><br><span class="line">    <span class="variable">.sys_rst_n</span>(sys_rst_n), </span><br><span class="line">    <span class="variable">.sys_clk</span>(sys_clk),</span><br><span class="line">    <span class="variable">.uart_txd</span>(uart_txd),</span><br><span class="line">    <span class="variable">.uart_rxd</span>(uart_rxd)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br />略</p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>【未完】XC7A35T Verilog 例程（21）高速AD/DA实验</title>
    <link href="https://sirius-tblog.github.io/posts/2112430596.html"/>
    <id>https://sirius-tblog.github.io/posts/2112430596.html</id>
    <published>2022-10-29T03:35:18.000Z</published>
    <updated>2023-04-05T04:16:48.719Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。<br />目标器件：CH340 （串口转USB,电平类型转换芯片，TTL电平与USB差分电平的转换）<br />目标器件：SP3232 （电平类型转换芯片，TTL电平与RS232电平的转换）</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现串口通信协议的传输效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a012b03c01.jpg" alt="" title="硬件连接关系" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr><tr><td>uart_rxd</td><td>input</td><td>U5</td><td>串口收</td></tr><tr><td>uart_txd</td><td>output</td><td>T6</td><td>串口发</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a012b04c01.jpg" alt="" title="设计思路" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a012b04c02.jpg" alt="" title="通信时序" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>           sys_clk,            </span><br><span class="line">    <span class="keyword">input</span>           sys_rst_n,  </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">input</span>           uart_rxd,         </span><br><span class="line">    <span class="keyword">output</span>          uart_txd           </span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;        </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;        </span><br><span class="line">  </span><br><span class="line"><span class="keyword">wire</span>       uart_en_w;               </span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] uart_data_w;                            </span><br><span class="line"></span><br><span class="line">uart_recv #(                          </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_recv(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk), </span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">    </span><br><span class="line">    <span class="variable">.uart_rxd</span>       (uart_rxd),</span><br><span class="line">    <span class="variable">.uart_done</span>      (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_dout</span>      (uart_data_w)</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">uart_send #(                           </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_send(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk),</span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">     </span><br><span class="line">    <span class="variable">.uart_en</span>        (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_din</span>       (uart_data_w),</span><br><span class="line">    <span class="variable">.tx_flag</span>        (tx_flag),</span><br><span class="line">    <span class="variable">.uart_txd</span>       (uart_txd)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_send.v</span></span><br><span class="line"><span class="keyword">module</span> uart_send</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>      sys_clk,                  </span><br><span class="line">    <span class="keyword">input</span>         sys_rst_n,                 </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>         uart_en,      </span><br><span class="line">    <span class="keyword">input</span>  [<span class="number">7</span>:<span class="number">0</span>]  uart_din,   </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   tx_flag, </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   uart_txd           </span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;    <span class="comment">//Source Clock</span></span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        <span class="comment">//Buad Rate</span></span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">//</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d0; </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d1;  </span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;          </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;  </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] tx_data; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">wire</span>       en_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> en_flag = (~uart_en_d1) &amp; uart_en_d0;</span><br><span class="line">                                                 </span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_en_d0 &lt;= <span class="number">1&#x27;b0</span>;                                  </span><br><span class="line">        uart_en_d1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                                               </span><br><span class="line">        uart_en_d0 &lt;= uart_en;                               </span><br><span class="line">        uart_en_d1 &lt;= uart_en_d0;                            </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (en_flag)    <span class="comment">//start of process</span></span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b1</span>;      </span><br><span class="line">        tx_data &lt;= uart_din;  <span class="comment">//Load Data</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))    <span class="comment">//end of process</span></span><br><span class="line">    <span class="keyword">begin</span>                 </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;  </span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        tx_flag &lt;= tx_flag;</span><br><span class="line">        tx_data &lt;= tx_data;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag) </span><br><span class="line">    <span class="keyword">begin</span>                </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;       </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>; </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)  </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//IDEL</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag)</span><br><span class="line">        <span class="keyword">case</span>(bit_cnt)</span><br><span class="line">            <span class="number">4&#x27;d0</span>: uart_txd &lt;= <span class="number">1&#x27;b0</span>;        <span class="comment">//start</span></span><br><span class="line">            <span class="number">4&#x27;d1</span>: uart_txd &lt;= tx_data[<span class="number">0</span>];  <span class="comment">//LSB</span></span><br><span class="line">            <span class="number">4&#x27;d2</span>: uart_txd &lt;= tx_data[<span class="number">1</span>];</span><br><span class="line">            <span class="number">4&#x27;d3</span>: uart_txd &lt;= tx_data[<span class="number">2</span>];</span><br><span class="line">            <span class="number">4&#x27;d4</span>: uart_txd &lt;= tx_data[<span class="number">3</span>];</span><br><span class="line">            <span class="number">4&#x27;d5</span>: uart_txd &lt;= tx_data[<span class="number">4</span>];</span><br><span class="line">            <span class="number">4&#x27;d6</span>: uart_txd &lt;= tx_data[<span class="number">5</span>];</span><br><span class="line">            <span class="number">4&#x27;d7</span>: uart_txd &lt;= tx_data[<span class="number">6</span>];</span><br><span class="line">            <span class="number">4&#x27;d8</span>: uart_txd &lt;= tx_data[<span class="number">7</span>];  <span class="comment">//MSB</span></span><br><span class="line">            <span class="number">4&#x27;d9</span>: uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//stop</span></span><br><span class="line">            <span class="keyword">default</span>: ;</span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;   <span class="comment">//IDEL</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span>          </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_recv.v</span></span><br><span class="line"><span class="keyword">module</span> uart_recv</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>  sys_clk,                </span><br><span class="line">    <span class="keyword">input</span>             sys_rst_n,   </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>             uart_rxd,      </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>       uart_done,    </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] uart_dout     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;   </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        </span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d0;</span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d1;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;         </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;        </span><br><span class="line"><span class="keyword">reg</span>        rx_flag;    </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] rxdata;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span>       start_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span>  start_flag = uart_rxd_d1 &amp; (~uart_rxd_d0);    </span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span> </span><br><span class="line">        uart_rxd_d0 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        uart_rxd_d1 &lt;= <span class="number">1&#x27;b0</span>;          </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_rxd_d0  &lt;= uart_rxd;                   </span><br><span class="line">        uart_rxd_d1  &lt;= uart_rxd_d0;</span><br><span class="line">    <span class="keyword">end</span>   </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)                                  </span><br><span class="line">        rx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(start_flag)                          </span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b1</span>;          </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))</span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rx_flag &lt;= rx_flag;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( rx_flag ) </span><br><span class="line">    <span class="keyword">begin</span>                  </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;            </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>;   </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> ( !sys_rst_n)  </span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;                                     </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(rx_flag)   </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt == BPS_CNT/<span class="number">2</span>) </span><br><span class="line">        <span class="keyword">begin</span>   </span><br><span class="line">            <span class="keyword">case</span> ( bit_cnt )</span><br><span class="line">             <span class="number">4&#x27;d1</span> : rxdata[<span class="number">0</span>] &lt;= uart_rxd_d1;   <span class="comment">//LSB</span></span><br><span class="line">             <span class="number">4&#x27;d2</span> : rxdata[<span class="number">1</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d3</span> : rxdata[<span class="number">2</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d4</span> : rxdata[<span class="number">3</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d5</span> : rxdata[<span class="number">4</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d6</span> : rxdata[<span class="number">5</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d7</span> : rxdata[<span class="number">6</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d8</span> : rxdata[<span class="number">7</span>] &lt;= uart_rxd_d1;   <span class="comment">//MSB</span></span><br><span class="line">             <span class="keyword">default</span>:;                                    </span><br><span class="line">            <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            rxdata &lt;= rxdata;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                               </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(bit_cnt == <span class="number">4&#x27;d9</span>) </span><br><span class="line">    <span class="keyword">begin</span>                      </span><br><span class="line">        uart_dout &lt;= rxdata;        <span class="comment">//collect Data </span></span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b1</span>;          <span class="comment">//valid  </span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                                   </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>; </span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">create_clock -period 20.000 -name clk [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS33&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U2 IOSTANDARD LVCMOS33&#125; [get_ports sys_rst_n] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U5 IOSTANDARD LVCMOS33&#125; [get_ports uart_rxd] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN T6 IOSTANDARD LVCMOS33&#125; [get_ports uart_txd]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">reg</span> uart_rxd;</span><br><span class="line">  <span class="keyword">wire</span> uart_txd;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;       <span class="comment">// 驱动时钟 50MHz ，20ns</span></span><br><span class="line">  <span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;         <span class="comment">// 波特率 115200 bps</span></span><br><span class="line">  <span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">// 单bit传输耗时 BPS_CNT 个驱动时钟周期</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;    <span class="comment">//IDEL</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//START</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit0</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit1</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit2</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit3</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit4</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit5</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit6</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit7</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//STOP and IDEL</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo </span><br><span class="line">  <span class="variable">#(.CLK_FREQ (CLK_FREQ)</span>,</span><br><span class="line">  <span class="variable">.UART_BPS</span> (UART_BPS))</span><br><span class="line">  inst_uart</span><br><span class="line">   (</span><br><span class="line">    <span class="variable">.sys_rst_n</span>(sys_rst_n), </span><br><span class="line">    <span class="variable">.sys_clk</span>(sys_clk),</span><br><span class="line">    <span class="variable">.uart_txd</span>(uart_txd),</span><br><span class="line">    <span class="variable">.uart_rxd</span>(uart_rxd)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br />略</p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>【未完】XC7A35T Verilog 例程（19）RTC实时时钟</title>
    <link href="https://sirius-tblog.github.io/posts/4222622403.html"/>
    <id>https://sirius-tblog.github.io/posts/4222622403.html</id>
    <published>2022-10-29T02:35:18.000Z</published>
    <updated>2023-04-05T04:16:45.269Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。<br />目标器件：PCF8563 （工业级多功能时钟/日历芯片）<br /><img src="/assets/article/xc7a35t-verilog/examples_a019b01c01.jpg" alt="" title="PCF8563功能框图" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a019b01c02.jpg" alt="" title="秒数字的BCD编码" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a019b01c03.jpg" alt="" title="月份的BCD编码" />{width=“400px”}</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现串口通信协议的传输效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a019b03c01.jpg" alt="" title="硬件连接关系" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr><tr><td>iic_scl</td><td>output</td><td>R6</td><td>时钟线</td></tr><tr><td>iic_sda</td><td>inout</td><td>T4</td><td>数据线</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a012b04c01.jpg" alt="" title="设计思路" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a012b04c02.jpg" alt="" title="通信时序" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>           sys_clk,            </span><br><span class="line">    <span class="keyword">input</span>           sys_rst_n,  </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">input</span>           uart_rxd,         </span><br><span class="line">    <span class="keyword">output</span>          uart_txd           </span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;        </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;        </span><br><span class="line">  </span><br><span class="line"><span class="keyword">wire</span>       uart_en_w;               </span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] uart_data_w;                            </span><br><span class="line"></span><br><span class="line">uart_recv #(                          </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_recv(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk), </span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">    </span><br><span class="line">    <span class="variable">.uart_rxd</span>       (uart_rxd),</span><br><span class="line">    <span class="variable">.uart_done</span>      (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_dout</span>      (uart_data_w)</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">uart_send #(                           </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_send(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk),</span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">     </span><br><span class="line">    <span class="variable">.uart_en</span>        (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_din</span>       (uart_data_w),</span><br><span class="line">    <span class="variable">.tx_flag</span>        (tx_flag),</span><br><span class="line">    <span class="variable">.uart_txd</span>       (uart_txd)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_send.v</span></span><br><span class="line"><span class="keyword">module</span> uart_send</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>      sys_clk,                  </span><br><span class="line">    <span class="keyword">input</span>         sys_rst_n,                 </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>         uart_en,      </span><br><span class="line">    <span class="keyword">input</span>  [<span class="number">7</span>:<span class="number">0</span>]  uart_din,   </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   tx_flag, </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   uart_txd           </span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;    <span class="comment">//Source Clock</span></span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        <span class="comment">//Buad Rate</span></span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">//</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d0; </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d1;  </span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;          </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;  </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] tx_data; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">wire</span>       en_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> en_flag = (~uart_en_d1) &amp; uart_en_d0;</span><br><span class="line">                                                 </span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_en_d0 &lt;= <span class="number">1&#x27;b0</span>;                                  </span><br><span class="line">        uart_en_d1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                                               </span><br><span class="line">        uart_en_d0 &lt;= uart_en;                               </span><br><span class="line">        uart_en_d1 &lt;= uart_en_d0;                            </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (en_flag)    <span class="comment">//start of process</span></span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b1</span>;      </span><br><span class="line">        tx_data &lt;= uart_din;  <span class="comment">//Load Data</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))    <span class="comment">//end of process</span></span><br><span class="line">    <span class="keyword">begin</span>                 </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;  </span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        tx_flag &lt;= tx_flag;</span><br><span class="line">        tx_data &lt;= tx_data;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag) </span><br><span class="line">    <span class="keyword">begin</span>                </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;       </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>; </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)  </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//IDEL</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag)</span><br><span class="line">        <span class="keyword">case</span>(bit_cnt)</span><br><span class="line">            <span class="number">4&#x27;d0</span>: uart_txd &lt;= <span class="number">1&#x27;b0</span>;        <span class="comment">//start</span></span><br><span class="line">            <span class="number">4&#x27;d1</span>: uart_txd &lt;= tx_data[<span class="number">0</span>];  <span class="comment">//LSB</span></span><br><span class="line">            <span class="number">4&#x27;d2</span>: uart_txd &lt;= tx_data[<span class="number">1</span>];</span><br><span class="line">            <span class="number">4&#x27;d3</span>: uart_txd &lt;= tx_data[<span class="number">2</span>];</span><br><span class="line">            <span class="number">4&#x27;d4</span>: uart_txd &lt;= tx_data[<span class="number">3</span>];</span><br><span class="line">            <span class="number">4&#x27;d5</span>: uart_txd &lt;= tx_data[<span class="number">4</span>];</span><br><span class="line">            <span class="number">4&#x27;d6</span>: uart_txd &lt;= tx_data[<span class="number">5</span>];</span><br><span class="line">            <span class="number">4&#x27;d7</span>: uart_txd &lt;= tx_data[<span class="number">6</span>];</span><br><span class="line">            <span class="number">4&#x27;d8</span>: uart_txd &lt;= tx_data[<span class="number">7</span>];  <span class="comment">//MSB</span></span><br><span class="line">            <span class="number">4&#x27;d9</span>: uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//stop</span></span><br><span class="line">            <span class="keyword">default</span>: ;</span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;   <span class="comment">//IDEL</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span>          </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_recv.v</span></span><br><span class="line"><span class="keyword">module</span> uart_recv</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>  sys_clk,                </span><br><span class="line">    <span class="keyword">input</span>             sys_rst_n,   </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>             uart_rxd,      </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>       uart_done,    </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] uart_dout     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;   </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        </span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d0;</span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d1;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;         </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;        </span><br><span class="line"><span class="keyword">reg</span>        rx_flag;    </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] rxdata;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span>       start_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span>  start_flag = uart_rxd_d1 &amp; (~uart_rxd_d0);    </span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span> </span><br><span class="line">        uart_rxd_d0 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        uart_rxd_d1 &lt;= <span class="number">1&#x27;b0</span>;          </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_rxd_d0  &lt;= uart_rxd;                   </span><br><span class="line">        uart_rxd_d1  &lt;= uart_rxd_d0;</span><br><span class="line">    <span class="keyword">end</span>   </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)                                  </span><br><span class="line">        rx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(start_flag)                          </span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b1</span>;          </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))</span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rx_flag &lt;= rx_flag;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( rx_flag ) </span><br><span class="line">    <span class="keyword">begin</span>                  </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;            </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>;   </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> ( !sys_rst_n)  </span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;                                     </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(rx_flag)   </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt == BPS_CNT/<span class="number">2</span>) </span><br><span class="line">        <span class="keyword">begin</span>   </span><br><span class="line">            <span class="keyword">case</span> ( bit_cnt )</span><br><span class="line">             <span class="number">4&#x27;d1</span> : rxdata[<span class="number">0</span>] &lt;= uart_rxd_d1;   <span class="comment">//LSB</span></span><br><span class="line">             <span class="number">4&#x27;d2</span> : rxdata[<span class="number">1</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d3</span> : rxdata[<span class="number">2</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d4</span> : rxdata[<span class="number">3</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d5</span> : rxdata[<span class="number">4</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d6</span> : rxdata[<span class="number">5</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d7</span> : rxdata[<span class="number">6</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d8</span> : rxdata[<span class="number">7</span>] &lt;= uart_rxd_d1;   <span class="comment">//MSB</span></span><br><span class="line">             <span class="keyword">default</span>:;                                    </span><br><span class="line">            <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            rxdata &lt;= rxdata;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                               </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(bit_cnt == <span class="number">4&#x27;d9</span>) </span><br><span class="line">    <span class="keyword">begin</span>                      </span><br><span class="line">        uart_dout &lt;= rxdata;        <span class="comment">//collect Data </span></span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b1</span>;          <span class="comment">//valid  </span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                                   </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>; </span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS33&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U2 IOSTANDARD LVCMOS33&#125; [get_ports sys_rst_n] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R6 IOSTANDARD LVCMOS33&#125; [get_ports iic_scl] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN T4 IOSTANDARD LVCMOS33&#125; [get_ports iic_sda]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">reg</span> uart_rxd;</span><br><span class="line">  <span class="keyword">wire</span> uart_txd;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;       <span class="comment">// 驱动时钟 50MHz ，20ns</span></span><br><span class="line">  <span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;         <span class="comment">// 波特率 115200 bps</span></span><br><span class="line">  <span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">// 单bit传输耗时 BPS_CNT 个驱动时钟周期</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;    <span class="comment">//IDEL</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//START</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit0</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit1</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit2</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit3</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit4</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit5</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit6</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit7</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//STOP and IDEL</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo </span><br><span class="line">  <span class="variable">#(.CLK_FREQ (CLK_FREQ)</span>,</span><br><span class="line">  <span class="variable">.UART_BPS</span> (UART_BPS))</span><br><span class="line">  inst_uart</span><br><span class="line">   (</span><br><span class="line">    <span class="variable">.sys_rst_n</span>(sys_rst_n), </span><br><span class="line">    <span class="variable">.sys_clk</span>(sys_clk),</span><br><span class="line">    <span class="variable">.uart_txd</span>(uart_txd),</span><br><span class="line">    <span class="variable">.uart_rxd</span>(uart_rxd)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br />略</p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>【未完】XC7A35T Verilog 例程（18）EEPROM读写测试</title>
    <link href="https://sirius-tblog.github.io/posts/1648067106.html"/>
    <id>https://sirius-tblog.github.io/posts/1648067106.html</id>
    <published>2022-10-29T01:35:18.000Z</published>
    <updated>2023-04-05T04:16:41.676Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。<br />目标器件：AT24C64 （64Kbit存储容量EEPROM）。<br /><img src="/assets/article/xc7a35t-verilog/examples_a018b01c01.jpg" alt="" title="AT24C64引脚" />{width=“400px”}<br />###主要参数<br />1.接口总线物理样式<br /><img src="/assets/article/xc7a35t-verilog/examples_a018b01c02.jpg" alt="" title="I2C总线物理拓扑结构图" />{width=“400px”}<br />2.接口协议时序<br /><img src="/assets/article/xc7a35t-verilog/examples_a018b01c03.jpg" alt="" title="I2C整体时序图" /><br /><img src="/assets/article/xc7a35t-verilog/examples_a018b01c04.jpg" alt="" title="I2C具体时序图" /><br />3.器件地址格式<br /><img src="/assets/article/xc7a35t-verilog/examples_a018b01c05.jpg" alt="" title="器件地址格式示意图" /><br /><img src="/assets/article/xc7a35t-verilog/examples_a018b01c06.jpg" alt="" title="单字节字地址分布" /><br /><img src="/assets/article/xc7a35t-verilog/examples_a018b01c07.jpg" alt="" title="双字节字地址分布" /><br />4.写时序<br /><img src="/assets/article/xc7a35t-verilog/examples_a018b01c08.jpg" alt="" title="单次写（字节写）时序" /><br /><img src="/assets/article/xc7a35t-verilog/examples_a018b01c09.jpg" alt="" title="连续写（页写）时序" /><br />5.读时序<br /><img src="/assets/article/xc7a35t-verilog/examples_a018b01c10.jpg" alt="" title="当前地址读时序" /><br /><img src="/assets/article/xc7a35t-verilog/examples_a018b01c11.jpg" alt="" title="随机地址读时序" /><br /><img src="/assets/article/xc7a35t-verilog/examples_a018b01c12.jpg" alt="" title="顺序地址读时序" /></p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现访问EEPROM存储器。<br />EEPROM是一种用于计算机系统得非易失性存储器存储，AT24C64采用两线串行接口的双向数据传输协议——I2C协议实现读写操作。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a018b03c01.jpg" alt="" title="硬件连接关系" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr><tr><td>iic_scl</td><td>output</td><td>R6</td><td>时钟线</td></tr><tr><td>iic_sda</td><td>inout</td><td>T4</td><td>数据线</td></tr><tr><td>led</td><td>output</td><td>R2</td><td>LED指示灯</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a018b04c01.jpg" alt="" title="设计思路" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo(</span><br><span class="line">    <span class="keyword">input</span>               sys_clk    ,      <span class="comment">//系统时钟</span></span><br><span class="line">    <span class="keyword">input</span>               sys_rst_n  ,      <span class="comment">//系统复位</span></span><br><span class="line">    <span class="comment">//eeprom interface</span></span><br><span class="line">    <span class="keyword">output</span>              iic_scl    ,      <span class="comment">//eeprom的时钟线scl</span></span><br><span class="line">    <span class="keyword">inout</span>               iic_sda    ,      <span class="comment">//eeprom的数据线sda</span></span><br><span class="line">    <span class="comment">//user interface</span></span><br><span class="line">    <span class="keyword">output</span>              led               <span class="comment">//led显示</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//parameter define</span></span><br><span class="line"><span class="keyword">parameter</span>    SLAVE_ADDR = <span class="number">7&#x27;b1010000</span>    ; <span class="comment">//器件地址(SLAVE_ADDR)</span></span><br><span class="line"><span class="keyword">parameter</span>    BIT_CTRL   = <span class="number">1&#x27;b1</span>          ; <span class="comment">//字地址位控制参数(16b/8b)</span></span><br><span class="line"><span class="keyword">parameter</span>    CLK_FREQ   = <span class="number">26&#x27;d50_000_000</span>; <span class="comment">//i2c_dri模块的驱动时钟频率(CLK_FREQ)</span></span><br><span class="line"><span class="keyword">parameter</span>    I2C_FREQ   = <span class="number">18&#x27;d250_000</span>   ; <span class="comment">//I2C的SCL时钟频率</span></span><br><span class="line"><span class="keyword">parameter</span>    L_TIME     = <span class="number">17&#x27;d125_000</span>   ; <span class="comment">//led闪烁时间参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//wire define</span></span><br><span class="line"><span class="keyword">wire</span>           dri_clk   ; <span class="comment">//I2C操作时钟</span></span><br><span class="line"><span class="keyword">wire</span>           i2c_exec  ; <span class="comment">//I2C触发控制</span></span><br><span class="line"><span class="keyword">wire</span>   [<span class="number">15</span>:<span class="number">0</span>]  i2c_addr  ; <span class="comment">//I2C操作地址</span></span><br><span class="line"><span class="keyword">wire</span>   [ <span class="number">7</span>:<span class="number">0</span>]  i2c_data_w; <span class="comment">//I2C写入的数据</span></span><br><span class="line"><span class="keyword">wire</span>           i2c_done  ; <span class="comment">//I2C操作结束标志</span></span><br><span class="line"><span class="keyword">wire</span>           i2c_ack   ; <span class="comment">//I2C应答标志 0:应答 1:未应答</span></span><br><span class="line"><span class="keyword">wire</span>           i2c_rh_wl ; <span class="comment">//I2C读写控制</span></span><br><span class="line"><span class="keyword">wire</span>   [ <span class="number">7</span>:<span class="number">0</span>]  i2c_data_r; <span class="comment">//I2C读出的数据</span></span><br><span class="line"><span class="keyword">wire</span>           rw_done   ; <span class="comment">//E2PROM读写测试完成</span></span><br><span class="line"><span class="keyword">wire</span>           rw_result ; <span class="comment">//E2PROM读写测试结果 0:失败 1:成功 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//e2prom读写测试模块</span></span><br><span class="line">e2prom_rw u_e2prom_rw(</span><br><span class="line">    <span class="variable">.clk</span>         (dri_clk   ),  <span class="comment">//时钟信号</span></span><br><span class="line">    <span class="variable">.rst_n</span>       (sys_rst_n ),  <span class="comment">//复位信号</span></span><br><span class="line">    <span class="comment">//i2c interface</span></span><br><span class="line">    <span class="variable">.i2c_exec</span>    (i2c_exec  ),  <span class="comment">//I2C触发执行信号</span></span><br><span class="line">    <span class="variable">.i2c_rh_wl</span>   (i2c_rh_wl ),  <span class="comment">//I2C读写控制信号</span></span><br><span class="line">    <span class="variable">.i2c_addr</span>    (i2c_addr  ),  <span class="comment">//I2C器件内地址</span></span><br><span class="line">    <span class="variable">.i2c_data_w</span>  (i2c_data_w),  <span class="comment">//I2C要写的数据</span></span><br><span class="line">    <span class="variable">.i2c_data_r</span>  (i2c_data_r),  <span class="comment">//I2C读出的数据</span></span><br><span class="line">    <span class="variable">.i2c_done</span>    (i2c_done  ),  <span class="comment">//I2C一次操作完成</span></span><br><span class="line">    <span class="variable">.i2c_ack</span>     (i2c_ack   ),  <span class="comment">//I2C应答标志 </span></span><br><span class="line">    <span class="comment">//user interface</span></span><br><span class="line">    <span class="variable">.rw_done</span>     (rw_done   ),  <span class="comment">//E2PROM读写测试完成</span></span><br><span class="line">    <span class="variable">.rw_result</span>   (rw_result )   <span class="comment">//E2PROM读写测试结果 0:失败 1:成功</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//i2c驱动模块</span></span><br><span class="line">i2c_driver #(</span><br><span class="line">    <span class="variable">.SLAVE_ADDR</span>  (SLAVE_ADDR),  <span class="comment">//EEPROM从机地址</span></span><br><span class="line">    <span class="variable">.CLK_FREQ</span>    (CLK_FREQ  ),  <span class="comment">//模块输入的时钟频率</span></span><br><span class="line">    <span class="variable">.I2C_FREQ</span>    (I2C_FREQ  )   <span class="comment">//IIC_SCL的时钟频率</span></span><br><span class="line">) u_i2c_driver(</span><br><span class="line">    <span class="variable">.clk</span>         (sys_clk   ),  </span><br><span class="line">    <span class="variable">.rst_n</span>       (sys_rst_n ),  </span><br><span class="line">    <span class="comment">//i2c interface</span></span><br><span class="line">    <span class="variable">.i2c_exec</span>    (i2c_exec  ),  <span class="comment">//I2C触发执行信号</span></span><br><span class="line">    <span class="variable">.bit_ctrl</span>    (BIT_CTRL  ),  <span class="comment">//器件地址位控制(16b/8b)</span></span><br><span class="line">    <span class="variable">.i2c_rh_wl</span>   (i2c_rh_wl ),  <span class="comment">//I2C读写控制信号</span></span><br><span class="line">    <span class="variable">.i2c_addr</span>    (i2c_addr  ),  <span class="comment">//I2C器件内地址</span></span><br><span class="line">    <span class="variable">.i2c_data_w</span>  (i2c_data_w),  <span class="comment">//I2C要写的数据</span></span><br><span class="line">    <span class="variable">.i2c_data_r</span>  (i2c_data_r),  <span class="comment">//I2C读出的数据</span></span><br><span class="line">    <span class="variable">.i2c_done</span>    (i2c_done  ),  <span class="comment">//I2C一次操作完成</span></span><br><span class="line">    <span class="variable">.i2c_ack</span>     (i2c_ack   ),  <span class="comment">//I2C应答标志</span></span><br><span class="line">    <span class="variable">.scl</span>         (iic_scl   ),  <span class="comment">//I2C的SCL时钟信号</span></span><br><span class="line">    <span class="variable">.sda</span>         (iic_sda   ),  <span class="comment">//I2C的SDA信号</span></span><br><span class="line">    <span class="comment">//user interface</span></span><br><span class="line">    <span class="variable">.dri_clk</span>     (dri_clk   )   <span class="comment">//I2C操作时钟</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//led指示模块</span></span><br><span class="line">led_alarm <span class="variable">#(.L_TIME(L_TIME  )</span>   <span class="comment">//控制led闪烁时间</span></span><br><span class="line">) u_led_alarm(</span><br><span class="line">    <span class="variable">.clk</span>         (dri_clk   ),  </span><br><span class="line">    <span class="variable">.rst_n</span>       (sys_rst_n ), </span><br><span class="line">    </span><br><span class="line">    <span class="variable">.rw_done</span>     (rw_done   ),  </span><br><span class="line">    <span class="variable">.rw_result</span>   (rw_result ),</span><br><span class="line">    <span class="variable">.led</span>         (led       )    </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// i2c_driver.v</span></span><br><span class="line"><span class="keyword">module</span> i2c_driver</span><br><span class="line">    #(</span><br><span class="line">      <span class="keyword">parameter</span>   SLAVE_ADDR = <span class="number">7&#x27;b1010000</span>   ,  <span class="comment">//EEPROM从机地址</span></span><br><span class="line">      <span class="keyword">parameter</span>   CLK_FREQ   = <span class="number">26&#x27;d50_000_000</span>, <span class="comment">//模块输入的时钟频率</span></span><br><span class="line">      <span class="keyword">parameter</span>   I2C_FREQ   = <span class="number">18&#x27;d250_000</span>     <span class="comment">//IIC_SCL的时钟频率</span></span><br><span class="line">    )</span><br><span class="line">   (                                                            </span><br><span class="line">    <span class="keyword">input</span>                clk        ,    </span><br><span class="line">    <span class="keyword">input</span>                rst_n      ,   </span><br><span class="line">                                         </span><br><span class="line">    <span class="comment">//i2c interface                      </span></span><br><span class="line">    <span class="keyword">input</span>                i2c_exec   ,  <span class="comment">//I2C触发执行信号</span></span><br><span class="line">    <span class="keyword">input</span>                bit_ctrl   ,  <span class="comment">//字地址位控制(16b/8b)</span></span><br><span class="line">    <span class="keyword">input</span>                i2c_rh_wl  ,  <span class="comment">//I2C读写控制信号</span></span><br><span class="line">    <span class="keyword">input</span>        [<span class="number">15</span>:<span class="number">0</span>]  i2c_addr   ,  <span class="comment">//I2C器件内地址</span></span><br><span class="line">    <span class="keyword">input</span>        [ <span class="number">7</span>:<span class="number">0</span>]  i2c_data_w ,  <span class="comment">//I2C要写的数据</span></span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>  [ <span class="number">7</span>:<span class="number">0</span>]  i2c_data_r ,  <span class="comment">//I2C读出的数据</span></span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>          i2c_done   ,  <span class="comment">//I2C一次操作完成</span></span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>          i2c_ack    ,  <span class="comment">//I2C应答标志 0:应答 1:未应答</span></span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>          scl        ,  <span class="comment">//I2C的SCL时钟信号</span></span><br><span class="line">    <span class="keyword">inout</span>                sda        ,  <span class="comment">//I2C的SDA信号</span></span><br><span class="line">                                       </span><br><span class="line">    <span class="comment">//user interface                   </span></span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>          dri_clk       <span class="comment">//驱动I2C操作的驱动时钟</span></span><br><span class="line">     );</span><br><span class="line"></span><br><span class="line"><span class="comment">//localparam define</span></span><br><span class="line"><span class="keyword">localparam</span>  st_idle     = <span class="number">8&#x27;b0000_0001</span>; <span class="comment">//空闲状态</span></span><br><span class="line"><span class="keyword">localparam</span>  st_sladdr   = <span class="number">8&#x27;b0000_0010</span>; <span class="comment">//发送器件地址(slave address)</span></span><br><span class="line"><span class="keyword">localparam</span>  st_addr16   = <span class="number">8&#x27;b0000_0100</span>; <span class="comment">//发送16位字地址</span></span><br><span class="line"><span class="keyword">localparam</span>  st_addr8    = <span class="number">8&#x27;b0000_1000</span>; <span class="comment">//发送8位字地址</span></span><br><span class="line"><span class="keyword">localparam</span>  st_data_wr  = <span class="number">8&#x27;b0001_0000</span>; <span class="comment">//写数据(8 bit)</span></span><br><span class="line"><span class="keyword">localparam</span>  st_addr_rd  = <span class="number">8&#x27;b0010_0000</span>; <span class="comment">//发送器件地址读</span></span><br><span class="line"><span class="keyword">localparam</span>  st_data_rd  = <span class="number">8&#x27;b0100_0000</span>; <span class="comment">//读数据(8 bit)</span></span><br><span class="line"><span class="keyword">localparam</span>  st_stop     = <span class="number">8&#x27;b1000_0000</span>; <span class="comment">//结束I2C操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//reg define</span></span><br><span class="line"><span class="keyword">reg</span>            sda_dir   ; <span class="comment">//I2C数据(SDA)方向控制</span></span><br><span class="line"><span class="keyword">reg</span>            sda_out   ; <span class="comment">//SDA输出信号</span></span><br><span class="line"><span class="keyword">reg</span>            st_done   ; <span class="comment">//状态结束</span></span><br><span class="line"><span class="keyword">reg</span>            wr_flag   ; <span class="comment">//写标志</span></span><br><span class="line"><span class="keyword">reg</span>    [ <span class="number">6</span>:<span class="number">0</span>]  cnt       ; <span class="comment">//计数</span></span><br><span class="line"><span class="keyword">reg</span>    [ <span class="number">7</span>:<span class="number">0</span>]  cur_state ; <span class="comment">//状态机当前状态</span></span><br><span class="line"><span class="keyword">reg</span>    [ <span class="number">7</span>:<span class="number">0</span>]  next_state; <span class="comment">//状态机下一状态</span></span><br><span class="line"><span class="keyword">reg</span>    [<span class="number">15</span>:<span class="number">0</span>]  addr_t    ; <span class="comment">//地址</span></span><br><span class="line"><span class="keyword">reg</span>    [ <span class="number">7</span>:<span class="number">0</span>]  data_r    ; <span class="comment">//读取的数据</span></span><br><span class="line"><span class="keyword">reg</span>    [ <span class="number">7</span>:<span class="number">0</span>]  data_wr_t ; <span class="comment">//I2C需写的数据的临时寄存</span></span><br><span class="line"><span class="keyword">reg</span>    [ <span class="number">9</span>:<span class="number">0</span>]  clk_cnt   ; <span class="comment">//分频时钟计数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//wire define</span></span><br><span class="line"><span class="keyword">wire</span>          sda_in     ; <span class="comment">//SDA输入信号</span></span><br><span class="line"><span class="keyword">wire</span>   [<span class="number">8</span>:<span class="number">0</span>]  clk_divide ; <span class="comment">//模块驱动时钟的分频系数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//SDA控制</span></span><br><span class="line"><span class="keyword">assign</span>  sda     = sda_dir ?  sda_out : <span class="number">1&#x27;bz</span>;     <span class="comment">//SDA数据输出或高阻</span></span><br><span class="line"><span class="keyword">assign</span>  sda_in  = sda ;                          <span class="comment">//SDA数据输入</span></span><br><span class="line"><span class="keyword">assign</span>  clk_divide = (CLK_FREQ/I2C_FREQ) &gt;&gt; <span class="number">2&#x27;d2</span>;<span class="comment">//模块驱动时钟的分频系数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//生成I2C的SCL的四倍频率的驱动时钟用于驱动i2c的操作</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n) <span class="keyword">begin</span></span><br><span class="line">        dri_clk &lt;=  <span class="number">1&#x27;b0</span>;</span><br><span class="line">        clk_cnt &lt;= <span class="number">10&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(clk_cnt == clk_divide[<span class="number">8</span>:<span class="number">1</span>] - <span class="number">1&#x27;d1</span>) <span class="keyword">begin</span></span><br><span class="line">        clk_cnt &lt;= <span class="number">10&#x27;d0</span>;</span><br><span class="line">        dri_clk &lt;= ~dri_clk;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//(三段式状态机)同步时序描述状态转移</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> dri_clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n)</span><br><span class="line">        cur_state &lt;= st_idle;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cur_state &lt;= next_state;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//组合逻辑判断状态转移条件</span></span><br><span class="line"><span class="keyword">always</span> @(*) <span class="keyword">begin</span></span><br><span class="line">    next_state = st_idle;</span><br><span class="line">    <span class="keyword">case</span>(cur_state)</span><br><span class="line">        st_idle: <span class="keyword">begin</span>                          <span class="comment">//空闲状态</span></span><br><span class="line">           <span class="keyword">if</span>(i2c_exec) <span class="keyword">begin</span></span><br><span class="line">               next_state = st_sladdr;</span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">               next_state = st_idle;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        st_sladdr: <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">if</span>(st_done) <span class="keyword">begin</span></span><br><span class="line">                <span class="keyword">if</span>(bit_ctrl)                    <span class="comment">//判断是16位还是8位字地址</span></span><br><span class="line">                   next_state = st_addr16;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                   next_state = st_addr8 ;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                next_state = st_sladdr;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        st_addr16: <span class="keyword">begin</span>                        <span class="comment">//写16位字地址</span></span><br><span class="line">            <span class="keyword">if</span>(st_done) <span class="keyword">begin</span></span><br><span class="line">                next_state = st_addr8;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                next_state = st_addr16;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        st_addr8: <span class="keyword">begin</span>                         <span class="comment">//8位字地址</span></span><br><span class="line">            <span class="keyword">if</span>(st_done) <span class="keyword">begin</span></span><br><span class="line">                <span class="keyword">if</span>(wr_flag==<span class="number">1&#x27;b0</span>)               <span class="comment">//读写判断</span></span><br><span class="line">                    next_state = st_data_wr;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    next_state = st_addr_rd;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                next_state = st_addr8;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        st_data_wr: <span class="keyword">begin</span>                       <span class="comment">//写数据(8 bit)</span></span><br><span class="line">            <span class="keyword">if</span>(st_done)</span><br><span class="line">                next_state = st_stop;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                next_state = st_data_wr;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        st_addr_rd: <span class="keyword">begin</span>                       <span class="comment">//写地址以进行读数据</span></span><br><span class="line">            <span class="keyword">if</span>(st_done) <span class="keyword">begin</span></span><br><span class="line">                next_state = st_data_rd;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                next_state = st_addr_rd;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        st_data_rd: <span class="keyword">begin</span>                       <span class="comment">//读取数据(8 bit)</span></span><br><span class="line">            <span class="keyword">if</span>(st_done)</span><br><span class="line">                next_state = st_stop;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                next_state = st_data_rd;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        st_stop: <span class="keyword">begin</span>                          <span class="comment">//结束I2C操作</span></span><br><span class="line">            <span class="keyword">if</span>(st_done)</span><br><span class="line">                next_state = st_idle;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                next_state = st_stop ;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">default</span>: next_state= st_idle;</span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//时序电路描述状态输出</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> dri_clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">    <span class="comment">//复位初始化</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n) <span class="keyword">begin</span></span><br><span class="line">        scl       &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">        sda_out   &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">        sda_dir   &lt;= <span class="number">1&#x27;b1</span>;                          </span><br><span class="line">        i2c_done  &lt;= <span class="number">1&#x27;b0</span>;                          </span><br><span class="line">        i2c_ack   &lt;= <span class="number">1&#x27;b0</span>;                          </span><br><span class="line">        cnt       &lt;= <span class="number">1&#x27;b0</span>;                          </span><br><span class="line">        st_done   &lt;= <span class="number">1&#x27;b0</span>;                          </span><br><span class="line">        data_r    &lt;= <span class="number">1&#x27;b0</span>;                          </span><br><span class="line">        i2c_data_r&lt;= <span class="number">1&#x27;b0</span>;                          </span><br><span class="line">        wr_flag   &lt;= <span class="number">1&#x27;b0</span>;                          </span><br><span class="line">        addr_t    &lt;= <span class="number">1&#x27;b0</span>;                          </span><br><span class="line">        data_wr_t &lt;= <span class="number">1&#x27;b0</span>;                          </span><br><span class="line">    <span class="keyword">end</span>                                              </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">begin</span>                                       </span><br><span class="line">        st_done &lt;= <span class="number">1&#x27;b0</span> ;                            </span><br><span class="line">        cnt     &lt;= cnt +<span class="number">1&#x27;b1</span> ;                       </span><br><span class="line">        <span class="keyword">case</span>(cur_state)                              </span><br><span class="line">             st_idle: <span class="keyword">begin</span>                          <span class="comment">//空闲状态</span></span><br><span class="line">                scl     &lt;= <span class="number">1&#x27;b1</span>;                     </span><br><span class="line">                sda_out &lt;= <span class="number">1&#x27;b1</span>;                     </span><br><span class="line">                sda_dir &lt;= <span class="number">1&#x27;b1</span>;                     </span><br><span class="line">                i2c_done&lt;= <span class="number">1&#x27;b0</span>;                     </span><br><span class="line">                cnt     &lt;= <span class="number">7&#x27;b0</span>;               </span><br><span class="line">                <span class="keyword">if</span>(i2c_exec) <span class="keyword">begin</span>                   </span><br><span class="line">                    wr_flag   &lt;= i2c_rh_wl ;         </span><br><span class="line">                    addr_t    &lt;= i2c_addr  ;         </span><br><span class="line">                    data_wr_t &lt;= i2c_data_w;  </span><br><span class="line">                    i2c_ack &lt;= <span class="number">1&#x27;b0</span>;                      </span><br><span class="line">                <span class="keyword">end</span>                                  </span><br><span class="line">            <span class="keyword">end</span>                                      </span><br><span class="line">            st_sladdr: <span class="keyword">begin</span>                         <span class="comment">//写地址(器件地址和字地址)</span></span><br><span class="line">                <span class="keyword">case</span>(cnt)                            </span><br><span class="line">                    <span class="number">7&#x27;d1</span> : sda_out &lt;= <span class="number">1&#x27;b0</span>;          <span class="comment">//开始I2C</span></span><br><span class="line">                    <span class="number">7&#x27;d3</span> : scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d4</span> : sda_out &lt;= SLAVE_ADDR[<span class="number">6</span>]; <span class="comment">//传送器件地址</span></span><br><span class="line">                    <span class="number">7&#x27;d5</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d7</span> : scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d8</span> : sda_out &lt;= SLAVE_ADDR[<span class="number">5</span>]; </span><br><span class="line">                    <span class="number">7&#x27;d9</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d11</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d12</span>: sda_out &lt;= SLAVE_ADDR[<span class="number">4</span>]; </span><br><span class="line">                    <span class="number">7&#x27;d13</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d15</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d16</span>: sda_out &lt;= SLAVE_ADDR[<span class="number">3</span>]; </span><br><span class="line">                    <span class="number">7&#x27;d17</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d19</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d20</span>: sda_out &lt;= SLAVE_ADDR[<span class="number">2</span>]; </span><br><span class="line">                    <span class="number">7&#x27;d21</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d23</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d24</span>: sda_out &lt;= SLAVE_ADDR[<span class="number">1</span>]; </span><br><span class="line">                    <span class="number">7&#x27;d25</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d27</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d28</span>: sda_out &lt;= SLAVE_ADDR[<span class="number">0</span>]; </span><br><span class="line">                    <span class="number">7&#x27;d29</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d31</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d32</span>: sda_out &lt;= <span class="number">1&#x27;b0</span>;          <span class="comment">//0:写</span></span><br><span class="line">                    <span class="number">7&#x27;d33</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d35</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d36</span>: <span class="keyword">begin</span>                     </span><br><span class="line">                        sda_dir &lt;= <span class="number">1&#x27;b0</span>;             </span><br><span class="line">                        sda_out &lt;= <span class="number">1&#x27;b1</span>;                         </span><br><span class="line">                    <span class="keyword">end</span>                              </span><br><span class="line">                    <span class="number">7&#x27;d37</span>: scl     &lt;= <span class="number">1&#x27;b1</span>;            </span><br><span class="line">                    <span class="number">7&#x27;d38</span>: <span class="keyword">begin</span>                     <span class="comment">//从机应答 </span></span><br><span class="line">                        st_done &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                        <span class="keyword">if</span>(sda_in == <span class="number">1&#x27;b1</span>)           <span class="comment">//高电平表示未应答</span></span><br><span class="line">                            i2c_ack &lt;= <span class="number">1&#x27;b1</span>;         <span class="comment">//拉高应答标志位     </span></span><br><span class="line">                    <span class="keyword">end</span>                                          </span><br><span class="line">                    <span class="number">7&#x27;d39</span>: <span class="keyword">begin</span>                     </span><br><span class="line">                        scl &lt;= <span class="number">1&#x27;b0</span>;                 </span><br><span class="line">                        cnt &lt;= <span class="number">1&#x27;b0</span>;                 </span><br><span class="line">                    <span class="keyword">end</span>                              </span><br><span class="line">                    <span class="keyword">default</span> :  ;                     </span><br><span class="line">                <span class="keyword">endcase</span>                              </span><br><span class="line">            <span class="keyword">end</span>                                      </span><br><span class="line">            st_addr16: <span class="keyword">begin</span>                         </span><br><span class="line">                <span class="keyword">case</span>(cnt)                            </span><br><span class="line">                    <span class="number">7&#x27;d0</span> : <span class="keyword">begin</span>                     </span><br><span class="line">                        sda_dir &lt;= <span class="number">1&#x27;b1</span> ;            </span><br><span class="line">                        sda_out &lt;= addr_t[<span class="number">15</span>];       <span class="comment">//传送字地址</span></span><br><span class="line">                    <span class="keyword">end</span>                              </span><br><span class="line">                    <span class="number">7&#x27;d1</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d3</span> : scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d4</span> : sda_out &lt;= addr_t[<span class="number">14</span>];    </span><br><span class="line">                    <span class="number">7&#x27;d5</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d7</span> : scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d8</span> : sda_out &lt;= addr_t[<span class="number">13</span>];    </span><br><span class="line">                    <span class="number">7&#x27;d9</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d11</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d12</span>: sda_out &lt;= addr_t[<span class="number">12</span>];    </span><br><span class="line">                    <span class="number">7&#x27;d13</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d15</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d16</span>: sda_out &lt;= addr_t[<span class="number">11</span>];    </span><br><span class="line">                    <span class="number">7&#x27;d17</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d19</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d20</span>: sda_out &lt;= addr_t[<span class="number">10</span>];    </span><br><span class="line">                    <span class="number">7&#x27;d21</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d23</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d24</span>: sda_out &lt;= addr_t[<span class="number">9</span>];     </span><br><span class="line">                    <span class="number">7&#x27;d25</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d27</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d28</span>: sda_out &lt;= addr_t[<span class="number">8</span>];     </span><br><span class="line">                    <span class="number">7&#x27;d29</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d31</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d32</span>: <span class="keyword">begin</span>                     </span><br><span class="line">                        sda_dir &lt;= <span class="number">1&#x27;b0</span>;             </span><br><span class="line">                        sda_out &lt;= <span class="number">1&#x27;b1</span>;   </span><br><span class="line">                    <span class="keyword">end</span>                              </span><br><span class="line">                    <span class="number">7&#x27;d33</span>: scl  &lt;= <span class="number">1&#x27;b1</span>;             </span><br><span class="line">                    <span class="number">7&#x27;d34</span>: <span class="keyword">begin</span>                     <span class="comment">//从机应答</span></span><br><span class="line">                        st_done &lt;= <span class="number">1&#x27;b1</span>;     </span><br><span class="line">                        <span class="keyword">if</span>(sda_in == <span class="number">1&#x27;b1</span>)           <span class="comment">//高电平表示未应答</span></span><br><span class="line">                            i2c_ack &lt;= <span class="number">1&#x27;b1</span>;         <span class="comment">//拉高应答标志位    </span></span><br><span class="line">                    <span class="keyword">end</span>        </span><br><span class="line">                    <span class="number">7&#x27;d35</span>: <span class="keyword">begin</span>                     </span><br><span class="line">                        scl &lt;= <span class="number">1&#x27;b0</span>;                 </span><br><span class="line">                        cnt &lt;= <span class="number">1&#x27;b0</span>;                 </span><br><span class="line">                    <span class="keyword">end</span>                              </span><br><span class="line">                    <span class="keyword">default</span> :  ;                     </span><br><span class="line">                <span class="keyword">endcase</span>                              </span><br><span class="line">            <span class="keyword">end</span>                                      </span><br><span class="line">            st_addr8: <span class="keyword">begin</span>                          </span><br><span class="line">                <span class="keyword">case</span>(cnt)                            </span><br><span class="line">                    <span class="number">7&#x27;d0</span>: <span class="keyword">begin</span>                      </span><br><span class="line">                       sda_dir &lt;= <span class="number">1&#x27;b1</span> ;             </span><br><span class="line">                       sda_out &lt;= addr_t[<span class="number">7</span>];         <span class="comment">//字地址</span></span><br><span class="line">                    <span class="keyword">end</span>                              </span><br><span class="line">                    <span class="number">7&#x27;d1</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d3</span> : scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d4</span> : sda_out &lt;= addr_t[<span class="number">6</span>];     </span><br><span class="line">                    <span class="number">7&#x27;d5</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d7</span> : scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d8</span> : sda_out &lt;= addr_t[<span class="number">5</span>];     </span><br><span class="line">                    <span class="number">7&#x27;d9</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d11</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d12</span>: sda_out &lt;= addr_t[<span class="number">4</span>];     </span><br><span class="line">                    <span class="number">7&#x27;d13</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d15</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d16</span>: sda_out &lt;= addr_t[<span class="number">3</span>];     </span><br><span class="line">                    <span class="number">7&#x27;d17</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d19</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d20</span>: sda_out &lt;= addr_t[<span class="number">2</span>];     </span><br><span class="line">                    <span class="number">7&#x27;d21</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d23</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d24</span>: sda_out &lt;= addr_t[<span class="number">1</span>];     </span><br><span class="line">                    <span class="number">7&#x27;d25</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d27</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d28</span>: sda_out &lt;= addr_t[<span class="number">0</span>];     </span><br><span class="line">                    <span class="number">7&#x27;d29</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d31</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d32</span>: <span class="keyword">begin</span>                     </span><br><span class="line">                        sda_dir &lt;= <span class="number">1&#x27;b0</span>;         </span><br><span class="line">                        sda_out &lt;= <span class="number">1&#x27;b1</span>;                    </span><br><span class="line">                    <span class="keyword">end</span>                              </span><br><span class="line">                    <span class="number">7&#x27;d33</span>: scl     &lt;= <span class="number">1&#x27;b1</span>;          </span><br><span class="line">                    <span class="number">7&#x27;d34</span>: <span class="keyword">begin</span>                     <span class="comment">//从机应答</span></span><br><span class="line">                        st_done &lt;= <span class="number">1&#x27;b1</span>;     </span><br><span class="line">                        <span class="keyword">if</span>(sda_in == <span class="number">1&#x27;b1</span>)           <span class="comment">//高电平表示未应答</span></span><br><span class="line">                            i2c_ack &lt;= <span class="number">1&#x27;b1</span>;         <span class="comment">//拉高应答标志位    </span></span><br><span class="line">                    <span class="keyword">end</span>   </span><br><span class="line">                    <span class="number">7&#x27;d35</span>: <span class="keyword">begin</span>                     </span><br><span class="line">                        scl &lt;= <span class="number">1&#x27;b0</span>;                 </span><br><span class="line">                        cnt &lt;= <span class="number">1&#x27;b0</span>;                 </span><br><span class="line">                    <span class="keyword">end</span>                              </span><br><span class="line">                    <span class="keyword">default</span> :  ;                     </span><br><span class="line">                <span class="keyword">endcase</span>                              </span><br><span class="line">            <span class="keyword">end</span>                                      </span><br><span class="line">            st_data_wr: <span class="keyword">begin</span>                        <span class="comment">//写数据(8 bit)</span></span><br><span class="line">                <span class="keyword">case</span>(cnt)                            </span><br><span class="line">                    <span class="number">7&#x27;d0</span>: <span class="keyword">begin</span>                      </span><br><span class="line">                        sda_out &lt;= data_wr_t[<span class="number">7</span>];     <span class="comment">//I2C写8位数据</span></span><br><span class="line">                        sda_dir &lt;= <span class="number">1&#x27;b1</span>;             </span><br><span class="line">                    <span class="keyword">end</span>                              </span><br><span class="line">                    <span class="number">7&#x27;d1</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d3</span> : scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d4</span> : sda_out &lt;= data_wr_t[<span class="number">6</span>];  </span><br><span class="line">                    <span class="number">7&#x27;d5</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d7</span> : scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d8</span> : sda_out &lt;= data_wr_t[<span class="number">5</span>];  </span><br><span class="line">                    <span class="number">7&#x27;d9</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d11</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d12</span>: sda_out &lt;= data_wr_t[<span class="number">4</span>];  </span><br><span class="line">                    <span class="number">7&#x27;d13</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d15</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d16</span>: sda_out &lt;= data_wr_t[<span class="number">3</span>];  </span><br><span class="line">                    <span class="number">7&#x27;d17</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d19</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d20</span>: sda_out &lt;= data_wr_t[<span class="number">2</span>];  </span><br><span class="line">                    <span class="number">7&#x27;d21</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d23</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d24</span>: sda_out &lt;= data_wr_t[<span class="number">1</span>];  </span><br><span class="line">                    <span class="number">7&#x27;d25</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d27</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d28</span>: sda_out &lt;= data_wr_t[<span class="number">0</span>];  </span><br><span class="line">                    <span class="number">7&#x27;d29</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d31</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d32</span>: <span class="keyword">begin</span>                     </span><br><span class="line">                        sda_dir &lt;= <span class="number">1&#x27;b0</span>;           </span><br><span class="line">                        sda_out &lt;= <span class="number">1&#x27;b1</span>;                              </span><br><span class="line">                    <span class="keyword">end</span>                              </span><br><span class="line">                    <span class="number">7&#x27;d33</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d34</span>: <span class="keyword">begin</span>                     <span class="comment">//从机应答</span></span><br><span class="line">                        st_done &lt;= <span class="number">1&#x27;b1</span>;     </span><br><span class="line">                        <span class="keyword">if</span>(sda_in == <span class="number">1&#x27;b1</span>)           <span class="comment">//高电平表示未应答</span></span><br><span class="line">                            i2c_ack &lt;= <span class="number">1&#x27;b1</span>;         <span class="comment">//拉高应答标志位    </span></span><br><span class="line">                    <span class="keyword">end</span>          </span><br><span class="line">                    <span class="number">7&#x27;d35</span>: <span class="keyword">begin</span>                     </span><br><span class="line">                        scl  &lt;= <span class="number">1&#x27;b0</span>;                </span><br><span class="line">                        cnt  &lt;= <span class="number">1&#x27;b0</span>;                </span><br><span class="line">                    <span class="keyword">end</span>                              </span><br><span class="line">                    <span class="keyword">default</span>  :  ;                    </span><br><span class="line">                <span class="keyword">endcase</span>                              </span><br><span class="line">            <span class="keyword">end</span>                                      </span><br><span class="line">            st_addr_rd: <span class="keyword">begin</span>                        <span class="comment">//写地址以进行读数据</span></span><br><span class="line">                <span class="keyword">case</span>(cnt)                            </span><br><span class="line">                    <span class="number">7&#x27;d0</span> : <span class="keyword">begin</span>                     </span><br><span class="line">                        sda_dir &lt;= <span class="number">1&#x27;b1</span>;             </span><br><span class="line">                        sda_out &lt;= <span class="number">1&#x27;b1</span>;             </span><br><span class="line">                    <span class="keyword">end</span>                              </span><br><span class="line">                    <span class="number">7&#x27;d1</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d2</span> : sda_out &lt;= <span class="number">1&#x27;b0</span>;          <span class="comment">//重新开始</span></span><br><span class="line">                    <span class="number">7&#x27;d3</span> : scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d4</span> : sda_out &lt;= SLAVE_ADDR[<span class="number">6</span>]; <span class="comment">//传送器件地址</span></span><br><span class="line">                    <span class="number">7&#x27;d5</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d7</span> : scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d8</span> : sda_out &lt;= SLAVE_ADDR[<span class="number">5</span>]; </span><br><span class="line">                    <span class="number">7&#x27;d9</span> : scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d11</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d12</span>: sda_out &lt;= SLAVE_ADDR[<span class="number">4</span>]; </span><br><span class="line">                    <span class="number">7&#x27;d13</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d15</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d16</span>: sda_out &lt;= SLAVE_ADDR[<span class="number">3</span>]; </span><br><span class="line">                    <span class="number">7&#x27;d17</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d19</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d20</span>: sda_out &lt;= SLAVE_ADDR[<span class="number">2</span>]; </span><br><span class="line">                    <span class="number">7&#x27;d21</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d23</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d24</span>: sda_out &lt;= SLAVE_ADDR[<span class="number">1</span>]; </span><br><span class="line">                    <span class="number">7&#x27;d25</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d27</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d28</span>: sda_out &lt;= SLAVE_ADDR[<span class="number">0</span>]; </span><br><span class="line">                    <span class="number">7&#x27;d29</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d31</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d32</span>: sda_out &lt;= <span class="number">1&#x27;b1</span>;          <span class="comment">//1:读</span></span><br><span class="line">                    <span class="number">7&#x27;d33</span>: scl &lt;= <span class="number">1&#x27;b1</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d35</span>: scl &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">                    <span class="number">7&#x27;d36</span>: <span class="keyword">begin</span>                     </span><br><span class="line">                        sda_dir &lt;= <span class="number">1&#x27;b0</span>;            </span><br><span class="line">                        sda_out &lt;= <span class="number">1&#x27;b1</span>;                    </span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="number">7&#x27;d37</span>: scl     &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    <span class="number">7&#x27;d38</span>: <span class="keyword">begin</span>                     <span class="comment">//从机应答</span></span><br><span class="line">                        st_done &lt;= <span class="number">1&#x27;b1</span>;     </span><br><span class="line">                        <span class="keyword">if</span>(sda_in == <span class="number">1&#x27;b1</span>)           <span class="comment">//高电平表示未应答</span></span><br><span class="line">                            i2c_ack &lt;= <span class="number">1&#x27;b1</span>;         <span class="comment">//拉高应答标志位    </span></span><br><span class="line">                    <span class="keyword">end</span>   </span><br><span class="line">                    <span class="number">7&#x27;d39</span>: <span class="keyword">begin</span></span><br><span class="line">                        scl &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        cnt &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">default</span> : ;</span><br><span class="line">                <span class="keyword">endcase</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            st_data_rd: <span class="keyword">begin</span>                        <span class="comment">//读取数据(8 bit)</span></span><br><span class="line">                <span class="keyword">case</span>(cnt)</span><br><span class="line">                    <span class="number">7&#x27;d0</span>: sda_dir &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    <span class="number">7&#x27;d1</span>: <span class="keyword">begin</span></span><br><span class="line">                        data_r[<span class="number">7</span>] &lt;= sda_in;</span><br><span class="line">                        scl       &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="number">7&#x27;d3</span>: scl  &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    <span class="number">7&#x27;d5</span>: <span class="keyword">begin</span></span><br><span class="line">                        data_r[<span class="number">6</span>] &lt;= sda_in ;</span><br><span class="line">                        scl       &lt;= <span class="number">1&#x27;b1</span>   ;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="number">7&#x27;d7</span>: scl  &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    <span class="number">7&#x27;d9</span>: <span class="keyword">begin</span></span><br><span class="line">                        data_r[<span class="number">5</span>] &lt;= sda_in;</span><br><span class="line">                        scl       &lt;= <span class="number">1&#x27;b1</span>  ;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="number">7&#x27;d11</span>: scl  &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    <span class="number">7&#x27;d13</span>: <span class="keyword">begin</span></span><br><span class="line">                        data_r[<span class="number">4</span>] &lt;= sda_in;</span><br><span class="line">                        scl       &lt;= <span class="number">1&#x27;b1</span>  ;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="number">7&#x27;d15</span>: scl  &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    <span class="number">7&#x27;d17</span>: <span class="keyword">begin</span></span><br><span class="line">                        data_r[<span class="number">3</span>] &lt;= sda_in;</span><br><span class="line">                        scl       &lt;= <span class="number">1&#x27;b1</span>  ;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="number">7&#x27;d19</span>: scl  &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    <span class="number">7&#x27;d21</span>: <span class="keyword">begin</span></span><br><span class="line">                        data_r[<span class="number">2</span>] &lt;= sda_in;</span><br><span class="line">                        scl       &lt;= <span class="number">1&#x27;b1</span>  ;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="number">7&#x27;d23</span>: scl  &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    <span class="number">7&#x27;d25</span>: <span class="keyword">begin</span></span><br><span class="line">                        data_r[<span class="number">1</span>] &lt;= sda_in;</span><br><span class="line">                        scl       &lt;= <span class="number">1&#x27;b1</span>  ;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="number">7&#x27;d27</span>: scl  &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    <span class="number">7&#x27;d29</span>: <span class="keyword">begin</span></span><br><span class="line">                        data_r[<span class="number">0</span>] &lt;= sda_in;</span><br><span class="line">                        scl       &lt;= <span class="number">1&#x27;b1</span>  ;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="number">7&#x27;d31</span>: scl  &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    <span class="number">7&#x27;d32</span>: <span class="keyword">begin</span></span><br><span class="line">                        sda_dir &lt;= <span class="number">1&#x27;b1</span>;             </span><br><span class="line">                        sda_out &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="number">7&#x27;d33</span>: scl     &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    <span class="number">7&#x27;d34</span>: st_done &lt;= <span class="number">1&#x27;b1</span>;          <span class="comment">//非应答</span></span><br><span class="line">                    <span class="number">7&#x27;d35</span>: <span class="keyword">begin</span></span><br><span class="line">                        scl &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        cnt &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        i2c_data_r &lt;= data_r;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">default</span>  :  ;</span><br><span class="line">                <span class="keyword">endcase</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            st_stop: <span class="keyword">begin</span>                           <span class="comment">//结束I2C操作</span></span><br><span class="line">                <span class="keyword">case</span>(cnt)</span><br><span class="line">                    <span class="number">7&#x27;d0</span>: <span class="keyword">begin</span></span><br><span class="line">                        sda_dir &lt;= <span class="number">1&#x27;b1</span>;             <span class="comment">//结束I2C</span></span><br><span class="line">                        sda_out &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="number">7&#x27;d1</span> : scl     &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    <span class="number">7&#x27;d3</span> : sda_out &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    <span class="number">7&#x27;d15</span>: st_done &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    <span class="number">7&#x27;d16</span>: <span class="keyword">begin</span></span><br><span class="line">                        cnt      &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        i2c_done &lt;= <span class="number">1&#x27;b1</span>;            <span class="comment">//向上层模块传递I2C结束信号</span></span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">default</span>  : ;</span><br><span class="line">                <span class="keyword">endcase</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// e2prom_rw.v</span></span><br><span class="line"><span class="keyword">module</span> e2prom_rw(</span><br><span class="line">    <span class="keyword">input</span>                 clk        , <span class="comment">//时钟信号</span></span><br><span class="line">    <span class="keyword">input</span>                 rst_n      , <span class="comment">//复位信号</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//i2c interface</span></span><br><span class="line">    <span class="keyword">output</span>   <span class="keyword">reg</span>          i2c_rh_wl  , <span class="comment">//I2C读写控制信号</span></span><br><span class="line">    <span class="keyword">output</span>   <span class="keyword">reg</span>          i2c_exec   , <span class="comment">//I2C触发执行信号</span></span><br><span class="line">    <span class="keyword">output</span>   <span class="keyword">reg</span>  [<span class="number">15</span>:<span class="number">0</span>]  i2c_addr   , <span class="comment">//I2C器件内地址</span></span><br><span class="line">    <span class="keyword">output</span>   <span class="keyword">reg</span>  [ <span class="number">7</span>:<span class="number">0</span>]  i2c_data_w , <span class="comment">//I2C要写的数据</span></span><br><span class="line">    <span class="keyword">input</span>         [ <span class="number">7</span>:<span class="number">0</span>]  i2c_data_r , <span class="comment">//I2C读出的数据</span></span><br><span class="line">    <span class="keyword">input</span>                 i2c_done   , <span class="comment">//I2C一次操作完成</span></span><br><span class="line">    <span class="keyword">input</span>                 i2c_ack    , <span class="comment">//I2C应答标志</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//user interface</span></span><br><span class="line">    <span class="keyword">output</span>   <span class="keyword">reg</span>          rw_done    , <span class="comment">//E2PROM读写测试完成</span></span><br><span class="line">    <span class="keyword">output</span>   <span class="keyword">reg</span>          rw_result    <span class="comment">//E2PROM读写测试结果 0:失败 1:成功</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//parameter define</span></span><br><span class="line"><span class="comment">//EEPROM写数据需要添加间隔时间,读数据则不需要</span></span><br><span class="line"><span class="keyword">parameter</span>      WR_WAIT_TIME = <span class="number">14&#x27;d5000</span>; <span class="comment">//写入间隔时间</span></span><br><span class="line"><span class="keyword">parameter</span>      MAX_BYTE     = <span class="number">16&#x27;d256</span> ; <span class="comment">//读写测试的字节个数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//reg define</span></span><br><span class="line"><span class="keyword">reg</span>   [<span class="number">1</span>:<span class="number">0</span>]    flow_cnt  ; <span class="comment">//状态流控制</span></span><br><span class="line"><span class="keyword">reg</span>   [<span class="number">13</span>:<span class="number">0</span>]   wait_cnt  ; <span class="comment">//延时计数器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//EEPROM读写测试,先写后读，并比较读出的值与写入的值是否一致</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n) <span class="keyword">begin</span></span><br><span class="line">        flow_cnt &lt;= <span class="number">2&#x27;b0</span>;</span><br><span class="line">        i2c_rh_wl &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        i2c_exec &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        i2c_addr &lt;= <span class="number">16&#x27;b0</span>;</span><br><span class="line">        i2c_data_w &lt;= <span class="number">8&#x27;b0</span>;</span><br><span class="line">        wait_cnt &lt;= <span class="number">14&#x27;b0</span>;</span><br><span class="line">        rw_done &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        rw_result &lt;= <span class="number">1&#x27;b0</span>;        </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">        i2c_exec &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        rw_done &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        <span class="keyword">case</span>(flow_cnt)</span><br><span class="line">            <span class="number">2&#x27;d0</span> : <span class="keyword">begin</span>                                  </span><br><span class="line">                wait_cnt &lt;= wait_cnt + <span class="number">1&#x27;b1</span>;               <span class="comment">//延时计数</span></span><br><span class="line">                <span class="keyword">if</span>(wait_cnt == WR_WAIT_TIME - <span class="number">1&#x27;b1</span>) <span class="keyword">begin</span>  <span class="comment">//EEPROM写操作延时完成</span></span><br><span class="line">                    wait_cnt &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    <span class="keyword">if</span>(i2c_addr == MAX_BYTE) <span class="keyword">begin</span>         <span class="comment">//256个字节写入完成</span></span><br><span class="line">                        i2c_addr &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        i2c_rh_wl &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                        flow_cnt &lt;= <span class="number">2&#x27;d2</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                        flow_cnt &lt;= flow_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">                        i2c_exec &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="number">2&#x27;d1</span> : <span class="keyword">begin</span></span><br><span class="line">                <span class="keyword">if</span>(i2c_done == <span class="number">1&#x27;b1</span>) <span class="keyword">begin</span>                 <span class="comment">//EEPROM单次写入完成</span></span><br><span class="line">                    flow_cnt &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">                    i2c_addr &lt;= i2c_addr + <span class="number">1&#x27;b1</span>;           <span class="comment">//地址0~255分别写入</span></span><br><span class="line">                    i2c_data_w &lt;= i2c_data_w + <span class="number">1&#x27;b1</span>;       <span class="comment">//数据0~255</span></span><br><span class="line">                <span class="keyword">end</span>    </span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="number">2&#x27;d2</span> : <span class="keyword">begin</span>                                   </span><br><span class="line">                flow_cnt &lt;= flow_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">                i2c_exec &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">            <span class="keyword">end</span>    </span><br><span class="line">            <span class="number">2&#x27;d3</span> : <span class="keyword">begin</span></span><br><span class="line">                <span class="keyword">if</span>(i2c_done == <span class="number">1&#x27;b1</span>) <span class="keyword">begin</span>                 <span class="comment">//EEPROM单次读出完成</span></span><br><span class="line">                    <span class="comment">//读出的值错误或者I2C未应答,读写测试失败</span></span><br><span class="line">                    <span class="keyword">if</span>((i2c_addr[<span class="number">7</span>:<span class="number">0</span>] != i2c_data_r) || (i2c_ack == <span class="number">1&#x27;b1</span>)) <span class="keyword">begin</span></span><br><span class="line">                        rw_done &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                        rw_result &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(i2c_addr == MAX_BYTE - <span class="number">1&#x27;b1</span>) <span class="keyword">begin</span> <span class="comment">//读写测试成功</span></span><br><span class="line">                        rw_done &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                        rw_result &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    <span class="keyword">end</span>    </span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                        flow_cnt &lt;= <span class="number">2&#x27;d2</span>;</span><br><span class="line">                        i2c_addr &lt;= i2c_addr + <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span>                 </span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">default</span> : ;</span><br><span class="line">        <span class="keyword">endcase</span>    </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>    </span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// led_alarm.v</span></span><br><span class="line"><span class="keyword">module</span> led_alarm </span><br><span class="line">    #(<span class="keyword">parameter</span> L_TIME = <span class="number">25&#x27;d25_000_000</span> </span><br><span class="line">    )</span><br><span class="line">    (</span><br><span class="line">    <span class="keyword">input</span>        clk       ,  <span class="comment">//时钟信号</span></span><br><span class="line">    <span class="keyword">input</span>        rst_n     ,  <span class="comment">//复位信号</span></span><br><span class="line">                 </span><br><span class="line">    <span class="keyword">input</span>        rw_done   ,  <span class="comment">//错误标志</span></span><br><span class="line">    <span class="keyword">input</span>        rw_result ,  <span class="comment">//E2PROM读写测试完成</span></span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>  led          <span class="comment">//E2PROM读写测试结果 0:失败 1:成功</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//reg define</span></span><br><span class="line"><span class="keyword">reg</span>          rw_done_flag;    <span class="comment">//读写测试完成标志</span></span><br><span class="line"><span class="keyword">reg</span>  [<span class="number">24</span>:<span class="number">0</span>]  led_cnt     ;    <span class="comment">//led计数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//读写测试完成标志</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n)</span><br><span class="line">        rw_done_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(rw_done)</span><br><span class="line">        rw_done_flag &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span>        </span><br><span class="line"></span><br><span class="line"><span class="comment">//错误标志为1时PL_LED0闪烁，否则PL_LED0常亮</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n) <span class="keyword">begin</span></span><br><span class="line">        led_cnt &lt;= <span class="number">25&#x27;d0</span>;</span><br><span class="line">        led &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(rw_done_flag) <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">if</span>(rw_result)                          <span class="comment">//读写测试正确</span></span><br><span class="line">                led &lt;= <span class="number">1&#x27;b1</span>;                       <span class="comment">//led灯常亮</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">begin</span>                             <span class="comment">//读写测试错误</span></span><br><span class="line">                led_cnt &lt;= led_cnt + <span class="number">25&#x27;d1</span>;</span><br><span class="line">                <span class="keyword">if</span>(led_cnt == L_TIME - <span class="number">1&#x27;b1</span>) <span class="keyword">begin</span></span><br><span class="line">                    led_cnt &lt;= <span class="number">25&#x27;d0</span>;</span><br><span class="line">                    led &lt;= ~led;                   <span class="comment">//led灯闪烁</span></span><br><span class="line">                <span class="keyword">end</span>                    </span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            led &lt;= <span class="number">1&#x27;b0</span>;                           <span class="comment">//读写测试完成之前,led灯熄灭</span></span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS15&#125; [get_ports sys_clk]</span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U2 IOSTANDARD LVCMOS15&#125; [get_ports sys_rst_n]</span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R6 IOSTANDARD LVCMOS33&#125; [get_ports iic_scl]</span><br><span class="line">set_property -dict &#123;PACKAGE_PIN T4 IOSTANDARD LVCMOS33&#125; [get_ports iic_sda]</span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R2 IOSTANDARD LVCMOS15&#125; [get_ports led]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：<br />略</p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>XC7A35T Verilog 例程（17）数字频率计</title>
    <link href="https://sirius-tblog.github.io/posts/3335218492.html"/>
    <id>https://sirius-tblog.github.io/posts/3335218492.html</id>
    <published>2022-10-29T00:35:18.000Z</published>
    <updated>2023-04-05T04:16:38.500Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现输入时钟的频率测试。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>无</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr><tr><td>clk_fx</td><td>input</td><td>U5</td><td>被测时钟</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a017b04c01.jpg" alt="" title="测量原理" /><br />在一次实际闸门时间GATE_TIME中，计数器对被测信号的计数值未fx_cnt，对基准时钟的频率为fs_cnt，而基准时钟的频率为CLK_FS，则被测信号的频率为clk_fx，即由公式<br />fs_cnt/CLK_FS = GATE_TIME = fx_cnt/clk_fx<br />得<br />clk_fx = fx_cnt*(CLK_FS/fs_cnt)</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line"> (   <span class="comment">//system clock</span></span><br><span class="line">        <span class="keyword">input</span>                 clk_fs ,     <span class="comment">// 基准时钟信号</span></span><br><span class="line">        <span class="keyword">input</span>                 rst_n  ,     <span class="comment">// 复位信号</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">input</span>                 clk_fx    <span class="comment">// 被测时钟信号</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">  cymometer</span><br><span class="line">  <span class="variable">#(.CLK_FS(26&#x27;d50000000))</span> <span class="comment">// 基准时钟频率值</span></span><br><span class="line">  inst_cymometer</span><br><span class="line">  (   <span class="comment">//system clock</span></span><br><span class="line">    <span class="variable">.clk_fs</span> (<span class="variable">.clk_fs</span> ),     <span class="comment">// 基准时钟信号</span></span><br><span class="line">    <span class="variable">.rst_n</span>  (<span class="variable">.rst_n</span>  ),     <span class="comment">// 复位信号</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">.clk_fx</span> (<span class="variable">.clk_fx</span> ),     <span class="comment">// 被测时钟信号</span></span><br><span class="line">    <span class="variable">.data_fx</span>  ()    <span class="comment">// 被测时钟频率输出</span></span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//cymometer.v</span></span><br><span class="line"><span class="keyword">module</span> cymometer</span><br><span class="line">   #(<span class="keyword">parameter</span>    CLK_FS = <span class="number">26&#x27;d50000000</span>) <span class="comment">// 基准时钟频率值</span></span><br><span class="line">    (   <span class="comment">//system clock</span></span><br><span class="line">        <span class="keyword">input</span>                 clk_fs ,     <span class="comment">// 基准时钟信号</span></span><br><span class="line">        <span class="keyword">input</span>                 rst_n  ,     <span class="comment">// 复位信号</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//cymometer interface</span></span><br><span class="line">        <span class="keyword">input</span>                 clk_fx ,     <span class="comment">// 被测时钟信号</span></span><br><span class="line">        <span class="keyword">output</span>   <span class="keyword">reg</span> [<span class="number">19</span>:<span class="number">0</span>]   data_fx      <span class="comment">// 被测时钟频率输出</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//parameter define</span></span><br><span class="line"><span class="keyword">localparam</span>   MAX       =  <span class="number">6&#x27;d32</span>;           <span class="comment">// 定义fs_cnt、fx_cnt的最大位宽</span></span><br><span class="line"><span class="keyword">localparam</span>   GATE_TIME = <span class="number">16&#x27;d5_000</span>;        <span class="comment">// 门控时间设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//reg define</span></span><br><span class="line"><span class="keyword">reg</span>                gate        ;           <span class="comment">// 门控信号</span></span><br><span class="line"><span class="keyword">reg</span>                gate_fs     ;           <span class="comment">// 同步到基准时钟的门控信号</span></span><br><span class="line"><span class="keyword">reg</span>                gate_fs_r   ;           <span class="comment">// 用于同步gate信号的寄存器</span></span><br><span class="line"><span class="keyword">reg</span>                gate_fs_d0  ;           <span class="comment">// 用于采集基准时钟下gate下降沿</span></span><br><span class="line"><span class="keyword">reg</span>                gate_fs_d1  ;           <span class="comment">// </span></span><br><span class="line"><span class="keyword">reg</span>                gate_fx_d0  ;           <span class="comment">// 用于采集被测时钟下gate下降沿</span></span><br><span class="line"><span class="keyword">reg</span>                gate_fx_d1  ;           <span class="comment">// </span></span><br><span class="line"><span class="keyword">reg</span>    [   <span class="number">63</span>:<span class="number">0</span>]   data_fx_t    ;          <span class="comment">// </span></span><br><span class="line"><span class="keyword">reg</span>    [   <span class="number">15</span>:<span class="number">0</span>]   gate_cnt    ;           <span class="comment">// 门控计数</span></span><br><span class="line"><span class="keyword">reg</span>    [MAX-<span class="number">1</span>:<span class="number">0</span>]   fs_cnt      ;           <span class="comment">// 门控时间内基准时钟的计数值</span></span><br><span class="line"><span class="keyword">reg</span>    [MAX-<span class="number">1</span>:<span class="number">0</span>]   fs_cnt_temp ;           <span class="comment">// fs_cnt 临时值</span></span><br><span class="line"><span class="keyword">reg</span>    [MAX-<span class="number">1</span>:<span class="number">0</span>]   fx_cnt      ;           <span class="comment">// 门控时间内被测时钟的计数值</span></span><br><span class="line"><span class="keyword">reg</span>    [MAX-<span class="number">1</span>:<span class="number">0</span>]   fx_cnt_temp ;           <span class="comment">// fx_cnt 临时值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//wire define</span></span><br><span class="line"><span class="keyword">wire</span>               neg_gate_fs;            <span class="comment">// 基准时钟下门控信号下降沿</span></span><br><span class="line"><span class="keyword">wire</span>               neg_gate_fx;            <span class="comment">// 被测时钟下门控信号下降沿</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//边沿检测，捕获信号下降沿</span></span><br><span class="line"><span class="keyword">assign</span> neg_gate_fs = gate_fs_d1 &amp; (~gate_fs_d0);</span><br><span class="line"><span class="keyword">assign</span> neg_gate_fx = gate_fx_d1 &amp; (~gate_fx_d0);</span><br><span class="line"></span><br><span class="line"><span class="comment">//门控信号计数器，使用被测时钟计数</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk_fx <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n)</span><br><span class="line">        gate_cnt &lt;= <span class="number">16&#x27;d0</span>; </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(gate_cnt == GATE_TIME + <span class="number">5&#x27;d20</span>)</span><br><span class="line">        gate_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        gate_cnt &lt;= gate_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//门控信号，拉高时间为GATE_TIME个实测时钟周期</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk_fx <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n)</span><br><span class="line">        gate &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(gate_cnt &lt; <span class="number">4&#x27;d10</span>)</span><br><span class="line">        gate &lt;= <span class="number">1&#x27;b0</span>;     </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(gate_cnt &lt; GATE_TIME + <span class="number">4&#x27;d10</span>)</span><br><span class="line">        gate &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(gate_cnt &lt;= GATE_TIME + <span class="number">5&#x27;d20</span>)</span><br><span class="line">        gate &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        gate &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将门控信号同步到基准时钟下</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk_fs <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        gate_fs_r &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        gate_fs   &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        gate_fs_r &lt;= gate;</span><br><span class="line">        gate_fs   &lt;= gate_fs_r;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打拍采门控信号的下降沿（被测时钟下）</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk_fx <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        gate_fx_d0 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        gate_fx_d1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        gate_fx_d0 &lt;= gate;</span><br><span class="line">        gate_fx_d1 &lt;= gate_fx_d0;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打拍采门控信号的下降沿（基准时钟下）</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk_fs <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        gate_fs_d0 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        gate_fs_d1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        gate_fs_d0 &lt;= gate_fs;</span><br><span class="line">        gate_fs_d1 &lt;= gate_fs_d0;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//门控时间内对被测时钟计数</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk_fx <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        fx_cnt_temp &lt;= <span class="number">32&#x27;d0</span>;</span><br><span class="line">        fx_cnt &lt;= <span class="number">32&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(gate)</span><br><span class="line">        fx_cnt_temp &lt;= fx_cnt_temp + <span class="number">1&#x27;b1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(neg_gate_fx) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        fx_cnt_temp &lt;= <span class="number">32&#x27;d0</span>;</span><br><span class="line">        fx_cnt   &lt;= fx_cnt_temp;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//门控时间内对基准时钟计数</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk_fs <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        fs_cnt_temp &lt;= <span class="number">32&#x27;d0</span>;</span><br><span class="line">        fs_cnt &lt;= <span class="number">32&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(gate_fs)</span><br><span class="line">        fs_cnt_temp &lt;= fs_cnt_temp + <span class="number">1&#x27;b1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(neg_gate_fs) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        fs_cnt_temp &lt;= <span class="number">32&#x27;d0</span>;</span><br><span class="line">        fs_cnt &lt;= fs_cnt_temp;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//计算被测信号频率</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk_fs <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n) </span><br><span class="line">        data_fx_t &lt;= <span class="number">64&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(gate_fs == <span class="number">1&#x27;b0</span>)</span><br><span class="line">        data_fx_t &lt;= CLK_FS * fx_cnt ;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk_fs <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n) </span><br><span class="line">        data_fx &lt;= <span class="number">20&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(gate_fs == <span class="number">1&#x27;b0</span>)</span><br><span class="line">        data_fx &lt;= data_fx_t / fs_cnt ;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS33&#125; [get_ports sys_clk]</span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U2 IOSTANDARD LVCMOS33&#125; [get_ports sys_rst_n]</span><br><span class="line">set_property -dict &#123;PACKAGE_PIN K16 IOSTANDARD LVCMOS33&#125; [get_ports clk_fx]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：<br />略</p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>【未完】XC7A35T Verilog 例程（13）RGB-LCD彩条显示驱动</title>
    <link href="https://sirius-tblog.github.io/posts/1384587248.html"/>
    <id>https://sirius-tblog.github.io/posts/1384587248.html</id>
    <published>2022-10-28T23:35:18.000Z</published>
    <updated>2023-04-05T04:15:29.369Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。<br />目标器件：LCD显示器（RGB-LCD）。</p><h3 id="主要应用参数"><a class="markdownIt-Anchor" href="#主要应用参数"></a> 主要应用参数</h3><p>1.分辨率<br />积点成线，线连成面，显示器就是由一个个发光点组成。这里的点作为显示器显示的最小单元共同汇聚成了一块显示屏，1080P的意思，就是一块LCD显示屏上的像素数量是1920*1080个（即2073600个像素点），即一列1080个像素点，一共1920列。</p><p>2.像素格式<br />像素的显示格式，就是通过三原色的光亮控制配比来完成更多色彩的显示，光亮是通过控制字节来完成的，控制字节就是将光亮亮度等比例划分，控制字节越多，光亮等级划分越细，能够产生的颜色配置更细腻。<br />RGB888指的是红光（R）使用8bit控制、绿光（G）使用8bit控制、蓝光（B）使用8bit控制，共24bit（即3字节），即一个像素点的显示使用3字节来控制；<br />RGB565指的是红光（R）使用5bit控制、绿光（G）使用6bit控制、蓝光（B）使用5bit控制，共16bit（即2字节）。</p><p>3.LCD接口</p><table><thead><tr><th>信号线</th><th>说明</th></tr></thead><tbody><tr><td>R[7:0]</td><td>红色数据线</td></tr><tr><td>G[7:0]</td><td>绿色数据线</td></tr><tr><td>B[7:0]</td><td>蓝色数据线</td></tr><tr><td>DE</td><td>数据使能端</td></tr><tr><td>VSYNC</td><td>垂直同步信号线</td></tr><tr><td>HSYNC</td><td>水平同步信号线</td></tr><tr><td>PCLK</td><td>像素时钟信号线</td></tr></tbody></table><p>4.LCD时间参数</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">          </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：<br />略</p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>XC7A35T Verilog 例程（12）接口UART RS232驱动</title>
    <link href="https://sirius-tblog.github.io/posts/1836737662.html"/>
    <id>https://sirius-tblog.github.io/posts/1836737662.html</id>
    <published>2022-10-28T02:20:18.000Z</published>
    <updated>2023-04-05T04:15:26.316Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。<br />目标器件：CH340 （串口转USB,电平类型转换芯片，TTL电平与USB差分电平的转换）<br />目标器件：SP3232 （电平类型转换芯片，TTL电平与RS232电平的转换）</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现串口通信协议的传输效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a012b03c01.jpg" alt="" title="硬件连接关系" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr><tr><td>uart_rxd</td><td>input</td><td>U5</td><td>串口收</td></tr><tr><td>uart_txd</td><td>output</td><td>T6</td><td>串口发</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a012b04c01.jpg" alt="" title="设计思路" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a012b04c02.jpg" alt="" title="通信时序" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>           sys_clk,            </span><br><span class="line">    <span class="keyword">input</span>           sys_rst_n,  </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">input</span>           uart_rxd,         </span><br><span class="line">    <span class="keyword">output</span>          uart_txd           </span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;        </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;        </span><br><span class="line">  </span><br><span class="line"><span class="keyword">wire</span>       uart_en_w;               </span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] uart_data_w;                            </span><br><span class="line"></span><br><span class="line">uart_recv #(                          </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_recv(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk), </span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">    </span><br><span class="line">    <span class="variable">.uart_rxd</span>       (uart_rxd),</span><br><span class="line">    <span class="variable">.uart_done</span>      (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_dout</span>      (uart_data_w)</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">uart_send #(                           </span><br><span class="line">    <span class="variable">.CLK_FREQ</span>       (CLK_FREQ),        </span><br><span class="line">    <span class="variable">.UART_BPS</span>       (UART_BPS))        </span><br><span class="line">u_uart_send(                 </span><br><span class="line">    <span class="variable">.sys_clk</span>        (sys_clk),</span><br><span class="line">    <span class="variable">.sys_rst_n</span>      (sys_rst_n),</span><br><span class="line">     </span><br><span class="line">    <span class="variable">.uart_en</span>        (uart_en_w),</span><br><span class="line">    <span class="variable">.uart_din</span>       (uart_data_w),</span><br><span class="line">    <span class="variable">.tx_flag</span>        (tx_flag),</span><br><span class="line">    <span class="variable">.uart_txd</span>       (uart_txd)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_send.v</span></span><br><span class="line"><span class="keyword">module</span> uart_send</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>      sys_clk,                  </span><br><span class="line">    <span class="keyword">input</span>         sys_rst_n,                 </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>         uart_en,      </span><br><span class="line">    <span class="keyword">input</span>  [<span class="number">7</span>:<span class="number">0</span>]  uart_din,   </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   tx_flag, </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>   uart_txd           </span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;    <span class="comment">//Source Clock</span></span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        <span class="comment">//Buad Rate</span></span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">//</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d0; </span><br><span class="line"><span class="keyword">reg</span>        uart_en_d1;  </span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;          </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;  </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] tx_data; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">wire</span>       en_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> en_flag = (~uart_en_d1) &amp; uart_en_d0;</span><br><span class="line">                                                 </span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_en_d0 &lt;= <span class="number">1&#x27;b0</span>;                                  </span><br><span class="line">        uart_en_d1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                                               </span><br><span class="line">        uart_en_d0 &lt;= uart_en;                               </span><br><span class="line">        uart_en_d1 &lt;= uart_en_d0;                            </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (en_flag)    <span class="comment">//start of process</span></span><br><span class="line">    <span class="keyword">begin</span>                                  </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b1</span>;      </span><br><span class="line">        tx_data &lt;= uart_din;  <span class="comment">//Load Data</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))    <span class="comment">//end of process</span></span><br><span class="line">    <span class="keyword">begin</span>                 </span><br><span class="line">        tx_flag &lt;= <span class="number">1&#x27;b0</span>;  </span><br><span class="line">        tx_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        tx_flag &lt;= tx_flag;</span><br><span class="line">        tx_data &lt;= tx_data;</span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line"> <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag) </span><br><span class="line">    <span class="keyword">begin</span>                </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;       </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>; </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)  </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//IDEL</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (tx_flag)</span><br><span class="line">        <span class="keyword">case</span>(bit_cnt)</span><br><span class="line">            <span class="number">4&#x27;d0</span>: uart_txd &lt;= <span class="number">1&#x27;b0</span>;        <span class="comment">//start</span></span><br><span class="line">            <span class="number">4&#x27;d1</span>: uart_txd &lt;= tx_data[<span class="number">0</span>];  <span class="comment">//LSB</span></span><br><span class="line">            <span class="number">4&#x27;d2</span>: uart_txd &lt;= tx_data[<span class="number">1</span>];</span><br><span class="line">            <span class="number">4&#x27;d3</span>: uart_txd &lt;= tx_data[<span class="number">2</span>];</span><br><span class="line">            <span class="number">4&#x27;d4</span>: uart_txd &lt;= tx_data[<span class="number">3</span>];</span><br><span class="line">            <span class="number">4&#x27;d5</span>: uart_txd &lt;= tx_data[<span class="number">4</span>];</span><br><span class="line">            <span class="number">4&#x27;d6</span>: uart_txd &lt;= tx_data[<span class="number">5</span>];</span><br><span class="line">            <span class="number">4&#x27;d7</span>: uart_txd &lt;= tx_data[<span class="number">6</span>];</span><br><span class="line">            <span class="number">4&#x27;d8</span>: uart_txd &lt;= tx_data[<span class="number">7</span>];  <span class="comment">//MSB</span></span><br><span class="line">            <span class="number">4&#x27;d9</span>: uart_txd &lt;= <span class="number">1&#x27;b1</span>;        <span class="comment">//stop</span></span><br><span class="line">            <span class="keyword">default</span>: ;</span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        uart_txd &lt;= <span class="number">1&#x27;b1</span>;   <span class="comment">//IDEL</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span>          </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//uart_recv.v</span></span><br><span class="line"><span class="keyword">module</span> uart_recv</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">input</span>  sys_clk,                </span><br><span class="line">    <span class="keyword">input</span>             sys_rst_n,   </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>             uart_rxd,      </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>       uart_done,    </span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] uart_dout     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;   </span><br><span class="line"><span class="keyword">parameter</span>  UART_BPS = <span class="number">9600</span>;        </span><br><span class="line"><span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d0;</span><br><span class="line"><span class="keyword">reg</span>        uart_rxd_d1;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] clk_cnt;         </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">3</span>:<span class="number">0</span>] bit_cnt;        </span><br><span class="line"><span class="keyword">reg</span>        rx_flag;    </span><br><span class="line"><span class="keyword">reg</span> [ <span class="number">7</span>:<span class="number">0</span>] rxdata;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span>       start_flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span>  start_flag = uart_rxd_d1 &amp; (~uart_rxd_d0);    </span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span> </span><br><span class="line">        uart_rxd_d0 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        uart_rxd_d1 &lt;= <span class="number">1&#x27;b0</span>;          </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_rxd_d0  &lt;= uart_rxd;                   </span><br><span class="line">        uart_rxd_d1  &lt;= uart_rxd_d0;</span><br><span class="line">    <span class="keyword">end</span>   </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n)                                  </span><br><span class="line">        rx_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(start_flag)                          </span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b1</span>;          </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>((bit_cnt == <span class="number">4&#x27;d9</span>)&amp;&amp;(clk_cnt == BPS_CNT/<span class="number">2</span>))</span><br><span class="line">            rx_flag &lt;= <span class="number">1&#x27;b0</span>;              </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rx_flag &lt;= rx_flag;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>         </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span>                             </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;                                  </span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span>                                                      </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( rx_flag ) </span><br><span class="line">    <span class="keyword">begin</span>                  </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt &lt; BPS_CNT - <span class="number">1</span>) </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= clk_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">            bit_cnt  &lt;= bit_cnt;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            clk_cnt &lt;= <span class="number">16&#x27;d0</span>;            </span><br><span class="line">            bit_cnt  &lt;= bit_cnt + <span class="number">1&#x27;b1</span>;   </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span>                   </span><br><span class="line">        clk_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">        bit_cnt  &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">if</span> ( !sys_rst_n)  </span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;                                     </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(rx_flag)   </span><br><span class="line">        <span class="keyword">if</span> (clk_cnt == BPS_CNT/<span class="number">2</span>) </span><br><span class="line">        <span class="keyword">begin</span>   </span><br><span class="line">            <span class="keyword">case</span> ( bit_cnt )</span><br><span class="line">             <span class="number">4&#x27;d1</span> : rxdata[<span class="number">0</span>] &lt;= uart_rxd_d1;   <span class="comment">//LSB</span></span><br><span class="line">             <span class="number">4&#x27;d2</span> : rxdata[<span class="number">1</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d3</span> : rxdata[<span class="number">2</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d4</span> : rxdata[<span class="number">3</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d5</span> : rxdata[<span class="number">4</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d6</span> : rxdata[<span class="number">5</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d7</span> : rxdata[<span class="number">6</span>] &lt;= uart_rxd_d1;</span><br><span class="line">             <span class="number">4&#x27;d8</span> : rxdata[<span class="number">7</span>] &lt;= uart_rxd_d1;   <span class="comment">//MSB</span></span><br><span class="line">             <span class="keyword">default</span>:;                                    </span><br><span class="line">            <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            rxdata &lt;= rxdata;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        rxdata &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> sys_clk <span class="keyword">or</span> <span class="keyword">negedge</span> sys_rst_n) </span><br><span class="line"><span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span> (!sys_rst_n) </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                               </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(bit_cnt == <span class="number">4&#x27;d9</span>) </span><br><span class="line">    <span class="keyword">begin</span>                      </span><br><span class="line">        uart_dout &lt;= rxdata;        <span class="comment">//collect Data </span></span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b1</span>;          <span class="comment">//valid  </span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        uart_dout &lt;= <span class="number">8&#x27;d0</span>;                                   </span><br><span class="line">        uart_done &lt;= <span class="number">1&#x27;b0</span>; </span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">create_clock -period 20.000 -name clk [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS33&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U2 IOSTANDARD LVCMOS33&#125; [get_ports sys_rst_n] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U5 IOSTANDARD LVCMOS33&#125; [get_ports uart_rxd] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN T6 IOSTANDARD LVCMOS33&#125; [get_ports uart_txd]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">reg</span> uart_rxd;</span><br><span class="line">  <span class="keyword">wire</span> uart_txd;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">parameter</span>  CLK_FREQ = <span class="number">50000000</span>;       <span class="comment">// 驱动时钟 50MHz ，20ns</span></span><br><span class="line">  <span class="keyword">parameter</span>  UART_BPS = <span class="number">115200</span>;         <span class="comment">// 波特率 115200 bps</span></span><br><span class="line">  <span class="keyword">localparam</span> BPS_CNT  = CLK_FREQ/UART_BPS;  <span class="comment">// 单bit传输耗时 BPS_CNT 个驱动时钟周期</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;    <span class="comment">//IDEL</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//START</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit0</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit1</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit2</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit3</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit4</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit5</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//bit6</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b0</span>;<span class="comment">//bit7</span></span><br><span class="line">    <span class="variable">#(BPS_CNT*20)</span></span><br><span class="line">    uart_rxd = <span class="number">1&#x27;b1</span>;<span class="comment">//STOP and IDEL</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo </span><br><span class="line">  <span class="variable">#(.CLK_FREQ (CLK_FREQ)</span>,</span><br><span class="line">  <span class="variable">.UART_BPS</span> (UART_BPS))</span><br><span class="line">  inst_uart</span><br><span class="line">   (</span><br><span class="line">    <span class="variable">.sys_rst_n</span>(sys_rst_n), </span><br><span class="line">    <span class="variable">.sys_clk</span>(sys_clk),</span><br><span class="line">    <span class="variable">.uart_txd</span>(uart_txd),</span><br><span class="line">    <span class="variable">.uart_rxd</span>(uart_rxd)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br />略</p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>XC7A35T Verilog 例程（11）Xilinx FIFO核应用</title>
    <link href="https://sirius-tblog.github.io/posts/1239873178.html"/>
    <id>https://sirius-tblog.github.io/posts/1239873178.html</id>
    <published>2022-10-28T01:59:18.000Z</published>
    <updated>2023-04-05T04:15:22.431Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要通过FIFO核熟悉FIFO的读写及IP核使用。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>略</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>配置位宽<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b04c01.jpg" alt="" title="设计思路" />{width=“400px”}</p><h2 id="ip配置"><a class="markdownIt-Anchor" href="#ip配置"></a> IP配置</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a011b05c01.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b05c02.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b05c03.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b05c04.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b05c05.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b05c06.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b05c07.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b05c08.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b05c09.jpg" alt="" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">wire</span> almost_empty,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">wire</span> almost_full,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">wire</span> fifo_rd_en,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>]fifo_dout,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">wire</span> fifo_wr_en,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] fifo_din,</span><br><span class="line"></span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">wire</span> fifo_empty,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">wire</span> fifo_full,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">wire</span> [<span class="number">7</span> : <span class="number">0</span>] fifo_rd_data_count,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">wire</span> [<span class="number">7</span> : <span class="number">0</span>] fifo_wr_data_count</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">fifo_read inst_fifo_read</span><br><span class="line">(</span><br><span class="line">  . clk (sys_clk),</span><br><span class="line">  . rst_n (sys_rst_n),</span><br><span class="line">  . almost_empty (almost_empty),</span><br><span class="line">  . almost_full (almost_full),</span><br><span class="line">  . rd_en (fifo_rd_en),</span><br><span class="line">  . rd_data (fifo_dout)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">fifo_write inst_fifo_write</span><br><span class="line">(</span><br><span class="line">  . clk (sys_clk),</span><br><span class="line">  . rst_n (sys_rst_n),</span><br><span class="line">  . almost_empty (almost_empty),</span><br><span class="line">  . almost_full (almost_full),</span><br><span class="line">  . wr_en (fifo_wr_en),</span><br><span class="line">  . wr_data (fifo_din)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">fifo_generator_0 your_instance_name (</span><br><span class="line">  <span class="variable">.wr_clk</span>(sys_clk),                <span class="comment">// input wire wr_clk</span></span><br><span class="line">  <span class="variable">.rd_clk</span>(sys_clk),                <span class="comment">// input wire rd_clk</span></span><br><span class="line">  <span class="variable">.din</span>(fifo_din),                      <span class="comment">// input wire [7 : 0] din</span></span><br><span class="line">  <span class="variable">.wr_en</span>(fifo_wr_en),                  <span class="comment">// input wire wr_en</span></span><br><span class="line">  <span class="variable">.rd_en</span>(fifo_rd_en),                  <span class="comment">// input wire rd_en</span></span><br><span class="line">  <span class="variable">.dout</span>(fifo_dout),                    <span class="comment">// output wire [7 : 0] dout</span></span><br><span class="line">  <span class="variable">.full</span>(fifo_full),                    <span class="comment">// output wire full</span></span><br><span class="line">  <span class="variable">.almost_full</span>(almost_full),      <span class="comment">// output wire almost_full</span></span><br><span class="line">  <span class="variable">.empty</span>(fifo_empty),                  <span class="comment">// output wire empty</span></span><br><span class="line">  <span class="variable">.almost_empty</span>(almost_empty),    <span class="comment">// output wire almost_empty</span></span><br><span class="line">  <span class="variable">.rd_data_count</span>(fifo_rd_data_count),  <span class="comment">// output wire [7 : 0] rd_data_count</span></span><br><span class="line">  <span class="variable">.wr_data_count</span>(fifo_wr_data_count)  <span class="comment">// output wire [7 : 0] wr_data_count</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//fifo_write.v</span></span><br><span class="line"><span class="keyword">module</span> fifo_write</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rst_n,</span><br><span class="line">  <span class="keyword">input</span> almost_empty,</span><br><span class="line">  <span class="keyword">input</span> almost_full,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> wr_en,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] wr_data</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] state;</span><br><span class="line"><span class="keyword">reg</span> almost_empty_d0,almost_empty_d1;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] delay_cnt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rst_n)</span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    almost_empty_d0 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    almost_empty_d1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    almost_empty_d0 &lt;= almost_empty;</span><br><span class="line">    almost_empty_d1 &lt;= almost_empty_d0;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rst_n)</span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    wr_en &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    wr_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">    state &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">    delay_cnt &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">case</span>(state)</span><br><span class="line">      <span class="number">2&#x27;d0</span> : <span class="keyword">begin</span> <span class="comment">//IDEL</span></span><br><span class="line">        <span class="keyword">if</span>(almost_empty_d1)</span><br><span class="line">          state &lt;= <span class="number">2&#x27;d1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          state &lt;= state;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="number">2&#x27;d1</span> : <span class="keyword">begin</span> <span class="comment">//DELAY</span></span><br><span class="line">        <span class="keyword">if</span>(delay_cnt==<span class="number">4&#x27;d10</span>)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          delay_cnt &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">          state &lt;= <span class="number">2&#x27;d2</span>;</span><br><span class="line">          wr_en &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          delay_cnt &lt;= delay_cnt+<span class="number">4&#x27;d1</span>;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="number">2&#x27;d2</span> : <span class="keyword">begin</span> <span class="comment">//WRITE</span></span><br><span class="line">        <span class="keyword">if</span>(almost_full)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          wr_en &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">          wr_data &lt;= <span class="number">8&#x27;d0</span>;</span><br><span class="line">          state &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          wr_en &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">          wr_data &lt;= wr_data+<span class="number">1&#x27;b1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">default</span>:state &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//fifo_read.v</span></span><br><span class="line"><span class="keyword">module</span> fifo_read</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rst_n,</span><br><span class="line">  <span class="keyword">input</span> almost_empty,</span><br><span class="line">  <span class="keyword">input</span> almost_full,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> rd_en,</span><br><span class="line">  <span class="keyword">input</span> [<span class="number">7</span>:<span class="number">0</span>] rd_data</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] state;</span><br><span class="line"><span class="keyword">reg</span> almost_full_d0,almost_full_d1;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] delay_cnt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rst_n)</span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    almost_full_d0 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    almost_full_d1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    almost_full_d0 &lt;= almost_full;</span><br><span class="line">    almost_full_d1 &lt;= almost_full_d0;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rst_n)</span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    rd_en &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    state &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">    delay_cnt &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">case</span>(state)</span><br><span class="line">      <span class="number">2&#x27;d0</span> : <span class="keyword">begin</span> <span class="comment">//IDEL</span></span><br><span class="line">        <span class="keyword">if</span>(almost_full_d1)</span><br><span class="line">          state &lt;= <span class="number">2&#x27;d1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          state &lt;= state;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="number">2&#x27;d1</span> : <span class="keyword">begin</span> <span class="comment">//DELAY</span></span><br><span class="line">        <span class="keyword">if</span>(delay_cnt==<span class="number">4&#x27;d10</span>)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          delay_cnt &lt;= <span class="number">4&#x27;d0</span>;</span><br><span class="line">          state &lt;= <span class="number">2&#x27;d2</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          delay_cnt &lt;= delay_cnt+<span class="number">4&#x27;d1</span>;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="number">2&#x27;d2</span> : <span class="keyword">begin</span> <span class="comment">//READ</span></span><br><span class="line">        <span class="keyword">if</span>(almost_empty)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          rd_en &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">          state &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">          rd_en &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">default</span>:state &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line"></span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS33&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U2 IOSTANDARD LVCMOS33&#125; [get_ports sys_rst_n]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  #<span class="number">30</span></span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>#<span class="number">10</span> sys_clk = ~sys_clk; </span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span> almost_empty;</span><br><span class="line"><span class="keyword">wire</span> almost_full;</span><br><span class="line"><span class="keyword">wire</span> fifo_rd_en;</span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>]fifo_dout;</span><br><span class="line"><span class="keyword">wire</span> fifo_wr_en;</span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] fifo_din;</span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span> fifo_empty;</span><br><span class="line"><span class="keyword">wire</span> fifo_full;</span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span> : <span class="number">0</span>] fifo_rd_data_count;</span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span> : <span class="number">0</span>] fifo_wr_data_count;</span><br><span class="line"></span><br><span class="line">demo inst_demo (</span><br><span class="line">  <span class="variable">.sys_clk</span>(sys_clk),                <span class="comment">// input wire rd_clk</span></span><br><span class="line">  <span class="variable">.sys_rst_n</span>(sys_rst_n),                <span class="comment">// input wire rd_clk</span></span><br><span class="line">  <span class="variable">.fifo_din</span>(fifo_din),                      <span class="comment">// input wire [7 : 0] din</span></span><br><span class="line">  <span class="variable">.fifo_wr_en</span>(fifo_wr_en),                  <span class="comment">// input wire wr_en</span></span><br><span class="line">  <span class="variable">.fifo_rd_en</span>(fifo_rd_en),                  <span class="comment">// input wire rd_en</span></span><br><span class="line">  <span class="variable">.fifo_dout</span>(fifo_dout),                    <span class="comment">// output wire [7 : 0] dout</span></span><br><span class="line">  <span class="variable">.fifo_full</span>(fifo_full),                    <span class="comment">// output wire full</span></span><br><span class="line">  <span class="variable">.almost_full</span>(almost_full),      <span class="comment">// output wire almost_full</span></span><br><span class="line">  <span class="variable">.fifo_empty</span>(fifo_empty),                  <span class="comment">// output wire empty</span></span><br><span class="line">  <span class="variable">.almost_empty</span>(almost_empty),    <span class="comment">// output wire almost_empty</span></span><br><span class="line">  <span class="variable">.fifo_rd_data_count</span>(fifo_rd_data_count),  <span class="comment">// output wire [7 : 0] rd_data_count</span></span><br><span class="line">  <span class="variable">.fifo_wr_data_count</span>(fifo_wr_data_count)  <span class="comment">// output wire [7 : 0] wr_data_count</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br />“启动-复位释放-写状态机IDEL-写状态机DELAY-写状态机WRITE”过程<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b07c01.jpg" alt="" title="仿真结果" /><br />“写状态机WRITE”阶段的FIFO核的状态变化，可以看到由空到非空状态 din、almost_empty、empty与rd_count、wr_count的关系<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b07c02.jpg" alt="" title="仿真结果" /><br />“写状态机WRITE”阶段的FIFO核的状态变化，可以看到由非满到满状态 din、almost_full、full与rd_count、wr_count的关系<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b07c03.jpg" alt="" title="仿真结果" /><br />“写状态机-读状态机”过程的FIFO核的状态变化，可以看到由满到非满状态 din、almost_full、full与rd_count、wr_count的关系<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b07c04.jpg" alt="" title="仿真结果" /><br />“读状态机READ”阶段的FIFO核的状态变化，可以看到由非空到空状态 din、almost_empty、empty与rd_count、wr_count的关系<br /><img src="/assets/article/xc7a35t-verilog/examples_a011b07c05.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>XC7A35T Verilog 例程（10）Xilinx RAM核应用</title>
    <link href="https://sirius-tblog.github.io/posts/2451945340.html"/>
    <id>https://sirius-tblog.github.io/posts/2451945340.html</id>
    <published>2022-10-28T01:00:18.000Z</published>
    <updated>2023-04-05T04:15:19.200Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要通过RAM核熟悉RAM的读写及IP核使用。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>使用IP核构建位宽为8，深度为32的单端口RAM，并进行读写测试。</p><h2 id="ip配置"><a class="markdownIt-Anchor" href="#ip配置"></a> IP配置</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a010b05c01.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a010b05c02.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a010b05c03.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a010b05c04.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a010b05c05.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a010b05c06.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a010b05c07.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a010b05c08.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a010b05c09.jpg" alt="" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n</span><br><span class="line">);</span><br><span class="line">  <span class="keyword">wire</span> ram_en;</span><br><span class="line">  <span class="keyword">wire</span> ram_wea;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">4</span>:<span class="number">0</span>] ram_addr ;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] ram_wr_data ;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] ram_rd_data ;</span><br><span class="line"></span><br><span class="line">ram_rw inst_rw_ram (</span><br><span class="line">  <span class="variable">.clk</span>(sys_clk),     </span><br><span class="line">  <span class="variable">.rst_n</span>(sys_rst_n),     </span><br><span class="line">  <span class="variable">.ram_en</span>(ram_en),       </span><br><span class="line">  <span class="variable">.ram_wea</span>(ram_wea),      </span><br><span class="line">  <span class="variable">.ram_addr</span>(ram_addr), </span><br><span class="line">  <span class="variable">.ram_wr_data</span>(ram_wr_data),    </span><br><span class="line">  <span class="variable">.ram_rd_data</span>(ram_rd_data)   </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">blk_mem_gen_0 inst_IP_ram (</span><br><span class="line">  <span class="variable">.clka</span>(sys_clk),    <span class="comment">// input wire clka</span></span><br><span class="line">  <span class="variable">.ena</span>(ram_en),      <span class="comment">// input wire ena</span></span><br><span class="line">  <span class="variable">.wea</span>(ram_wea),      <span class="comment">// input wire [0 : 0] wea</span></span><br><span class="line">  <span class="variable">.addra</span>(ram_addr),  <span class="comment">// input wire [4 : 0] addra</span></span><br><span class="line">  <span class="variable">.dina</span>(ram_wr_data),    <span class="comment">// input wire [7 : 0] dina</span></span><br><span class="line">  <span class="variable">.douta</span>(ram_rd_data)  <span class="comment">// output wire [7 : 0] douta</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ram_rw.v</span></span><br><span class="line"><span class="keyword">module</span> ram_rw(</span><br><span class="line">  <span class="keyword">input</span> clk ,</span><br><span class="line">  <span class="keyword">input</span> rst_n ,</span><br><span class="line">  <span class="keyword">output</span> ram_en ,</span><br><span class="line">  <span class="keyword">output</span> ram_wea ,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">4</span>:<span class="number">0</span>] ram_addr ,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] ram_wr_data,</span><br><span class="line">  <span class="keyword">input</span> [<span class="number">7</span>:<span class="number">0</span>] ram_rd_data</span><br><span class="line">);</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">0</span>] rw_cnt ;</span><br><span class="line"><span class="keyword">assign</span> ram_en = rst_n;</span><br><span class="line"><span class="keyword">assign</span> ram_wea = (rw_cnt &lt;= <span class="number">6&#x27;d31</span> &amp;&amp; ram_en == <span class="number">1&#x27;b1</span>) ? <span class="number">1&#x27;b1</span> : <span class="number">1&#x27;b0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(rst_n == <span class="number">1&#x27;b0</span>)</span><br><span class="line">    rw_cnt &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(rw_cnt == <span class="number">6&#x27;d63</span>)</span><br><span class="line">    rw_cnt &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    rw_cnt &lt;= rw_cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(rst_n == <span class="number">1&#x27;b0</span>)</span><br><span class="line">    ram_wr_data &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(rw_cnt &lt;= <span class="number">6&#x27;d31</span>)</span><br><span class="line">    ram_wr_data &lt;= ram_wr_data + <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    ram_wr_data &lt;= <span class="number">1&#x27;b0</span> ;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(rst_n == <span class="number">1&#x27;b0</span>)</span><br><span class="line">    ram_addr &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(ram_addr == <span class="number">5&#x27;d31</span>)</span><br><span class="line">    ram_addr &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    ram_addr &lt;= ram_addr + <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS33&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U2 IOSTANDARD LVCMOS33&#125; [get_ports sys_rst_n]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo inst_ram_rw</span><br><span class="line">   (</span><br><span class="line">    <span class="variable">.sys_rst_n</span>(sys_rst_n), </span><br><span class="line">    <span class="variable">.sys_clk</span>(sys_clk)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br /><img src="/assets/article/xc7a35t-verilog/examples_a010b07c01.jpg" alt="" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>XC7A35T Verilog 例程（9）Xilinx PLL核应用</title>
    <link href="https://sirius-tblog.github.io/posts/2382141945.html"/>
    <id>https://sirius-tblog.github.io/posts/2382141945.html</id>
    <published>2022-10-28T00:47:18.000Z</published>
    <updated>2023-04-05T04:15:15.928Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要通过PLL这一时钟IP核实现对官方IP应用的认知。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/xc7a35t-verilog/examples_a009b03c01.jpg" alt="" title="硬件端口" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr><tr><td>clk_100M</td><td>output</td><td>M16</td><td>100MHz时钟</td></tr><tr><td>clk_100M_pd</td><td>output</td><td>L15</td><td>100MHz时钟,反相</td></tr><tr><td>clk_50M</td><td>output</td><td>M15</td><td>50MHz时钟</td></tr><tr><td>clk_25M</td><td>output</td><td>L14</td><td>25MHz时钟</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>通过参数配置PLL核，实现分频和倍频以及相位偏移。</p><h2 id="ip配置"><a class="markdownIt-Anchor" href="#ip配置"></a> IP配置</h2><p>参数：单端输入50MHz,从4输出端口分别输出100MHz倍频钟、反相100MHz、50MHz、25MHz分频。<br /><img src="/assets/article/xc7a35t-verilog/examples_a009b05c01.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a009b05c02.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a009b05c03.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a009b05c04.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a009b05c05.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a009b05c06.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a009b05c07.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a009b05c08.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a009b05c09.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a009b05c10.jpg" alt="" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a009b05c11.jpg" alt="" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> clk_100M,</span><br><span class="line">  <span class="keyword">output</span> clk_100M_pd,</span><br><span class="line">  <span class="keyword">output</span> clk_50M,</span><br><span class="line">  <span class="keyword">output</span> clk_25M</span><br><span class="line">);</span><br><span class="line">  <span class="keyword">wire</span> locked;</span><br><span class="line"></span><br><span class="line">  clk_wiz_0 inst_IP_clock</span><br><span class="line">   (</span><br><span class="line">    <span class="comment">// Clock out ports</span></span><br><span class="line">    <span class="variable">.clk_out1</span>(clk_100M),     <span class="comment">// output clk_out1</span></span><br><span class="line">    <span class="variable">.clk_out2</span>(clk_100M_pd),     <span class="comment">// output clk_out2</span></span><br><span class="line">    <span class="variable">.clk_out3</span>(clk_50M),     <span class="comment">// output clk_out3</span></span><br><span class="line">    <span class="variable">.clk_out4</span>(clk_25M),     <span class="comment">// output clk_out4</span></span><br><span class="line">    <span class="comment">// Status and control signals</span></span><br><span class="line">    <span class="variable">.reset</span>(!sys_rst_n), <span class="comment">// input reset</span></span><br><span class="line">    <span class="variable">.locked</span>(locked),       <span class="comment">// output locked</span></span><br><span class="line">   <span class="comment">// Clock in ports</span></span><br><span class="line">    <span class="variable">.clk_in1</span>(sys_clk));      <span class="comment">// input clk_in1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS33&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U2 IOSTANDARD LVCMOS33&#125; [get_ports sys_rst_n] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN M16 IOSTANDARD LVCMOS33&#125; [get_ports clk_100m] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN L15 IOSTANDARD LVCMOS33&#125; [get_ports clk_100m_pd] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN M15 IOSTANDARD LVCMOS33&#125; [get_ports clk_50m] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN L14 IOSTANDARD LVCMOS33&#125; [get_ports clk_25m]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">wire</span> clk_100M;</span><br><span class="line">  <span class="keyword">wire</span> clk_100M_pd;</span><br><span class="line">  <span class="keyword">wire</span> clk_50M;</span><br><span class="line">  <span class="keyword">wire</span> clk_25M;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">always</span> #<span class="number">10</span> sys_clk = ~sys_clk;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">200</span></span><br><span class="line">    sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">  demo inst_clock_gen</span><br><span class="line">   (</span><br><span class="line">    <span class="comment">// Clock out ports</span></span><br><span class="line">    <span class="variable">.clk_out1</span>(clk_100M),     <span class="comment">// output clk_out1</span></span><br><span class="line">    <span class="variable">.clk_out2</span>(clk_100M_pd),     <span class="comment">// output clk_out2</span></span><br><span class="line">    <span class="variable">.clk_out3</span>(clk_50M),     <span class="comment">// output clk_out3</span></span><br><span class="line">    <span class="variable">.clk_out4</span>(clk_25M),     <span class="comment">// output clk_out4</span></span><br><span class="line">    <span class="comment">// Status and control signals</span></span><br><span class="line">    <span class="variable">.reset</span>(!sys_rst_n), <span class="comment">// input reset</span></span><br><span class="line">   <span class="comment">// Clock in ports</span></span><br><span class="line">    <span class="variable">.clk_in1</span>(sys_clk));      <span class="comment">// input clk_in1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br /><img src="/assets/article/xc7a35t-verilog/examples_a009b07c01.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>XC7A35T Verilog 例程（8）动态数码管</title>
    <link href="https://sirius-tblog.github.io/posts/314178488.html"/>
    <id>https://sirius-tblog.github.io/posts/314178488.html</id>
    <published>2022-10-28T00:39:18.000Z</published>
    <updated>2023-04-05T04:15:11.091Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。<br />控制对象：8段数码管。<br /><img src="https://img2022.cnblogs.com/blog/2907292/202208/2907292-20220817102133796-1937395401.png" alt="常见8段数码管实物图" /></p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要以有限端口实现多组8段数码管显示的效果。</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>XC7A35T Verilog 例程（7）静态数码管显示</title>
    <link href="https://sirius-tblog.github.io/posts/2686831974.html"/>
    <id>https://sirius-tblog.github.io/posts/2686831974.html</id>
    <published>2022-10-28T00:35:18.000Z</published>
    <updated>2023-04-05T04:15:08.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。<br />控制对象：8段数码管。<br /><img src="/assets/article/xc7a35t-verilog/examples_a007b01c01.jpg" alt="" title="常见8段数码管实物图" />{width=“400px”}</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现8段数码管显示的效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/xc7a35t-verilog/examples_a007b03c01.jpg" alt="" title="数码管内部连接" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a007b03c02.jpg" alt="" title="硬件连接" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U2</td><td>此处复位低有效</td></tr><tr><td>seg_led[0]</td><td>output</td><td>H15</td><td>数码管段选a</td></tr><tr><td>seg_led[1]</td><td>output</td><td>G16</td><td>数码管段选b</td></tr><tr><td>seg_led[2]</td><td>output</td><td>L13</td><td>数码管段选c</td></tr><tr><td>seg_led[3]</td><td>output</td><td>G15</td><td>数码管段选d</td></tr><tr><td>seg_led[4]</td><td>output</td><td>K13</td><td>数码管段选e</td></tr><tr><td>seg_led[5]</td><td>output</td><td>G13</td><td>数码管段选f</td></tr><tr><td>seg_led[6]</td><td>output</td><td>H14</td><td>数码管段选g</td></tr><tr><td>seg_led[7]</td><td>output</td><td>J14</td><td>数码管段选h</td></tr><tr><td>seg_sel[0]</td><td>output</td><td>J15</td><td>数码管位选0</td></tr><tr><td>seg_sel[1]</td><td>output</td><td>H17</td><td>数码管位选1</td></tr><tr><td>seg_sel[2]</td><td>output</td><td>H13</td><td>数码管位选2</td></tr><tr><td>seg_sel[3]</td><td>output</td><td>G17</td><td>数码管位选3</td></tr><tr><td>seg_sel[4]</td><td>output</td><td>H18</td><td>数码管位选4</td></tr><tr><td>seg_sel[5]</td><td>output</td><td>G18</td><td>数码管位选5</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a007b04c01.jpg" alt="" title="设计思路" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">5</span>:<span class="number">0</span>] seg_sel,</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">7</span>:<span class="number">0</span>] seg_led</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">parameter</span> TIME_SHOW = <span class="number">25&#x27;d25000000</span>; <span class="comment">//驻留时间</span></span><br><span class="line"><span class="keyword">wire</span> increase_flag;</span><br><span class="line"></span><br><span class="line">seg_display_static inst_seg_display_static</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.seg_sel</span>(seg_sel),</span><br><span class="line">  <span class="variable">.seg_led</span>(seg_led),</span><br><span class="line">  <span class="variable">.increase_flag</span>(increase_flag)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">time_count </span><br><span class="line">#(</span><br><span class="line"><span class="variable">.MAX_NUM</span>(TIME_SHOW )</span><br><span class="line">)</span><br><span class="line">inst_time_count</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.flag</span>(increase_flag)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>数码管静态驱动及显示样式</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//seg_display_static.v</span></span><br><span class="line"><span class="keyword">module</span> seg_display_static</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">input</span> increase_flag,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">0</span>] seg_sel,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] seg_led</span><br><span class="line">);</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] num;</span><br><span class="line"></span><br><span class="line"><span class="comment">//位选驱动，硬件连接中低电平驱动PNP三极管导通</span></span><br><span class="line"><span class="keyword">always</span> @ (<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (!rstn)</span><br><span class="line">    seg_sel &lt;= <span class="number">6&#x27;b111111</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    seg_sel &lt;= <span class="number">6&#x27;b000000</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @ (<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (!rstn)</span><br><span class="line">    num &lt;= <span class="number">4&#x27;h0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(increase_flag)</span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(num &lt; <span class="number">4&#x27;hf</span>)</span><br><span class="line">        num &lt;= num + <span class="number">1&#x27;b1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      num &lt;= <span class="number">4&#x27;h0</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    num &lt;= num;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @ (<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (!rstn)  <span class="comment">//全点亮</span></span><br><span class="line">    seg_led &lt;= <span class="number">8&#x27;b0000_0000</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">case</span>(num)  <span class="comment">//共阳极型驱动，低电平点亮</span></span><br><span class="line">      <span class="number">4&#x27;h0</span> : seg_led &lt;= <span class="number">8&#x27;b1100_0000</span>;<span class="comment">//&#x27;hC0</span></span><br><span class="line">      <span class="number">4&#x27;h1</span> : seg_led &lt;= <span class="number">8&#x27;b1111_1001</span>;<span class="comment">//&#x27;hF9</span></span><br><span class="line">      <span class="number">4&#x27;h2</span> : seg_led &lt;= <span class="number">8&#x27;b1010_0100</span>;<span class="comment">//&#x27;hA4</span></span><br><span class="line">      <span class="number">4&#x27;h3</span> : seg_led &lt;= <span class="number">8&#x27;b1011_0000</span>;<span class="comment">//&#x27;hB0</span></span><br><span class="line">      <span class="number">4&#x27;h4</span> : seg_led &lt;= <span class="number">8&#x27;b1001_1001</span>;<span class="comment">//&#x27;h99</span></span><br><span class="line">      <span class="number">4&#x27;h5</span> : seg_led &lt;= <span class="number">8&#x27;b1001_0010</span>;<span class="comment">//&#x27;h92</span></span><br><span class="line">      <span class="number">4&#x27;h6</span> : seg_led &lt;= <span class="number">8&#x27;b1000_0010</span>;<span class="comment">//&#x27;h82</span></span><br><span class="line">      <span class="number">4&#x27;h7</span> : seg_led &lt;= <span class="number">8&#x27;b1111_1000</span>;<span class="comment">//&#x27;hF8</span></span><br><span class="line">      <span class="number">4&#x27;h8</span> : seg_led &lt;= <span class="number">8&#x27;b1000_0000</span>;<span class="comment">//&#x27;h80</span></span><br><span class="line">      <span class="number">4&#x27;h9</span> : seg_led &lt;= <span class="number">8&#x27;b1001_0000</span>;<span class="comment">//&#x27;h90</span></span><br><span class="line">      <span class="number">4&#x27;ha</span> : seg_led &lt;= <span class="number">8&#x27;b1000_1000</span>;<span class="comment">//&#x27;h88</span></span><br><span class="line">      <span class="number">4&#x27;hb</span> : seg_led &lt;= <span class="number">8&#x27;b1000_0011</span>;<span class="comment">//&#x27;h83</span></span><br><span class="line">      <span class="number">4&#x27;hc</span> : seg_led &lt;= <span class="number">8&#x27;b1100_0110</span>;<span class="comment">//&#x27;hC6</span></span><br><span class="line">      <span class="number">4&#x27;hd</span> : seg_led &lt;= <span class="number">8&#x27;b1010_0001</span>;<span class="comment">//&#x27;hA1</span></span><br><span class="line">      <span class="number">4&#x27;he</span> : seg_led &lt;= <span class="number">8&#x27;b1000_0110</span>;<span class="comment">//&#x27;h86</span></span><br><span class="line">      <span class="number">4&#x27;hf</span> : seg_led &lt;= <span class="number">8&#x27;b1000_1110</span>;<span class="comment">//&#x27;h8E</span></span><br><span class="line">      <span class="keyword">default</span> : seg_led &lt;= <span class="number">8&#x27;b1100_0000</span>;<span class="comment">//&#x27;hC0</span></span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>单个样式显示驻留时长</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//time_count.v</span></span><br><span class="line"><span class="keyword">module</span> time_count</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> flag</span><br><span class="line">);</span><br><span class="line"><span class="keyword">parameter</span> MAX_NUM = <span class="number">25000000</span>;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">24</span>:<span class="number">0</span>] cnt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> (!rstn) </span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    cnt &lt;= <span class="number">24&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(cnt &lt; MAX_NUM - <span class="number">1&#x27;b1</span>) </span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    cnt &lt;= cnt + <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    flag &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">    cnt &lt;= <span class="number">24&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">set_property IOSTANDARD LVCMOS33[get_ports sys_clk] </span><br><span class="line">set_property IOSTANDARD LVCMOS33 [get_ports sys_rst_n] </span><br><span class="line">set_property PACKAGE_PIN U2 [get_ports sys_rst_n] </span><br><span class="line">set_property PACKAGE_PIN R4 [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN G18 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_sel[5]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN H18 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_sel[4]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN G17 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_sel[3]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN H13 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_sel[2]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN H17 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_sel[1]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN J15 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_sel[0]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN H15 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_led[0]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN G16 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_led[1]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN L13 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_led[2]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN G15 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_led[3]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN K13 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_led[4]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN G13 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_led[5]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN H14 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_led[6]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN J14 IOSTANDARD LVCMOS33&#125; [get_ports &#123;seg_led[7]&#125;] </span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] seg_led;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">5</span>:<span class="number">0</span>] seg_sel;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  #<span class="number">20</span></span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>#<span class="number">10</span> sys_clk = ~sys_clk; </span><br><span class="line"></span><br><span class="line">demo </span><br><span class="line">#(</span><br><span class="line">  <span class="variable">.TIME_SHOW</span> (<span class="number">25&#x27;d250</span>)  <span class="comment">//驻留时间</span></span><br><span class="line">)</span><br><span class="line">inst_seg_display_static</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.sys_clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.sys_rst_n</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.seg_led</span> (seg_led),</span><br><span class="line">  <span class="variable">.seg_sel</span>(seg_sel)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br /><img src="/assets/article/xc7a35t-verilog/examples_a007b06c01.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>XC7A35T Verilog 例程（6）呼吸灯</title>
    <link href="https://sirius-tblog.github.io/posts/2356580398.html"/>
    <id>https://sirius-tblog.github.io/posts/2356580398.html</id>
    <published>2022-10-28T00:27:18.000Z</published>
    <updated>2023-04-05T04:15:05.114Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现灯光由暗渐亮、由亮渐暗的效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/xc7a35t-verilog/examples_a006b03c01.jpg" alt="" title="硬件连接" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U7</td><td>此处复位低有效</td></tr><tr><td>led</td><td>output</td><td>V9</td><td>LED0，高电平点亮</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a006b04c01.jpg" alt="" title="设计思路" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> led</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">breath_led inst_breath_led</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.led</span>(led)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//breath_led.v</span></span><br><span class="line"><span class="keyword">module</span> breath_led</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">output</span> led</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] period_cnt;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] duty_cycle;</span><br><span class="line"><span class="keyword">reg</span> inc_dec_flag;</span><br><span class="line"></span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"><span class="keyword">assign</span> led = (period_cnt &gt;= duty_cycle) ? <span class="number">1&#x27;b1</span> : <span class="number">1&#x27;b0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    period_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(period_cnt == <span class="number">16&#x27;d50000</span>)</span><br><span class="line">    period_cnt &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    period_cnt &lt;= period_cnt+<span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//output value</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    duty_cycle &lt;= <span class="number">16&#x27;d0</span>;</span><br><span class="line">    inc_dec_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(period_cnt == <span class="number">16&#x27;d50000</span>)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span>(inc_dec_flag == <span class="number">1&#x27;b0</span>)</span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(duty_cycle == <span class="number">16&#x27;d50000</span>)</span><br><span class="line">          inc_dec_flag &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          duty_cycle &lt;= duty_cycle + <span class="number">16&#x27;d25</span>;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(duty_cycle == <span class="number">16&#x27;d0</span>)</span><br><span class="line">          inc_dec_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          duty_cycle &lt;= duty_cycle - <span class="number">16&#x27;d25</span>;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS15&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U7 IOSTANDARD LVCMOS15&#125; [get_ports sys_rst_n] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN V9 IOSTANDARD LVCMOS15&#125; [get_ports led]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">wire</span> led;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  #<span class="number">20</span></span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>#<span class="number">10</span> sys_clk = ~sys_clk; </span><br><span class="line"></span><br><span class="line">demo breath_led</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.sys_clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.sys_rst_n</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.led</span>(led)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br /><img src="/assets/article/xc7a35t-verilog/examples_a006b06c01.jpg" alt="" /><br /><img src="/assets/article/xc7a35t-verilog/examples_a006b06c02.jpg" alt="" /><br /><img src="/assets/article/xc7a35t-verilog/examples_a006b06c03.jpg" alt="" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>XC7A35T Verilog 例程（5）触摸键控灯</title>
    <link href="https://sirius-tblog.github.io/posts/1138237653.html"/>
    <id>https://sirius-tblog.github.io/posts/1138237653.html</id>
    <published>2022-10-28T00:20:18.000Z</published>
    <updated>2023-04-05T04:13:09.761Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现触摸式电容按键控制灯的开关效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/xc7a35t-verilog/examples_a005b03c01.jpg" alt="" title="硬件连接关系" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U7</td><td>此处复位低有效</td></tr><tr><td>led</td><td>output</td><td>V9</td><td>LED0，高电平点亮</td></tr><tr><td>touch_key</td><td>input</td><td>V8</td><td>触摸键信号</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a005b04c01.jpg" alt="" title="设计思路" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> led,</span><br><span class="line">  <span class="keyword">input</span> touch_key</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">touch_led inst_touch_led</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.touch_key</span> (touch_key),</span><br><span class="line">  <span class="variable">.led</span>(led)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//touch_led.v</span></span><br><span class="line"><span class="keyword">module</span> touch_led</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">input</span> touch_key,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> led</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] touch_key_r;</span><br><span class="line"><span class="keyword">wire</span> touch_en;</span><br><span class="line"></span><br><span class="line"><span class="comment">//check posedge</span></span><br><span class="line"><span class="keyword">assign</span> touch_en = (~touch_key_r[<span class="number">1</span>]) &amp; touch_key_r[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    touch_key_r &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    touch_key_r &lt;= &#123;touch_key_r[<span class="number">0</span>],touch_key&#125;;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//output value</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    led &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(touch_en)</span><br><span class="line">    led &lt;= ~led;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    led &lt;= led;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS15&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U7 IOSTANDARD LVCMOS15&#125; [get_ports sys_rst_n] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN V8 IOSTANDARD LVCMOS15&#125; [get_ports touch_key] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN V9 IOSTANDARD LVCMOS15&#125; [get_ports led]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">wire</span> led;</span><br><span class="line">  <span class="keyword">reg</span> key;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  #<span class="number">20</span></span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  #<span class="number">30</span>  <span class="comment">//50ms down</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>; </span><br><span class="line">  #<span class="number">200</span>  <span class="comment">//250ms up</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  #<span class="number">30</span>  <span class="comment">//280ms down</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>; </span><br><span class="line">  #<span class="number">200</span>  <span class="comment">//480ms up</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  #<span class="number">30</span>  <span class="comment">//510ms down</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>; </span><br><span class="line">  #<span class="number">200</span>  <span class="comment">//710ms up</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  #<span class="number">30</span>  <span class="comment">//740ms down</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>; </span><br><span class="line">  #<span class="number">200</span>  <span class="comment">//940ms up</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>#<span class="number">10</span> sys_clk = ~sys_clk; </span><br><span class="line"></span><br><span class="line">demo inst_touch_led</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.sys_clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.sys_rst_n</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.touch_key</span> (key),</span><br><span class="line">  <span class="variable">.led</span>(led)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br /><img src="/assets/article/xc7a35t-verilog/examples_a005b06c01.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>XC7A35T Verilog 例程（4）按键控蜂鸣器</title>
    <link href="https://sirius-tblog.github.io/posts/66328353.html"/>
    <id>https://sirius-tblog.github.io/posts/66328353.html</id>
    <published>2022-10-28T00:15:18.000Z</published>
    <updated>2023-04-05T04:13:17.138Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现点触式按键控制有源蜂鸣器发声效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/xc7a35t-verilog/examples_a004b03c01.jpg" alt="" title="硬件电路连接1" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a004b03c01.jpg" alt="" title="硬件电路连接2" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U7</td><td>此处复位低有效</td></tr><tr><td>beep</td><td>output</td><td>V7</td><td>BEEP，高电平驱动</td></tr><tr><td>key</td><td>input</td><td>T4</td><td>KEY0，低电平按下</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a004b04c01.jpg" alt="" title="设计思路" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a004b04c02.jpg" alt="" title="消抖思路" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> beep,</span><br><span class="line">  <span class="keyword">input</span> key</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span> key_value;</span><br><span class="line"><span class="keyword">wire</span> key_flag;</span><br><span class="line"></span><br><span class="line">key_debounce inst_key_debounce</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.key</span> (key),</span><br><span class="line">  <span class="variable">.key_flag</span> (key_flag),</span><br><span class="line">  <span class="variable">.key_value</span> (key_value)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">beep_ctrl inst_beep_ctrl</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.key_flag</span> (key_flag),</span><br><span class="line">  <span class="variable">.key_value</span> (key_value),</span><br><span class="line">  <span class="variable">.beep</span> (beep)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//key_debounce.v</span></span><br><span class="line"><span class="keyword">module</span> key_debounce</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">input</span> key,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> key_value,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> key_flag</span><br><span class="line">);</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] delay_cnt;</span><br><span class="line"><span class="keyword">reg</span> key_reg;</span><br><span class="line"></span><br><span class="line"><span class="comment">//delay time</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">key_reg &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">delay_cnt &lt;= <span class="number">32&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">key_reg &lt;= key;</span><br><span class="line"><span class="keyword">if</span>(key_reg!=key)<span class="comment">//in shaked</span></span><br><span class="line">delay_cnt &lt;= <span class="number">32&#x27;d1000000</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(key_reg==key)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(delay_cnt &gt; <span class="number">32&#x27;d0</span>)</span><br><span class="line">delay_cnt &lt;= delay_cnt-<span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">delay_cnt &lt;= delay_cnt;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//output value</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">key_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">key_value &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(delay_cnt == <span class="number">32&#x27;d1</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">key_flag &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">key_value &lt;= key;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">key_flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">key_value &lt;= key;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//beep_ctrl.v</span></span><br><span class="line"><span class="keyword">module</span> beep_ctrl</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> beep,</span><br><span class="line">  <span class="keyword">input</span> key_value,</span><br><span class="line">  <span class="keyword">input</span> key_flag</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!rstn)</span><br><span class="line">beep &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(key_flag&amp;&amp;(~key_value))</span><br><span class="line">beep &lt;= ~beep;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">beep &lt;= beep;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS15&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U7 IOSTANDARD LVCMOS15&#125; [get_ports sys_rst_n] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN T4 IOSTANDARD LVCMOS15&#125; [get_ports key] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN V7 IOSTANDARD LVCMOS15&#125; [get_ports beep]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ns/ 1 ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">wire</span> beep;</span><br><span class="line">  <span class="keyword">reg</span> key;</span><br><span class="line">  <span class="keyword">parameter</span> T=<span class="number">1000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  key = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  #<span class="number">20</span></span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="variable">#(30*T)</span>  <span class="comment">//30ms down</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>; </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>; </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>; </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(170*T)</span>  <span class="comment">//240ms  up</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>;  </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>; </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>; </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="variable">#(170*T)</span>  <span class="comment">//450ms  down</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>;  </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>; </span><br><span class="line">  <span class="variable">#(10*T)</span>  <span class="comment">//shake</span></span><br><span class="line">  key = <span class="number">1&#x27;b0</span>; </span><br><span class="line">  <span class="variable">#(30*T)</span>  <span class="comment">//520ms  up</span></span><br><span class="line">  key = <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>#<span class="number">10</span> sys_clk = ~sys_clk; </span><br><span class="line"></span><br><span class="line">demo inst_key_beep</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.sys_clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.sys_rst_n</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.beep</span> (beep),</span><br><span class="line">  <span class="variable">.key</span> (key)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br /><img src="/assets/article/xc7a35t-verilog/examples_a004b06c01.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>XC7A35T Verilog 例程（3）按键控灯</title>
    <link href="https://sirius-tblog.github.io/posts/3244215014.html"/>
    <id>https://sirius-tblog.github.io/posts/3244215014.html</id>
    <published>2022-10-27T23:55:18.000Z</published>
    <updated>2023-04-05T04:13:22.701Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现点触式按键控制LED灯点亮的效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/xc7a35t-verilog/examples_a003b03c01.jpg" alt="" title="硬件电路连接1" />{width=“400px”}<br /><img src="/assets/article/xc7a35t-verilog/examples_a003b03c02.jpg" alt="" title="硬件电路连接2" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U7</td><td>此处复位低有效</td></tr><tr><td>led[0]</td><td>output</td><td>V9</td><td>LED0，高电平点亮</td></tr><tr><td>led[1]</td><td>output</td><td>Y8</td><td>LED1，高电平点亮</td></tr><tr><td>led[2]</td><td>output</td><td>Y7</td><td>LED2，高电平点亮</td></tr><tr><td>led[3]</td><td>output</td><td>W7</td><td>LED3，高电平点亮</td></tr><tr><td>key[0]</td><td>input</td><td>T4</td><td>KEY0，低电平按下</td></tr><tr><td>key[1]</td><td>input</td><td>T3</td><td>KEY1，低电平按下</td></tr><tr><td>key[2]</td><td>input</td><td>R6</td><td>KEY2，低电平按下</td></tr><tr><td>key[3]</td><td>input</td><td>T6</td><td>KEY3，低电平按下</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a003b04c01.jpg" alt="" title="设计思路" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] led,</span><br><span class="line">  <span class="keyword">input</span> [<span class="number">3</span>:<span class="number">0</span>] key</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">key_led inst_key_led</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.led</span> (led),</span><br><span class="line">  <span class="variable">.key</span> (key)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//key_led.v</span></span><br><span class="line"><span class="keyword">module</span> key_led</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] led,</span><br><span class="line">  <span class="keyword">input</span> [<span class="number">3</span>:<span class="number">0</span>] key</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">23</span>:<span class="number">0</span>] cnt;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] led_ctrl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//delay</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    cnt &lt;= <span class="number">24&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(cnt&lt;<span class="number">24&#x27;d10000000</span>)</span><br><span class="line">    cnt &lt;= cnt+<span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    cnt&lt;=<span class="number">24&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//control</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    led_ctrl &lt;= <span class="number">2&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(cnt==(<span class="number">24&#x27;d10000000</span>-<span class="number">1&#x27;b1</span>))</span><br><span class="line">    led_ctrl &lt;= led_ctrl+<span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    led_ctrl&lt;= led_ctrl;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//key</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">0</span>]==<span class="number">1&#x27;b0</span>)</span><br><span class="line">    <span class="keyword">case</span>(led_ctrl)</span><br><span class="line">      <span class="number">2&#x27;d0</span> : led &lt;= <span class="number">4&#x27;b1000</span>;</span><br><span class="line">      <span class="number">2&#x27;d1</span> : led &lt;= <span class="number">4&#x27;b0100</span>;</span><br><span class="line">      <span class="number">2&#x27;d2</span> : led &lt;= <span class="number">4&#x27;b0010</span>;</span><br><span class="line">      <span class="number">2&#x27;d3</span> : led &lt;= <span class="number">4&#x27;b0001</span>;</span><br><span class="line">      <span class="keyword">default</span> : led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">1</span>]==<span class="number">1&#x27;b0</span>)</span><br><span class="line">    <span class="keyword">case</span>(led_ctrl)</span><br><span class="line">      <span class="number">2&#x27;d0</span> : led &lt;= <span class="number">4&#x27;b0001</span>;</span><br><span class="line">      <span class="number">2&#x27;d1</span> : led &lt;= <span class="number">4&#x27;b0010</span>;</span><br><span class="line">      <span class="number">2&#x27;d2</span> : led &lt;= <span class="number">4&#x27;b0100</span>;</span><br><span class="line">      <span class="number">2&#x27;d3</span> : led &lt;= <span class="number">4&#x27;b1000</span>;</span><br><span class="line">      <span class="keyword">default</span> : led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">2</span>]==<span class="number">1&#x27;b0</span>)</span><br><span class="line">    <span class="keyword">case</span>(led_ctrl)</span><br><span class="line">      <span class="number">2&#x27;d0</span> : led &lt;= <span class="number">4&#x27;b1111</span>;</span><br><span class="line">      <span class="number">2&#x27;d1</span> : led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">      <span class="number">2&#x27;d2</span> : led &lt;= <span class="number">4&#x27;b1111</span>;</span><br><span class="line">      <span class="number">2&#x27;d3</span> : led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">      <span class="keyword">default</span> : led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(key[<span class="number">3</span>]==<span class="number">1&#x27;b0</span>)</span><br><span class="line">      led &lt;= <span class="number">4&#x27;b1111</span>;</span><br><span class="line">  <span class="keyword">else</span>  </span><br><span class="line">    led &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS15&#125; [get_ports sys_clk]</span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U7 IOSTANDARD LVCMOS15&#125; [get_ports sys_rst_n]</span><br><span class="line">set_property -dict &#123;PACKAGE_PIN V9 IOSTANDARD LVCMOS15&#125; [get_ports led[0]]</span><br><span class="line">set_property -dict &#123;PACKAGE_PIN Y8 IOSTANDARD LVCMOS15&#125; [get_ports led[1]]</span><br><span class="line">set_property -dict &#123;PACKAGE_PIN Y7 IOSTANDARD LVCMOS15&#125; [get_ports led[2]] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN W7 IOSTANDARD LVCMOS15&#125; [get_ports led[3]]</span><br><span class="line">set_property -dict &#123;PACKAGE_PIN T4 IOSTANDARD LVCMOS15&#125; [get_ports key[0]] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN T3 IOSTANDARD LVCMOS15&#125; [get_ports key[1]] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R6 IOSTANDARD LVCMOS15&#125; [get_ports key[2]] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN T6 IOSTANDARD LVCMOS15&#125; [get_ports key[3]]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns/1ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">parameter</span> T=<span class="number">20</span>;</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">3</span>:<span class="number">0</span>] led;</span><br><span class="line">  <span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] key;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  key = <span class="number">4&#x27;b1111</span>;</span><br><span class="line">  #T</span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  key[<span class="number">0</span>] = <span class="number">1&#x27;b0</span>;  <span class="comment">//down</span></span><br><span class="line">  <span class="variable">#(40000000*T)</span>  <span class="comment">//800</span></span><br><span class="line">  key[<span class="number">0</span>] = <span class="number">1&#x27;b1</span>;  <span class="comment">//up</span></span><br><span class="line">  key[<span class="number">1</span>] = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(40000000*T)</span></span><br><span class="line">  key[<span class="number">1</span>] = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  key[<span class="number">2</span>] = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(40000000*T)</span></span><br><span class="line">  key[<span class="number">2</span>] = <span class="number">1&#x27;b1</span>;</span><br><span class="line">  key[<span class="number">3</span>] = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  <span class="variable">#(40000000*T)</span></span><br><span class="line">  key[<span class="number">3</span>] = <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span><span class="variable">#(T/2)</span> sys_clk = ~sys_clk; </span><br><span class="line"></span><br><span class="line">demo inst_key_led</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.sys_clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.sys_rst_n</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.led</span> (led),</span><br><span class="line">  <span class="variable">.key</span> (key)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br /><img src="/assets/article/xc7a35t-verilog/examples_a003b06c01.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>XC7A35T Verilog 例程（2）流水灯</title>
    <link href="https://sirius-tblog.github.io/posts/3427372113.html"/>
    <id>https://sirius-tblog.github.io/posts/3427372113.html</id>
    <published>2022-10-27T23:29:18.000Z</published>
    <updated>2023-04-05T04:13:28.452Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现LED灯按顺序以一定时间间隔逐个点亮及熄灭的效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/xc7a35t-verilog/examples_a002b03c01.jpg" alt="" title="硬件电路连接" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U7</td><td>此处复位低有效</td></tr><tr><td>led[0]</td><td>output</td><td>V9</td><td>LED0，高电平点亮</td></tr><tr><td>led[1]</td><td>output</td><td>Y8</td><td>LED1，高电平点亮</td></tr><tr><td>led[2]</td><td>output</td><td>Y7</td><td>LED2，高电平点亮</td></tr><tr><td>led[3]</td><td>output</td><td>W7</td><td>LED3，高电平点亮</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a002b04c01.jpg" alt="" title="流水灯设计思路" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] led</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">flow_led inst_flow_led</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.led</span> (led)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//flow_led.v</span></span><br><span class="line"><span class="keyword">module</span> flow_led</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] led</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">25</span>:<span class="number">0</span>] cnt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)<span class="comment">//50MHz clk</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    cnt &lt;= <span class="number">26&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(cnt&lt;<span class="number">26&#x27;d10000000</span>)<span class="comment">//200ms</span></span><br><span class="line">    cnt &lt;= cnt+<span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    cnt = <span class="number">26&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)<span class="comment">//50MHz clk</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    led &lt;= <span class="number">4&#x27;b0001</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(cnt==(<span class="number">26&#x27;d10000000</span>-<span class="number">1&#x27;b1</span>))<span class="comment">//200ms</span></span><br><span class="line">    led &lt;= &#123;led[<span class="number">2</span>:<span class="number">0</span>],led[<span class="number">3</span>]&#125;;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    led &lt;= led;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS15&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U7 IOSTANDARD LVCMOS15&#125; [get_ports sys_rst_n]</span><br><span class="line">set_property -dict &#123;PACKAGE_PIN V9 IOSTANDARD LVCMOS15&#125; [get_ports led[0]] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN Y8 IOSTANDARD LVCMOS15&#125; [get_ports led[1]] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN Y7 IOSTANDARD LVCMOS15&#125; [get_ports led[2]] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN W7 IOSTANDARD LVCMOS15&#125; [get_ports led[3]]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns/1ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">3</span>:<span class="number">0</span>] led;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">  #<span class="number">200</span></span><br><span class="line">  sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>#<span class="number">10</span> sys_clk = ~sys_clk; </span><br><span class="line"></span><br><span class="line">demo inst_flow_led</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.sys_clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.sys_rst_n</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.led</span> (led)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br /><img src="/assets/article/xc7a35t-verilog/examples_a002b06c01.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
  <entry>
    <title>XC7A35T Verilog 例程（1）闪灯</title>
    <link href="https://sirius-tblog.github.io/posts/3954518670.html"/>
    <id>https://sirius-tblog.github.io/posts/3954518670.html</id>
    <published>2022-10-27T18:29:18.000Z</published>
    <updated>2023-04-05T04:13:02.651Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。</li></ul></blockquote><h2 id="器件"><a class="markdownIt-Anchor" href="#器件"></a> 器件</h2><p>主芯片：Xilinx XC7A35TFGG484 。</p><h2 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h2><p>主要实现LED灯点亮并交替闪烁的效果。</p><h2 id="电路"><a class="markdownIt-Anchor" href="#电路"></a> 电路</h2><p>硬件连接关系：<br /><img src="/assets/article/xc7a35t-verilog/examples_a001b03c01.jpg" alt="" title="硬件电路连接" />{width=“400px”}</p><p>FPGA管脚分配：</p><table><thead><tr><th>信号</th><th>方向</th><th>管脚</th><th>说明</th></tr></thead><tbody><tr><td>sys_clk</td><td>input</td><td>R4</td><td>此处时钟50MHz</td></tr><tr><td>sys_rst_n</td><td>input</td><td>U7</td><td>此处复位低有效</td></tr><tr><td>led[0]</td><td>output</td><td>V9</td><td>LED0，高电平点亮</td></tr><tr><td>led[1]</td><td>output</td><td>Y8</td><td>LED1，高电平点亮</td></tr></tbody></table><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p><img src="/assets/article/xc7a35t-verilog/examples_a001b04c01.jpg" alt="" title="闪灯设计思路" />{width=“400px”}</p><h2 id="驱动"><a class="markdownIt-Anchor" href="#驱动"></a> 驱动</h2><p>采用模块化设计：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo.v</span></span><br><span class="line"><span class="keyword">module</span> demo</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> sys_clk,</span><br><span class="line">  <span class="keyword">input</span> sys_rst_n,</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">1</span>:<span class="number">0</span>] led</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">led_twinkle inst_led_twinkle</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.rstn</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.led</span> (led)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//led_twinkle.v</span></span><br><span class="line"><span class="keyword">module</span> led_twinkle</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">input</span> clk,</span><br><span class="line">  <span class="keyword">input</span> rstn,</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">1</span>:<span class="number">0</span>] led</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">25</span>:<span class="number">0</span>] cnt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rstn)<span class="comment">//50MHz clk</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span>(!rstn)</span><br><span class="line">    cnt &lt;= <span class="number">26&#x27;d0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(cnt&lt;<span class="number">26&#x27;d50000000</span>)<span class="comment">//1s</span></span><br><span class="line">    cnt &lt;= cnt+<span class="number">1&#x27;b1</span>;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    cnt = <span class="number">26&#x27;d0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> led = (cnt&lt;<span class="number">26&#x27;d25000000</span>)?<span class="number">2&#x27;b01</span>:<span class="number">2&#x27;b10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>管脚约束：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#demo.xdc</span></span><br><span class="line">set_property -dict &#123;PACKAGE_PIN Y8 IOSTANDARD LVCMOS15&#125; [get_ports &#123;led[1]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN V9 IOSTANDARD LVCMOS15&#125; [get_ports &#123;led[0]&#125;] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN R4 IOSTANDARD LVCMOS15&#125; [get_ports sys_clk] </span><br><span class="line">set_property -dict &#123;PACKAGE_PIN U7 IOSTANDARD LVCMOS15&#125; [get_ports sys_rst_n]</span><br></pre></td></tr></table></figure><h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2><p>功能仿真TestBench：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tb_demo.v</span></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns/1ns</span></span><br><span class="line"><span class="keyword">module</span> tb_demo();</span><br><span class="line">  <span class="keyword">reg</span> sys_clk;</span><br><span class="line">  <span class="keyword">reg</span> sys_rst_n;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">1</span>:<span class="number">0</span>] led;</span><br><span class="line"><span class="keyword">initial</span> </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">sys_clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line">sys_rst_n = <span class="number">1&#x27;b0</span>;</span><br><span class="line">#<span class="number">200</span></span><br><span class="line">sys_rst_n = <span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">always</span>#<span class="number">10</span> sys_clk = ~sys_clk; </span><br><span class="line"></span><br><span class="line">demo inst_led_twinkle</span><br><span class="line">(</span><br><span class="line">  <span class="variable">.sys_clk</span> (sys_clk),</span><br><span class="line">  <span class="variable">.sys_rst_n</span> (sys_rst_n),</span><br><span class="line">  <span class="variable">.led</span> (led)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>运行结果：<br /><img src="/assets/article/xc7a35t-verilog/examples_a001b06c01.jpg" alt="" title="仿真结果" /></p><h2 id="上板"><a class="markdownIt-Anchor" href="#上板"></a> 上板</h2><p>运行结果：<br />略</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;说明：硬件环境及例程参考“正点原子达芬奇开发板”，部分内容会有改动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;器件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#器件&quot;&gt;&lt;/a&gt; 器</summary>
      
    
    
    
    <category term="Xilinx-FPGA 例程" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T 型" scheme="https://sirius-tblog.github.io/categories/Xilinx-FPGA-%E4%BE%8B%E7%A8%8B/XC7A35T-%E5%9E%8B/"/>
    
    
    <category term="硬件电路" scheme="https://sirius-tblog.github.io/tags/%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF/"/>
    
    <category term="Xilinx" scheme="https://sirius-tblog.github.io/tags/Xilinx/"/>
    
    <category term="FPGA" scheme="https://sirius-tblog.github.io/tags/FPGA/"/>
    
    <category term="例程" scheme="https://sirius-tblog.github.io/tags/%E4%BE%8B%E7%A8%8B/"/>
    
    <category term="XC7A35T" scheme="https://sirius-tblog.github.io/tags/XC7A35T/"/>
    
  </entry>
  
</feed>
